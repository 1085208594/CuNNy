// CuNNy 2x12 NVL SOFT - https://github.com/funnyplanter/CuNNy

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


//!MAGPIE EFFECT
//!VERSION 4
//!SORT_NAME CuNNy-SOFT-0000348

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
Texture2D OUTPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!COMMON
#define O(t, x, y) t.SampleLevel(SP, pos + float2(x, y) * pt, 0)
#define V4 min16float4
#define M4 min16float4x4

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T4;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T5;

//!PASS 1
//!DESC in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT T0, T1, T2
#define L0(x, y) min16float(dot(float3(0.299, 0.587, 0.114), O(INPUT, x, y).rgb))
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	r0 += V4(-2.588e-02, -5.397e-02, 2.222e-03, -4.437e-02) * s0_0_0;
	r1 += V4(-6.706e-02, 8.014e-02, 2.694e-02, -1.418e-02) * s0_0_0;
	r2 += V4(-3.601e-01, 2.598e-02, 9.210e-02, -3.291e-01) * s0_0_0;
	r0 += V4(-1.830e-01, 2.092e-02, -1.973e-02, 1.382e-01) * s0_0_1;
	r1 += V4(6.218e-02, -1.133e-02, -4.275e-02, 5.169e-03) * s0_0_1;
	r2 += V4(4.329e-01, -1.147e-02, 8.770e-01, -2.726e-01) * s0_0_1;
	r0 += V4(2.394e-02, 1.398e-01, 1.598e-02, -9.595e-02) * s0_0_2;
	r1 += V4(1.213e-02, -6.003e-02, 2.814e-02, 8.185e-03) * s0_0_2;
	r2 += V4(1.377e-01, 3.484e-03, 2.730e-02, 5.957e-01) * s0_0_2;
	r0 += V4(1.830e-02, 3.311e-01, -7.484e-01, -1.633e-01) * s0_1_0;
	r1 += V4(-1.121e+00, 6.592e-02, -4.542e-02, -6.275e-01) * s0_1_0;
	r2 += V4(2.426e-01, 1.105e+00, -9.552e-02, 7.604e-01) * s0_1_0;
	r0 += V4(5.098e-01, 3.359e-01, 1.101e+00, 4.912e-01) * s0_1_1;
	r1 += V4(-1.010e-01, -4.112e-01, -1.073e+00, 1.340e-02) * s0_1_1;
	r2 += V4(-1.190e+00, -1.105e+00, -8.558e-01, -5.129e-01) * s0_1_1;
	r0 += V4(-7.706e-01, -2.922e-01, -7.586e-03, 5.377e-02) * s0_1_2;
	r1 += V4(-1.090e-02, 3.081e-01, 1.079e+00, 7.920e-03) * s0_1_2;
	r2 += V4(3.291e-01, -3.727e-02, -2.400e-02, -2.900e-01) * s0_1_2;
	r0 += V4(-7.209e-02, 8.121e-03, -6.548e-04, -5.684e-01) * s0_2_0;
	r1 += V4(1.152e+00, -1.393e-01, 1.776e-02, 2.333e-02) * s0_2_0;
	r2 += V4(3.213e-01, 3.311e-02, 6.108e-03, -4.269e-01) * s0_2_0;
	r0 += V4(1.897e-01, -4.541e-01, -3.307e-01, 1.018e-01) * s0_2_1;
	r1 += V4(7.754e-02, 3.838e-01, -4.367e-02, 6.230e-01) * s0_2_1;
	r2 += V4(3.155e-01, -1.370e-02, -3.420e-02, 7.794e-01) * s0_2_1;
	r0 += V4(1.584e-01, -9.715e-02, -8.607e-03, 7.390e-02) * s0_2_2;
	r1 += V4(-3.575e-03, -1.938e-01, 5.145e-02, -3.988e-02) * s0_2_2;
	r2 += V4(-2.378e-01, -7.126e-03, 9.501e-03, -3.104e-01) * s0_2_2;
	r0 += V4(4.968e-03, 3.970e-03, 1.336e-03, -1.307e-03);
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 += V4(3.509e-03, 2.900e-02, -5.301e-04, 1.523e-03);
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 += V4(9.497e-04, -1.412e-03, 3.906e-04, -8.846e-04);
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 2
//!DESC conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T0, T1, T2
//!OUT T3, T4, T5
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-8.926e-02, -6.113e-02, 3.615e-02, -1.253e-01, -1.700e-01, 1.165e-01, 4.205e-01, 4.388e-01, 1.694e-01, 7.923e-03, -3.550e-01, -1.866e-02, -3.974e-01, -4.953e-04, -2.908e-01, 1.509e-01));
	r1 += mul(s0_0_0, M4(-6.537e-02, -8.568e-02, -3.236e-01, 5.053e-03, -4.807e-02, 3.281e-01, 5.793e-01, -1.956e-01, -6.732e-03, -1.018e-02, -3.415e-02, 1.727e-01, 3.679e-02, 1.304e-01, -2.495e-01, -5.138e-02));
	r2 += mul(s0_0_0, M4(-1.994e-01, 7.383e-02, -1.924e-02, -2.751e-01, 3.054e-03, 9.898e-02, -2.310e-02, -4.955e-01, 2.303e-02, 4.577e-02, 2.864e-02, -1.514e-02, 6.856e-02, -1.222e-01, -8.185e-02, 1.492e-01));
	r0 += mul(s0_0_1, M4(-2.134e-01, 3.137e-02, -1.749e-02, 1.077e-01, -2.915e-01, -5.912e-02, -8.948e-02, 1.695e-01, -1.345e-02, 1.479e-02, 2.425e-01, -6.696e-02, -1.339e-01, 8.762e-02, 1.465e-01, 6.342e-01));
	r1 += mul(s0_0_1, M4(5.129e-02, 1.261e-01, -6.568e-03, 1.821e-01, 1.613e-01, -1.121e-01, -2.591e-01, -2.339e-01, 4.278e-01, 3.193e-01, -3.269e-01, 3.850e-01, -1.192e-01, 8.890e-02, -5.355e-03, 3.937e-01));
	r2 += mul(s0_0_1, M4(-9.873e-02, -1.354e-01, -2.656e-02, -1.000e+00, -2.630e-01, 7.486e-02, -1.653e-02, 3.226e-01, 8.117e-02, 1.284e-01, 6.180e-02, 6.389e-01, -4.346e-02, -2.912e-01, 4.945e-04, -5.961e-02));
	r0 += mul(s0_0_2, M4(-1.202e-01, -2.009e-02, 8.944e-02, -2.509e-02, 4.477e-02, -3.410e-02, 9.895e-02, 1.869e-01, -8.260e-02, 2.803e-01, 9.422e-01, -5.539e-01, -4.512e-02, -1.443e-01, -6.981e-01, 4.397e-01));
	r1 += mul(s0_0_2, M4(-4.540e-02, -4.558e-02, 8.181e-02, 2.562e-02, 9.507e-02, 3.430e-02, -1.143e-01, 2.608e-01, -7.311e-02, 8.623e-02, 6.210e-01, 7.252e-02, -1.205e-01, -1.930e-01, -2.998e-01, 6.257e-01));
	r2 += mul(s0_0_2, M4(1.030e-01, -7.075e-02, 2.898e-02, 1.230e-01, -2.440e-01, 2.912e-02, -2.402e-02, -3.504e-01, 5.418e-01, 7.081e-02, 1.516e-01, 3.606e-01, -1.001e-01, -3.162e-01, -3.580e-02, -2.531e-01));
	r0 += mul(s0_1_0, M4(-7.009e-01, 5.218e-02, 1.475e-02, 3.371e-01, -9.734e-02, -9.393e-03, 1.206e-01, -2.075e-01, 9.020e-02, -9.745e-02, -1.238e-01, -2.267e-01, -6.530e-02, 5.012e-02, -1.988e-01, 1.510e-01));
	r1 += mul(s0_1_0, M4(-2.455e-02, 2.501e-01, -3.915e-01, 3.855e-01, -5.739e-03, 2.853e-01, -2.985e-01, -1.272e-02, -1.200e-02, 1.113e-01, -1.402e-01, 6.307e-02, 3.132e-02, -1.274e-01, 7.303e-01, -9.764e-02));
	r2 += mul(s0_1_0, M4(1.656e-01, 3.490e-02, 6.683e-03, -4.230e-02, -1.765e-01, 2.212e-01, 6.489e-02, 2.193e-01, -1.292e-01, 1.481e-01, 8.664e-02, -2.732e-01, 3.068e-01, -1.805e-01, 1.785e-01, 2.413e-01));
	r0 += mul(s0_1_1, M4(-2.759e-01, -2.943e-03, 1.987e-02, -3.018e-01, 2.686e-01, -2.309e-01, -5.039e-01, 2.137e-01, -2.046e-01, -1.490e-01, -7.623e-02, -3.486e-01, -2.408e-01, -2.148e-02, -1.871e-01, -8.963e-02));
	r1 += mul(s0_1_1, M4(-9.435e-02, 3.152e-02, 1.732e-01, -3.776e-02, -5.025e-03, -2.513e-01, 1.934e-01, 1.780e-01, -1.125e-01, -1.898e-01, 2.496e-01, 4.271e-01, 1.852e-02, 1.790e-01, -8.244e-01, -3.350e-01));
	r2 += mul(s0_1_1, M4(8.136e-02, -2.171e-02, 1.124e-02, -1.000e+00, 1.668e-02, 1.586e-02, 2.796e-02, 2.880e-02, 7.329e-02, -1.397e-01, -2.144e-01, -4.170e-02, -3.142e-01, -3.907e-01, -1.106e-01, -3.163e-01));
	r0 += mul(s0_1_2, M4(1.578e-01, 1.759e-02, -1.506e-01, -4.231e-02, -1.261e-01, 6.616e-02, 1.825e-01, -1.088e-01, -4.311e-01, 4.228e-01, -1.966e-01, -1.455e-02, -9.193e-02, 5.734e-02, 6.381e-01, 2.758e-01));
	r1 += mul(s0_1_2, M4(4.286e-02, 2.509e-02, 9.652e-03, 2.111e-01, -7.851e-02, -6.705e-02, -1.065e-01, -1.685e-01, 6.812e-02, 2.904e-02, -1.168e-01, -1.114e-01, 1.112e-01, -1.286e-02, 1.573e-01, 2.447e-01));
	r2 += mul(s0_1_2, M4(-8.914e-02, -8.374e-02, -2.668e-02, -2.183e-01, 2.164e-01, 3.174e-01, -5.103e-03, 2.266e-01, 1.871e-01, 6.191e-02, -2.398e-02, 1.919e-02, -2.693e-01, -2.788e-01, -4.319e-02, -4.772e-01));
	r0 += mul(s0_2_0, M4(3.883e-01, -3.530e-02, -2.275e-01, -1.628e-01, -1.815e-01, 5.087e-03, 7.436e-02, -1.238e-01, 1.950e-02, 6.085e-02, 2.770e-01, -3.607e-02, 6.572e-02, -1.000e-02, -3.548e-01, -6.759e-02));
	r1 += mul(s0_2_0, M4(3.987e-02, 7.008e-01, -1.268e-01, -1.810e-01, 3.261e-02, 6.852e-02, 5.527e-01, -1.564e-01, -3.504e-02, 1.486e-01, -7.383e-02, -2.909e-02, 7.337e-03, -7.896e-02, -1.962e-02, 1.985e-01));
	r2 += mul(s0_2_0, M4(-1.452e-01, 2.307e-01, 6.073e-02, -1.399e-01, 3.139e-02, -3.985e-03, 1.057e-01, -1.536e-01, -2.016e-01, 5.626e-02, -1.135e-01, -2.588e-01, -3.206e-02, -6.785e-02, -3.727e-02, 7.320e-02));
	r0 += mul(s0_2_1, M4(2.383e-01, 9.952e-02, -1.303e-01, 1.081e-01, 4.448e-01, 1.700e-02, 3.749e-01, -4.733e-03, 1.628e-02, 7.792e-02, 2.204e-02, 1.517e-01, -1.347e-01, -4.908e-02, -3.415e-01, 1.439e-01));
	r1 += mul(s0_2_1, M4(-3.030e-02, -1.962e-02, -5.066e-02, -8.845e-02, 1.172e-02, 3.377e-02, -2.037e-01, 1.339e-01, -6.909e-02, -9.474e-02, 2.731e-02, -2.622e-01, 4.122e-02, 1.370e-02, -1.471e-01, 6.799e-03));
	r2 += mul(s0_2_1, M4(1.818e-03, -6.050e-04, -5.550e-02, -3.052e-01, 3.813e-01, -3.624e-02, -3.217e-02, -4.268e-02, -4.096e-01, 1.273e-01, 1.503e-03, -2.857e-01, 1.160e-01, -8.145e-02, 5.959e-02, 2.235e-01));
	r0 += mul(s0_2_2, M4(-1.632e-02, -9.358e-03, -1.066e-01, 5.732e-02, 4.601e-02, -5.853e-02, 2.075e-01, -3.413e-02, -1.115e-01, 2.329e-02, -1.999e-01, 1.243e-01, -4.342e-01, -1.214e-02, -2.297e-01, 1.238e-01));
	r1 += mul(s0_2_2, M4(8.724e-03, 3.292e-02, 1.054e-01, -1.420e-02, -2.750e-02, 5.258e-03, -2.049e-01, -1.688e-01, 2.241e-02, -4.873e-02, 1.491e-01, 4.649e-02, 1.215e-02, -1.168e-02, -1.360e-01, 2.848e-01));
	r2 += mul(s0_2_2, M4(-4.696e-02, -1.244e-01, 8.143e-03, 1.533e-02, 5.097e-02, 2.516e-01, 2.885e-02, 3.404e-01, -1.516e-01, -2.020e-01, -3.783e-02, -1.265e-01, 9.290e-02, -1.079e-01, -2.975e-03, 5.073e-02));
	r0 += mul(s1_0_0, M4(5.368e-02, 3.188e-02, -2.930e-01, 5.711e-02, -6.462e-01, 1.684e-01, 1.000e+00, 4.796e-01, 1.000e+00, -4.875e-02, -1.000e+00, -2.822e-01, 7.241e-02, 7.471e-03, 1.000e+00, -6.196e-02));
	r1 += mul(s1_0_0, M4(6.212e-03, 8.199e-03, 5.360e-02, 5.897e-02, 3.887e-02, 4.749e-01, 4.985e-01, 4.016e-01, -8.994e-02, -6.149e-02, -3.323e-01, -1.223e-01, -5.035e-03, 2.693e-02, 2.469e-01, -1.354e-01));
	r2 += mul(s1_0_0, M4(1.980e-01, 9.264e-02, -1.779e-02, -5.054e-02, 1.824e-01, -5.938e-02, -4.499e-02, 5.672e-02, -2.595e-02, -8.279e-02, -1.916e-02, 2.721e-01, -2.402e-01, 1.480e-01, 2.388e-03, 4.812e-02));
	r0 += mul(s1_0_1, M4(4.938e-02, -2.787e-02, -1.000e+00, -2.948e-02, -4.913e-01, -1.402e-01, -2.086e-01, -3.792e-01, 3.860e-01, -1.545e-01, -5.845e-01, 3.816e-01, -4.172e-01, -1.015e-01, -7.144e-01, -6.738e-01));
	r1 += mul(s1_0_1, M4(-1.469e-01, -2.769e-01, -6.113e-01, 1.067e-01, -1.451e-01, -2.352e-01, 9.783e-02, -3.875e-02, -1.503e-02, -3.098e-02, -5.863e-01, 1.860e-01, -1.861e-01, -5.228e-01, 8.463e-02, -8.426e-01));
	r2 += mul(s1_0_1, M4(-2.280e-01, -4.279e-04, -1.244e-02, -4.466e-01, -1.840e-01, -1.186e-02, -3.724e-02, -6.601e-01, -3.723e-01, 1.539e-02, -4.262e-02, 4.987e-01, 2.599e-01, 4.246e-01, -1.703e-02, -1.293e-01));
	r0 += mul(s1_0_2, M4(3.790e-01, -2.347e-02, -1.000e+00, -4.285e-01, -7.884e-02, -4.973e-02, 4.079e-01, -1.160e-01, 1.108e-01, -4.959e-02, -2.082e-01, 8.417e-02, -2.074e-01, 1.593e-01, 5.563e-01, -6.560e-02));
	r1 += mul(s1_0_2, M4(-1.000e+00, -4.837e-01, -7.333e-02, -5.406e-01, -6.728e-03, -2.797e-01, 2.049e-01, 3.848e-01, -6.470e-02, -6.175e-02, -4.803e-02, -1.086e-01, 1.185e-01, 4.876e-01, 5.137e-01, -8.229e-01));
	r2 += mul(s1_0_2, M4(3.823e-02, -3.114e-01, 5.902e-03, 1.097e-01, -1.448e-01, -8.725e-02, 5.881e-02, 6.110e-01, 5.474e-02, -2.424e-02, 1.042e-02, -2.512e-01, 4.288e-01, 2.480e-01, -4.437e-02, 5.449e-01));
	r0 += mul(s1_1_0, M4(1.471e-01, 2.057e-02, -3.647e-02, -2.957e-02, 1.078e-01, -1.433e-01, -1.218e-01, -1.597e-01, 6.440e-02, -2.712e-03, -1.000e+00, -6.400e-01, -4.748e-02, 2.645e-02, 1.396e-01, 6.213e-02));
	r1 += mul(s1_1_0, M4(1.046e-02, 1.661e-02, 6.314e-02, 1.001e-02, 9.692e-02, 1.650e-02, -4.984e-01, 1.209e-02, 3.576e-02, -7.355e-01, 3.443e-01, -2.291e-01, 3.346e-03, -1.577e-01, -4.032e-01, -1.498e-01));
	r2 += mul(s1_1_0, M4(2.094e-01, 4.199e-02, 5.556e-02, 4.293e-02, -3.918e-01, 9.277e-02, 1.028e-01, -2.617e-01, -1.563e-01, 1.082e-01, 7.153e-02, -5.788e-02, 1.257e-01, 1.308e-02, -1.084e-01, 5.142e-02));
	r0 += mul(s1_1_1, M4(3.343e-01, 1.169e-01, -4.070e-01, 2.485e-01, -2.054e-01, 4.282e-01, -9.858e-01, 2.816e-01, 1.000e+00, 8.206e-02, 4.504e-01, -7.325e-01, -3.854e-01, 1.562e-01, 6.307e-01, 1.813e-01));
	r1 += mul(s1_1_1, M4(2.225e-03, -8.843e-02, 1.366e-01, 3.445e-02, -7.341e-02, -2.886e-02, -2.056e-01, -1.798e-01, -8.791e-02, 4.056e-01, -1.286e-01, -2.977e-01, 3.050e-02, -6.060e-03, 2.760e-01, 4.315e-01));
	r2 += mul(s1_1_1, M4(-4.199e-01, -2.123e-01, -1.987e-02, 1.775e-01, -1.087e-02, 1.768e-01, -1.040e-01, 1.395e-01, -1.232e-01, 2.381e-01, 9.704e-02, -7.235e-02, 3.359e-01, 2.184e-01, 3.057e-01, -2.211e-01));
	r0 += mul(s1_1_2, M4(5.787e-01, 1.815e-01, 3.965e-01, 2.719e-01, 7.247e-01, -1.946e-01, -1.039e-01, -2.585e-02, -6.987e-03, -8.495e-02, 9.876e-02, -6.026e-03, -1.236e-01, 1.607e-01, -4.287e-01, 1.635e-01));
	r1 += mul(s1_1_2, M4(8.478e-02, -8.919e-02, -1.013e-01, 1.297e-01, 5.451e-03, -1.085e-01, 2.747e-01, -2.125e-01, 1.155e-02, -9.461e-02, -6.850e-02, 1.612e-02, 3.762e-02, 8.286e-03, -1.363e-01, -6.813e-01));
	r2 += mul(s1_1_2, M4(2.393e-01, -5.662e-02, -9.792e-02, 5.884e-01, -7.173e-02, -1.183e-01, 1.320e-02, 1.564e-01, -9.378e-02, 7.495e-02, -2.210e-02, -4.639e-01, -3.610e-02, 3.174e-01, -9.937e-02, -6.746e-01));
	r0 += mul(s1_2_0, M4(7.711e-02, -1.678e-02, -4.681e-02, 4.159e-03, 1.795e-02, -6.930e-02, 9.316e-02, -7.942e-02, 5.560e-02, 3.413e-02, 1.702e-01, 2.253e-01, 6.430e-02, -3.944e-02, 1.441e-01, 6.118e-02));
	r1 += mul(s1_2_0, M4(6.699e-03, 6.383e-04, -5.751e-02, 8.159e-03, 6.658e-02, 2.807e-01, -2.578e-01, -5.300e-01, -2.762e-03, -3.227e-01, -5.782e-01, 3.267e-01, -2.063e-02, -6.578e-02, -1.505e-01, 2.853e-02));
	r2 += mul(s1_2_0, M4(-1.988e-01, 2.317e-02, 1.454e-04, 3.260e-02, 7.499e-01, 1.140e-01, -5.127e-02, -2.521e-02, -1.000e+00, 1.027e-02, -1.000e+00, -9.900e-02, 4.430e-02, 1.996e-02, 1.984e-02, -2.477e-02));
	r0 += mul(s1_2_1, M4(1.674e-01, -4.016e-02, -3.930e-01, -4.285e-02, 1.843e-02, -3.910e-02, -4.924e-01, 1.028e-01, -2.157e-02, 1.077e-01, -5.217e-02, -8.649e-02, -1.753e-01, -1.328e-02, 2.168e-01, 2.820e-02));
	r1 += mul(s1_2_1, M4(1.966e-02, -1.411e-01, -2.002e-01, 1.491e-02, 8.934e-02, 1.652e-01, -2.382e-01, 4.077e-01, -5.066e-02, 9.827e-02, -2.351e-01, 3.378e-02, -3.577e-02, 7.255e-02, -2.553e-01, -2.552e-01));
	r2 += mul(s1_2_1, M4(-1.000e+00, 5.239e-02, -5.293e-01, 1.305e-02, 2.860e-02, 1.742e-01, 1.283e-01, -4.631e-01, 3.325e-01, -4.028e-02, 1.739e-01, 4.689e-01, -8.295e-01, 1.852e-01, -7.799e-03, 1.444e-01));
	r0 += mul(s1_2_2, M4(-1.253e-01, -8.386e-02, -1.880e-01, -2.561e-02, -3.239e-01, 2.111e-02, 1.450e-01, 1.721e-01, 9.274e-02, -4.676e-03, -1.509e-01, -1.083e-03, 2.828e-01, -1.632e-02, 1.883e-01, 1.100e-01));
	r1 += mul(s1_2_2, M4(-2.090e-02, -1.140e-01, 1.882e-01, 3.949e-02, -5.175e-02, -1.367e-01, -1.646e-02, -3.074e-02, 1.399e-02, 5.208e-02, 1.640e-02, 5.348e-03, -1.040e-03, 2.253e-03, 9.603e-02, -5.037e-02));
	r2 += mul(s1_2_2, M4(-2.257e-01, -1.685e-01, 4.088e-02, 4.049e-02, -7.000e-02, -8.051e-03, -4.201e-02, 1.075e-01, 1.217e-01, -2.190e-02, 7.963e-03, -3.950e-01, -9.371e-02, 9.494e-02, 8.450e-03, -8.188e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-5.059e-01, -3.749e-02, 4.028e-01, 1.774e-02, -6.965e-02, -5.631e-03, -4.937e-02, -5.785e-03, 1.072e-01, 1.436e-02, -1.840e-01, -3.537e-02, 1.054e-02, 1.660e-02, -7.653e-02, 9.795e-02));
	r1 += mul(s0_0_0, M4(-7.060e-03, 6.499e-02, 1.998e-01, -4.714e-02, 1.639e-03, -9.390e-02, -1.427e-01, 2.203e-02, -3.941e-03, 7.495e-02, -1.125e-01, 5.001e-02, 2.905e-03, 9.105e-02, -4.465e-02, 1.900e-01));
	r2 += mul(s0_0_0, M4(-1.446e-01, -2.253e-01, 1.732e-02, 3.580e-02, -1.125e-01, 6.290e-02, -2.798e-02, 1.219e-02, 1.305e-01, 9.327e-02, 1.412e-02, -3.501e-02, 1.611e-01, -1.389e-02, 8.561e-03, 1.642e-01));
	r0 += mul(s0_0_1, M4(-5.462e-01, -6.490e-02, 1.582e-01, 3.296e-02, -5.921e-01, -1.649e-03, -1.042e-01, 8.544e-02, -4.371e-02, 1.870e-03, -1.285e-02, -6.797e-02, -1.629e-01, 1.323e-02, 2.595e-01, 3.356e-02));
	r1 += mul(s0_0_1, M4(1.307e-01, 1.886e-01, 1.304e-01, 6.084e-02, -1.557e-01, -1.624e-01, -1.000e+00, 1.489e-01, -9.112e-02, -8.353e-02, 1.171e-01, -1.121e-01, -2.428e-02, 1.010e-01, 1.379e-01, -2.192e-01));
	r2 += mul(s0_0_1, M4(-1.313e-01, -1.764e-01, 8.250e-03, -3.131e-01, 6.858e-02, 8.670e-02, -3.298e-02, -3.936e-01, 5.774e-02, 7.195e-02, 3.893e-03, -7.753e-02, 1.559e-01, -6.598e-02, 2.807e-02, 5.892e-02));
	r0 += mul(s0_0_2, M4(-1.843e-01, 6.141e-02, 2.535e-01, -3.743e-02, 5.603e-02, 6.816e-02, -3.021e-02, -2.298e-02, -6.107e-03, 7.790e-03, -2.725e-01, -1.098e-01, -2.650e-02, -4.015e-02, -9.587e-03, 6.800e-03));
	r1 += mul(s0_0_2, M4(1.116e-01, 2.927e-01, 1.739e-01, 4.181e-02, -4.562e-02, 4.801e-02, 6.519e-02, -5.332e-01, -9.580e-02, -1.460e-01, -1.076e-01, 1.652e-01, -5.167e-02, -2.278e-02, -8.103e-02, 4.393e-02));
	r2 += mul(s0_0_2, M4(5.608e-03, -9.557e-02, 3.119e-02, -5.943e-01, 8.496e-02, -5.707e-02, 6.487e-03, -1.000e+00, -4.210e-02, 3.454e-02, -3.198e-02, -1.000e+00, 8.229e-02, 2.718e-02, 1.020e-02, -3.588e-01));
	r0 += mul(s0_1_0, M4(-7.648e-01, 3.816e-04, 2.236e-01, 2.813e-01, 4.486e-02, 3.864e-02, -2.077e-01, -1.073e-02, 4.605e-01, -3.350e-02, -3.411e-02, -5.061e-01, -4.872e-01, 3.750e-02, 2.223e-01, -1.902e-02));
	r1 += mul(s0_1_0, M4(-2.056e-03, 1.302e-01, -3.278e-01, 5.860e-03, -1.048e-02, -5.471e-02, -2.277e-01, 1.656e-01, 1.480e-01, 2.262e-01, 4.835e-01, 2.689e-01, 3.725e-02, -5.507e-02, 1.674e-01, 1.795e-01));
	r2 += mul(s0_1_0, M4(-9.077e-02, -2.285e-01, -7.448e-02, -2.686e-01, -5.985e-01, -7.990e-02, 7.691e-02, 5.310e-02, 1.636e-01, -1.946e-01, 8.194e-02, 8.377e-01, 2.836e-01, -1.729e-01, 8.152e-02, 6.973e-02));
	r0 += mul(s0_1_1, M4(-1.000e+00, 8.934e-02, -3.261e-01, 2.457e-01, 6.697e-01, 4.977e-02, 3.584e-01, 1.392e-01, 6.310e-02, -6.503e-02, 2.461e-01, -2.189e-01, -3.489e-01, 1.032e-01, 7.653e-02, -2.762e-01));
	r1 += mul(s0_1_1, M4(3.743e-02, 7.649e-02, 4.785e-01, 2.881e-01, 1.499e-01, -2.965e-02, -1.000e+00, -6.833e-02, 6.399e-01, 1.925e-01, -1.728e-01, -6.298e-01, 4.283e-03, 1.858e-01, -1.810e-01, -6.198e-01));
	r2 += mul(s0_1_1, M4(-3.059e-01, -4.339e-03, -8.281e-02, -8.308e-01, 1.907e-01, 2.209e-01, 2.711e-01, 3.676e-01, 1.197e-01, 3.202e-01, 3.043e-02, -1.281e-01, 2.827e-01, -1.778e-01, 6.676e-03, -9.531e-02));
	r0 += mul(s0_1_2, M4(-3.803e-01, 8.921e-02, 2.113e-01, -5.099e-02, -2.604e-01, -4.640e-02, -2.599e-01, -1.166e-01, 1.326e-01, -7.429e-02, -3.028e-01, -9.267e-02, -7.783e-02, -2.745e-02, 1.649e-01, 1.538e-01));
	r1 += mul(s0_1_2, M4(-2.763e-02, 7.602e-02, 1.805e-01, 2.120e-01, 5.817e-02, -6.073e-01, -3.034e-03, -6.923e-01, 7.347e-02, 1.839e-02, -3.114e-01, -3.381e-01, 3.680e-02, 2.116e-01, -1.115e-01, 8.898e-02));
	r2 += mul(s0_1_2, M4(4.272e-02, -9.777e-02, -6.211e-03, -8.869e-02, 1.987e-01, -2.122e-01, -9.390e-03, 7.136e-02, -4.654e-02, 2.181e-01, -1.015e-01, -5.853e-02, 2.282e-03, -5.762e-02, 5.294e-03, -1.413e-01));
	r0 += mul(s0_2_0, M4(-6.179e-01, 7.395e-02, 2.828e-01, 2.128e-01, 2.355e-02, -4.490e-02, -3.108e-01, -5.324e-02, 3.196e-01, -3.679e-02, 2.594e-01, -7.685e-02, -5.548e-01, 4.610e-02, 5.306e-01, 1.880e-01));
	r1 += mul(s0_2_0, M4(-8.463e-03, 1.425e-01, 5.281e-01, 1.557e-01, 1.944e-02, -7.686e-02, -6.393e-01, -1.231e-01, 5.725e-02, -2.802e-01, -5.791e-01, 2.997e-01, -3.194e-02, -5.801e-02, 3.416e-01, 1.971e-01));
	r2 += mul(s0_2_0, M4(2.757e-01, -2.016e-01, -5.634e-02, -9.967e-02, -1.000e+00, 6.114e-02, -6.738e-01, 9.223e-02, -1.000e+00, 3.547e-01, -2.841e-01, 1.173e-01, 2.051e-01, -1.270e-01, -8.775e-02, -5.018e-02));
	r0 += mul(s0_2_1, M4(-7.455e-01, 1.425e-01, 2.789e-01, -7.392e-02, 4.399e-01, -6.965e-02, -1.410e-01, -3.058e-01, 5.016e-02, 3.175e-02, -1.845e-01, -9.490e-01, -2.701e-01, 1.976e-02, 4.719e-01, 1.194e-02));
	r1 += mul(s0_2_1, M4(1.244e-02, -4.345e-02, 4.673e-02, 9.484e-02, -3.792e-02, -2.900e-01, 2.703e-02, 3.653e-02, -8.249e-02, -4.850e-01, 2.178e-02, -2.505e-01, 1.149e-02, -2.573e-02, 1.850e-01, -1.355e-02));
	r2 += mul(s0_2_1, M4(4.772e-01, -8.719e-02, 5.156e-02, -1.933e-01, -5.797e-02, 5.817e-02, 6.091e-01, 4.844e-01, -2.974e-01, -7.609e-02, 2.357e-02, 2.393e-01, 2.637e-01, -2.724e-01, 6.809e-03, -1.071e-01));
	r0 += mul(s0_2_2, M4(-3.044e-01, -1.330e-03, 2.677e-01, -1.804e-01, 3.429e-01, -9.058e-02, -4.256e-01, 1.785e-01, -5.891e-01, -1.283e-01, -8.759e-01, 3.009e-02, -4.385e-01, 5.924e-02, -1.059e-01, 1.932e-02));
	r1 += mul(s0_2_2, M4(6.020e-02, 1.830e-01, -1.250e-01, 1.605e-01, -6.346e-02, -1.069e-01, 1.442e-01, -1.368e-01, 7.916e-02, -1.704e-01, 2.618e-02, 2.379e-01, 4.228e-02, 2.333e-02, 7.836e-02, 3.038e-03));
	r2 += mul(s0_2_2, M4(3.966e-02, 1.105e-02, 9.596e-03, 2.398e-01, -1.929e-01, -1.130e-01, -2.326e-02, -4.860e-01, -3.220e-01, -4.499e-02, -3.164e-02, -1.891e-01, 7.597e-03, 1.666e-03, 2.597e-03, -6.705e-02));
	r0 = max(r0, 0.0);
	T3[gxy] = r0;
	r1 = max(r1, 0.0);
	T4[gxy] = r1;
	r2 = max(r2, 0.0);
	T5[gxy] = r2;
}
//!PASS 3
//!DESC conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T3, T4, T5
//!OUT T0, T1, T2
#define L0(x, y) V4(O(T3, x, y))
#define L1(x, y) V4(O(T4, x, y))
#define L2(x, y) V4(O(T5, x, y))
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-6.176e-02, 2.815e-02, -5.960e-02, -7.506e-02, 1.848e-02, 3.888e-02, -2.154e-02, 1.540e-03, -1.393e-01, 5.623e-03, -2.509e-01, -6.149e-03, 5.600e-02, -2.563e-02, -3.113e-02, 4.271e-03));
	r1 += mul(s0_0_0, M4(-1.738e-01, -1.865e-02, -3.101e-02, -3.596e-03, -5.628e-02, -4.665e-02, -7.264e-03, 6.574e-03, 9.281e-02, -1.062e-01, -8.909e-03, 1.557e-01, -8.499e-02, -2.984e-02, 3.634e-02, -6.971e-02));
	r2 += mul(s0_0_0, M4(-4.040e-02, 1.133e-01, 2.334e-02, 3.602e-02, -2.301e-02, 2.093e-02, -1.505e-02, -6.391e-03, -6.049e-01, -5.648e-02, -8.564e-01, 5.187e-02, 1.375e-01, 1.777e-02, -6.052e-02, -1.169e-02));
	r0 += mul(s0_0_1, M4(-9.598e-03, -3.517e-05, 1.783e-02, 2.295e-02, 9.722e-03, -8.441e-02, -2.314e-02, -2.811e-02, 2.056e-03, -1.350e-01, -3.590e-01, 2.377e-02, 2.646e-02, -5.033e-02, -2.535e-01, 3.608e-02));
	r1 += mul(s0_0_1, M4(-5.272e-01, -9.134e-02, -4.017e-02, -7.756e-02, -7.621e-01, 1.743e-02, -5.344e-02, 1.914e-02, 5.009e-01, -5.434e-02, 2.901e-03, 9.309e-03, -1.570e-01, 1.284e-02, 1.366e-02, -2.192e-01));
	r2 += mul(s0_0_1, M4(3.001e-02, -1.923e-01, 1.591e-01, -2.387e-02, -3.724e-02, 7.673e-02, 1.547e-01, -7.603e-02, -3.960e-01, 6.133e-02, -8.332e-01, 5.804e-02, 1.361e-02, -7.216e-01, 2.099e-02, -2.385e-02));
	r0 += mul(s0_0_2, M4(3.353e-03, -7.986e-03, -4.482e-02, -3.215e-02, -5.296e-02, 7.887e-03, 3.353e-02, -2.591e-02, -2.934e-02, -2.773e-02, -3.749e-01, 3.110e-02, -2.648e-02, -8.732e-03, 2.613e-02, -9.415e-03));
	r1 += mul(s0_0_2, M4(9.411e-02, -7.918e-03, -3.936e-02, -1.039e-01, 1.508e-01, -5.236e-03, -3.993e-02, -2.336e-02, 1.980e-01, -6.239e-03, 2.380e-02, 1.365e-02, -3.268e-01, 1.061e-02, 4.626e-03, -3.361e-02));
	r2 += mul(s0_0_2, M4(1.038e-01, -8.815e-02, 3.360e-02, -7.743e-02, -5.237e-02, 4.176e-03, 4.377e-02, -2.549e-02, -5.602e-01, 1.541e-01, -6.713e-01, 5.736e-02, -1.613e-02, -4.278e-03, -9.922e-02, -3.431e-02));
	r0 += mul(s0_1_0, M4(4.515e-02, -1.104e-02, -1.565e-02, 1.202e-01, 1.209e-01, -1.657e-01, 2.693e-01, 5.748e-02, -3.332e-01, -6.172e-02, -2.862e-01, -9.041e-02, -9.210e-02, -1.384e-03, -2.446e-01, -3.519e-02));
	r1 += mul(s0_1_0, M4(-3.379e-02, -2.034e-01, 3.298e-03, -2.648e-01, -8.030e-03, 2.197e-01, 6.905e-02, -1.943e-01, -1.429e-02, -1.903e-01, -2.240e-01, -1.684e-01, 6.287e-02, -3.561e-02, -8.672e-02, 1.555e-01));
	r2 += mul(s0_1_0, M4(3.022e-02, -6.925e-01, -6.660e-02, -2.744e-01, 6.079e-01, 1.428e-01, -2.418e-02, -4.353e-02, -5.978e-01, 1.920e-01, -3.813e-01, 6.719e-02, -4.262e-01, -5.272e-02, -6.720e-03, 3.741e-02));
	r0 += mul(s0_1_1, M4(1.859e-01, 3.281e-03, 6.564e-02, -4.758e-01, 3.248e-01, 3.857e-01, 3.674e-01, 3.086e-02, 7.935e-02, 4.190e-02, -6.540e-01, 2.116e-01, -2.817e-01, -3.393e-03, -2.984e-01, -8.720e-02));
	r1 += mul(s0_1_1, M4(-9.225e-01, 4.761e-02, 4.092e-02, -5.854e-01, -4.824e-01, 3.174e-02, 3.311e-01, -1.320e-02, 6.622e-01, -3.485e-01, -2.797e-02, 4.745e-01, -1.000e+00, -1.058e-01, 1.201e-01, 2.346e-01));
	r2 += mul(s0_1_1, M4(-5.574e-02, -1.440e-01, -1.056e-01, 1.456e-01, 1.882e-01, -2.717e-02, -9.259e-02, 5.717e-01, -4.197e-01, 1.877e-01, -1.886e-01, -1.080e-02, -1.178e-01, -6.723e-02, 9.313e-02, 1.025e-01));
	r0 += mul(s0_1_2, M4(-8.569e-02, 2.541e-02, 6.945e-02, 1.279e-02, 1.184e-01, -1.292e-01, -1.315e-01, -9.171e-02, -7.378e-02, -7.271e-01, -3.935e-01, 1.464e-02, 4.625e-02, -1.428e-01, -1.767e-01, -9.030e-02));
	r1 += mul(s0_1_2, M4(4.326e-01, 5.579e-02, -5.617e-03, -8.052e-02, 2.997e-02, 1.745e-02, 5.541e-02, -2.223e-02, -3.941e-01, -1.506e-01, -1.266e-02, 3.923e-01, -7.801e-01, -4.129e-02, 1.104e-02, -6.036e-02));
	r2 += mul(s0_1_2, M4(-1.261e-01, 5.322e-02, 5.828e-02, 8.356e-02, 7.466e-02, 6.803e-02, -5.269e-02, 1.353e-01, -5.184e-01, -8.090e-02, -3.317e-01, -1.730e-01, -6.910e-02, -1.067e-02, -2.641e-02, 3.628e-02));
	r0 += mul(s0_2_0, M4(-1.873e-01, -9.458e-02, 7.331e-02, -5.595e-02, 2.224e-02, -1.545e-01, -2.128e-01, -3.072e-02, 3.219e-02, 5.469e-02, -2.322e-01, 6.688e-03, 6.983e-02, 5.975e-02, 8.243e-02, -1.015e-02));
	r1 += mul(s0_2_0, M4(-1.580e-01, 3.837e-02, -2.016e-01, -2.401e-02, -7.184e-02, -2.082e-02, -2.688e-01, 2.509e-01, 1.677e-01, 1.775e-01, 1.909e-01, 1.014e-01, 4.138e-02, -7.430e-02, 5.826e-02, -9.268e-02));
	r2 += mul(s0_2_0, M4(-2.156e-01, 7.250e-02, 3.267e-02, 1.899e-01, 1.011e-01, -2.620e-02, -4.331e-03, 9.327e-02, -1.000e+00, -6.961e-03, -2.231e-01, -3.569e-02, -2.474e-01, 4.798e-03, -1.122e-02, -1.648e-02));
	r0 += mul(s0_2_1, M4(7.165e-02, 1.951e-01, -2.603e-01, -3.813e-02, -1.667e-01, 3.544e-01, 3.879e-01, 1.542e-01, 4.548e-02, -1.969e-01, -3.506e-01, 6.253e-03, 1.456e-03, -2.373e-01, -1.827e-01, -4.514e-02));
	r1 += mul(s0_2_1, M4(-5.597e-02, -1.452e-01, 1.749e-02, 1.041e-01, 7.662e-01, 2.555e-01, -1.183e-01, 2.938e-01, 2.313e-01, -6.641e-01, -8.179e-02, -2.051e-01, -4.988e-01, -1.093e-01, -4.738e-02, -2.725e-01));
	r2 += mul(s0_2_1, M4(2.049e-01, -1.007e-02, 1.046e-02, -2.237e-01, -2.706e-01, 2.340e-02, 4.319e-02, -1.117e-01, -1.256e-01, -5.334e-02, -6.949e-02, -1.000e+00, -1.492e-01, 2.313e-02, -1.151e-02, 3.464e-02));
	r0 += mul(s0_2_2, M4(-5.376e-02, -3.779e-01, 5.347e-02, 2.046e-02, -2.400e-02, 4.840e-02, 1.097e-01, 1.100e-02, -1.170e-01, -1.000e+00, -3.639e-01, -2.879e-02, 3.111e-03, -4.137e-02, -6.916e-02, -2.740e-02));
	r1 += mul(s0_2_2, M4(-8.534e-02, 1.308e-02, -6.590e-02, -2.304e-02, 1.284e-02, -7.331e-03, -2.026e-02, 8.960e-02, -4.616e-01, 5.044e-02, -2.110e-02, -1.068e-01, -4.132e-02, 4.337e-02, -6.595e-04, -1.240e-03));
	r2 += mul(s0_2_2, M4(8.506e-03, -6.194e-04, -1.303e-02, 7.545e-02, -1.438e-02, -1.460e-02, -1.295e-02, -5.920e-02, -5.134e-01, -3.412e-02, -2.215e-01, -1.094e-02, 2.055e-02, 5.460e-03, 1.329e-02, -3.492e-02));
	r0 += mul(s1_0_0, M4(3.814e-02, 1.544e-02, 4.400e-02, 4.618e-03, -3.968e-02, 1.227e-02, 6.427e-02, 5.649e-03, -4.079e-02, -7.400e-02, -1.395e-02, 1.286e-02, -6.832e-02, 1.218e-02, 3.222e-02, 3.181e-03));
	r1 += mul(s1_0_0, M4(-4.839e-03, -2.969e-02, 1.006e-02, -4.698e-02, -2.448e-02, 3.708e-02, -7.372e-03, 7.386e-02, 1.916e-01, -1.045e-01, 5.556e-02, 3.278e-02, 9.320e-02, 1.851e-02, 4.285e-02, -9.725e-04));
	r2 += mul(s1_0_0, M4(1.126e-01, -7.572e-01, 1.687e-01, -8.396e-03, -1.499e-01, -2.186e-02, -5.359e-02, 4.259e-03, -4.746e-01, 1.018e-01, -4.927e-01, -2.850e-02, 1.277e-02, 1.346e-01, -3.895e-02, -9.308e-03));
	r0 += mul(s1_0_1, M4(5.847e-02, -7.202e-02, -9.006e-02, 3.268e-03, -1.146e-01, 2.890e-02, -4.592e-03, -2.320e-02, -8.320e-04, -1.023e-01, -5.012e-02, 7.750e-02, 1.064e-01, 9.761e-04, 6.642e-02, -2.493e-02));
	r1 += mul(s1_0_1, M4(-3.162e-01, 1.437e-02, -1.505e-02, -1.845e-02, 3.083e-01, -3.109e-02, 3.137e-02, 3.333e-02, 2.347e-01, 1.869e-02, 2.498e-02, 1.493e-01, -9.878e-02, -8.908e-02, -2.747e-02, -9.395e-02));
	r2 += mul(s1_0_1, M4(1.835e-02, -1.000e+00, 5.703e-01, -7.453e-03, -1.475e-01, -4.770e-01, -7.902e-02, 5.227e-02, -2.381e-01, 3.323e-01, -1.000e+00, 2.346e-03, 5.130e-02, 2.017e-01, -1.101e-01, -6.335e-03));
	r0 += mul(s1_0_2, M4(-3.508e-03, 3.244e-02, -1.410e-02, -1.049e-02, 2.826e-02, -1.600e-02, 4.321e-02, 1.703e-02, -3.152e-02, -7.460e-02, -5.150e-01, 4.267e-02, -5.471e-03, -6.835e-02, 2.061e-03, 5.285e-03));
	r1 += mul(s1_0_2, M4(-1.115e-01, 1.166e-02, 5.083e-03, -5.584e-02, 9.946e-02, -4.999e-03, 1.410e-02, 6.998e-02, -1.171e-01, 1.684e-02, 2.197e-02, 9.669e-02, -7.778e-01, 3.333e-02, -1.536e-02, 4.699e-02));
	r2 += mul(s1_0_2, M4(2.616e-02, -8.894e-03, 5.163e-02, -4.163e-02, -5.318e-02, 8.177e-04, 1.853e-02, 5.994e-02, -4.223e-01, -1.711e-01, -1.000e+00, -6.512e-02, 1.945e-02, 1.632e-02, -4.674e-02, 1.374e-02));
	r0 += mul(s1_1_0, M4(-1.479e-01, -1.408e-02, 1.770e-01, -2.322e-04, -8.517e-02, 2.435e-03, 7.908e-02, -1.335e-02, 2.087e-01, -2.962e-02, -4.248e-01, 5.239e-02, -1.880e-01, 5.402e-03, -1.404e-01, -2.756e-03));
	r1 += mul(s1_1_0, M4(3.014e-02, 2.381e-02, 8.049e-02, 1.411e-01, -3.132e-01, 1.213e-01, -5.249e-02, -9.022e-02, 1.121e-01, -7.225e-02, 6.867e-02, 2.725e-01, -1.690e-01, -1.323e-01, -1.238e-01, 2.494e-02));
	r2 += mul(s1_1_0, M4(1.797e-01, 1.744e-01, -3.207e-02, 9.008e-02, -5.902e-01, -1.336e-01, -8.702e-02, -7.025e-02, -8.144e-01, 1.182e-01, -2.321e-01, -4.887e-02, -1.460e-01, -1.470e-01, 9.759e-03, -1.564e-03));
	r0 += mul(s1_1_1, M4(2.726e-01, 1.335e-02, 6.594e-01, -1.301e-02, -2.256e-01, 2.127e-03, -1.000e+00, -1.105e-01, -3.622e-01, -2.368e-01, -3.721e-01, -8.963e-02, -5.106e-01, -1.140e-01, -8.613e-02, 1.230e-02));
	r1 += mul(s1_1_1, M4(-7.264e-01, -3.522e-02, 1.042e-01, 7.947e-03, 4.647e-01, -4.871e-02, -1.971e-01, -1.595e-01, 3.856e-02, -1.058e-01, -4.811e-01, 5.089e-01, -9.490e-01, 1.607e-01, 1.926e-02, 2.550e-01));
	r2 += mul(s1_1_1, M4(-6.034e-02, 4.137e-01, -4.618e-01, 1.668e-01, 3.141e-02, -2.428e-01, -7.606e-02, -2.824e-01, -1.000e+00, -3.024e-03, -1.299e-01, -1.132e-01, -2.287e-01, -2.017e-01, -1.098e-02, -3.835e-02));
	r0 += mul(s1_1_2, M4(-4.077e-03, 2.006e-02, -1.588e-01, -3.015e-02, -4.235e-02, 4.299e-02, -1.164e-01, 1.128e-01, -2.010e-01, -7.879e-02, -2.840e-03, 5.626e-02, 4.265e-02, 1.093e-01, -1.406e-02, -1.760e-02));
	r1 += mul(s1_1_2, M4(2.192e-01, 8.208e-03, 5.663e-02, 3.885e-02, -1.362e-01, 1.899e-02, -1.519e-02, -3.676e-02, 6.933e-01, 4.858e-02, -3.471e-03, 2.264e-01, -9.457e-01, -3.095e-02, 7.395e-03, -8.475e-02));
	r2 += mul(s1_1_2, M4(1.708e-02, 8.124e-02, -1.393e-01, 6.797e-02, 1.131e-02, -5.075e-02, -9.122e-03, -1.008e-01, -4.349e-01, 2.220e-01, -3.005e-01, 6.773e-02, 4.969e-02, -8.719e-02, 7.164e-03, -3.675e-02));
	r0 += mul(s1_2_0, M4(1.704e-01, 3.762e-02, -2.198e-01, -3.281e-02, 2.956e-02, -2.864e-02, 1.177e-02, 4.475e-02, 7.607e-02, -1.736e-01, -7.177e-02, 2.982e-02, -3.161e-02, 1.900e-02, 7.837e-02, -1.007e-02));
	r1 += mul(s1_2_0, M4(9.487e-02, -1.065e-03, 4.758e-04, 5.699e-04, -1.490e-02, 6.197e-02, -2.461e-01, -5.646e-02, -2.106e-02, -1.000e+00, -1.920e-01, 2.925e-01, -5.481e-02, -6.842e-02, -3.279e-02, -3.514e-01));
	r2 += mul(s1_2_0, M4(1.669e-01, 6.200e-02, -2.619e-02, -6.910e-04, -1.641e-01, -3.238e-03, 1.569e-02, -4.381e-02, -1.000e+00, 9.136e-03, -2.043e-01, 4.397e-02, -1.011e-01, -5.791e-02, 1.121e-02, -3.674e-02));
	r0 += mul(s1_2_1, M4(-9.687e-02, -1.015e-02, 2.209e-01, 7.625e-01, -6.200e-02, 4.832e-02, 1.528e-01, -6.555e-02, -2.173e-01, -4.255e-02, -3.626e-01, -2.006e-02, -1.806e-01, -4.020e-02, -1.153e-01, -6.843e-02));
	r1 += mul(s1_2_1, M4(1.130e-01, 8.992e-02, 3.225e-01, 4.569e-02, 3.155e-02, -2.755e-01, -1.023e-01, -5.215e-01, -3.275e-01, -3.898e-02, -1.000e+00, 2.733e-01, -4.305e-01, -4.028e-02, -1.891e-01, -5.557e-01));
	r2 += mul(s1_2_1, M4(-2.080e-01, 7.044e-02, 1.873e-02, 2.350e-01, -8.193e-03, 5.143e-03, 2.897e-02, -1.296e-01, -5.712e-01, -1.087e-01, -1.347e-01, 7.997e-03, 1.578e-02, -5.866e-02, 1.640e-04, -1.763e-01));
	r0 += mul(s1_2_2, M4(-6.365e-02, -1.128e-01, 6.008e-02, -2.140e-02, 1.699e-02, -2.304e-02, 8.028e-02, 8.737e-03, 1.452e-02, -1.479e-01, -3.619e-01, -9.798e-02, 4.992e-02, 2.139e-02, -8.432e-03, -4.037e-02));
	r1 += mul(s1_2_2, M4(-3.091e-01, -8.054e-02, -6.072e-02, 4.755e-02, -9.605e-02, 2.836e-02, 2.384e-02, -6.328e-03, 7.612e-03, -9.832e-02, -1.161e-01, -3.447e-01, -1.629e-02, 3.281e-03, 2.817e-03, -1.386e-01));
	r2 += mul(s1_2_2, M4(3.226e-02, 1.144e-03, 8.422e-03, -9.963e-02, -4.353e-03, 6.616e-02, 5.204e-03, 2.959e-02, -4.383e-01, 1.993e-02, -9.707e-02, -5.487e-02, -2.187e-02, -3.916e-02, -4.697e-03, -5.392e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-6.382e-02, -1.710e-03, 1.501e-01, -3.614e-03, -2.034e-02, -4.534e-03, -3.284e-02, -1.166e-02, 2.223e-02, -1.906e-02, 9.831e-02, 1.262e-02, 8.448e-02, -1.372e-02, -2.575e-01, -7.110e-03));
	r1 += mul(s0_0_0, M4(-4.880e-02, 4.043e-02, -3.218e-02, -1.045e-01, 3.057e-02, -3.374e-03, 1.353e-02, -2.880e-03, 6.845e-03, 9.847e-02, 4.949e-02, 9.837e-02, 2.544e-01, -4.081e-02, -5.281e-02, 2.329e-02));
	r2 += mul(s0_0_0, M4(-2.819e-01, -4.608e-02, 2.006e-02, -2.991e-02, 6.361e-02, 4.625e-02, -5.312e-02, 6.736e-03, -2.935e-03, -9.452e-02, -2.324e-02, 1.346e-02, 1.080e-01, -1.528e-01, 3.020e-02, -2.962e-02));
	r0 += mul(s0_0_1, M4(-4.096e-02, -5.921e-02, -2.252e-01, -1.342e-02, -2.348e-02, -1.846e-02, -7.845e-02, -1.121e-02, 4.828e-01, 1.886e-01, 8.944e-02, 3.427e-02, -4.929e-02, 6.161e-02, -4.721e-02, 7.160e-02));
	r1 += mul(s0_0_1, M4(-2.814e-02, -2.387e-01, 2.304e-02, -1.348e-01, 5.545e-02, -6.043e-02, 7.713e-03, 1.176e-02, -1.214e-01, 2.777e-02, 7.928e-02, -3.889e-02, -4.492e-01, 3.681e-02, -1.294e-03, 8.814e-02));
	r2 += mul(s0_0_1, M4(-1.000e+00, 6.078e-02, 2.364e-02, -3.609e-02, 3.919e-02, -2.982e-01, 8.719e-02, -3.480e-02, -3.267e-01, -1.313e-01, -1.066e-01, -4.049e-02, 6.339e-02, -6.274e-01, -8.034e-02, 8.020e-03));
	r0 += mul(s0_0_2, M4(-2.262e-01, -7.537e-01, 1.607e-02, -1.223e-02, 5.017e-02, -3.459e-02, -6.735e-02, 4.704e-03, -9.659e-02, 2.054e-02, 1.807e-01, 1.255e-01, 3.700e-02, -2.125e-02, -4.223e-02, -1.886e-02));
	r1 += mul(s0_0_2, M4(-4.076e-02, 2.713e-02, -3.309e-02, -9.385e-01, 1.208e-01, 5.526e-03, -2.400e-02, 2.335e-02, 3.623e-01, -1.577e-02, 4.306e-03, -1.633e-01, 2.622e-01, -1.813e-02, 1.293e-03, -7.489e-02));
	r2 += mul(s0_0_2, M4(-3.764e-02, -5.839e-01, -3.533e-02, -1.307e-01, -4.804e-02, -2.991e-02, -1.411e-01, 2.216e-02, -5.792e-02, -1.892e-02, 9.020e-03, -1.901e-01, 4.229e-02, -3.334e-01, 4.455e-02, -1.883e-02));
	r0 += mul(s0_1_0, M4(-1.330e-02, 1.361e-02, 6.488e-02, 7.585e-03, 4.845e-02, 1.892e-02, -9.097e-02, -1.059e-02, -3.101e-02, -3.820e-02, -7.196e-02, -1.081e-02, -4.448e-01, -1.397e-03, 8.910e-02, -1.542e-01));
	r1 += mul(s0_1_0, M4(-1.278e-01, 1.144e-01, 8.613e-02, -1.066e-01, -2.509e-02, -1.863e-01, -8.260e-02, -9.247e-02, 1.567e-01, -5.881e-03, -8.264e-02, 9.584e-03, 1.476e-01, -3.288e-01, -2.693e-02, 9.994e-02));
	r2 += mul(s0_1_0, M4(6.236e-02, -1.112e-01, -2.125e-02, -5.137e-03, -7.826e-02, -1.211e-01, 3.806e-03, -4.433e-02, -2.568e-01, -1.584e-03, 1.466e-03, -1.422e-02, 3.110e-01, 4.024e-02, -3.010e-02, 6.325e-02));
	r0 += mul(s0_1_1, M4(9.745e-02, -1.118e-02, -1.640e-01, -7.614e-02, -5.117e-01, -2.445e-01, 1.553e-01, 1.157e-02, 1.818e-01, 7.386e-02, 9.440e-02, 2.061e-01, -7.673e-02, -1.767e-01, 2.722e-01, -2.152e-02));
	r1 += mul(s0_1_1, M4(1.710e-02, -5.962e-01, -1.086e-01, -5.533e-01, 1.416e-01, 3.236e-01, -4.670e-02, 7.189e-02, 1.224e-01, 5.454e-01, 7.490e-01, -6.915e-02, 1.393e-01, 1.305e-01, -1.502e-02, -8.108e-02));
	r2 += mul(s0_1_1, M4(1.820e-01, -3.436e-01, -3.826e-02, -4.314e-02, -4.887e-01, 1.594e-01, 3.912e-02, 1.898e-02, -4.766e-02, -1.476e-02, 4.678e-02, -9.633e-02, -1.750e-01, 7.062e-02, -8.061e-04, 1.438e-01));
	r0 += mul(s0_1_2, M4(-2.974e-02, -4.635e-01, -2.079e-01, -2.272e-01, 6.531e-02, 2.441e-01, -1.259e-01, -4.709e-02, 7.727e-02, 4.652e-02, -6.267e-02, -4.254e-02, 3.690e-02, 5.566e-02, -3.011e-02, -8.227e-02));
	r1 += mul(s0_1_2, M4(-3.561e-01, -2.508e-01, -3.618e-02, -5.681e-01, -3.291e-01, -7.202e-02, 2.862e-02, 7.744e-02, 3.578e-02, 1.711e-02, 1.359e-03, -3.678e-02, -6.432e-01, -1.577e-02, 1.219e-02, 8.951e-03));
	r2 += mul(s0_1_2, M4(9.202e-02, -5.121e-01, -4.650e-02, -2.522e-03, 6.705e-02, -3.610e-02, 5.596e-02, -3.540e-02, 5.097e-02, 6.199e-02, -6.664e-02, -6.588e-02, 4.626e-03, 5.149e-02, -1.187e-01, 3.611e-03));
	r0 += mul(s0_2_0, M4(-6.963e-02, -1.628e-02, 2.913e-02, -1.178e-02, -1.850e-02, 2.596e-02, 1.199e-01, -1.910e-03, 1.226e-02, 4.348e-03, 1.560e-02, 1.051e-02, 1.269e-01, -2.157e-02, -4.501e-01, 1.105e-02));
	r1 += mul(s0_2_0, M4(-1.783e-01, -1.589e-02, -3.543e-02, 7.808e-02, -1.519e-01, 6.311e-03, 5.034e-02, -1.801e-02, -7.356e-03, 5.288e-02, 6.412e-02, -9.028e-02, -5.648e-02, -1.000e+00, -1.537e-01, -3.897e-01));
	r2 += mul(s0_2_0, M4(-6.273e-02, 4.039e-02, 1.542e-02, 5.671e-03, -1.573e-01, -7.136e-02, -1.520e-02, 5.410e-02, -1.125e-02, 2.031e-02, -2.908e-03, -3.307e-02, 2.268e-01, -6.976e-02, -2.413e-02, -2.988e-01));
	r0 += mul(s0_2_1, M4(-5.007e-02, -2.874e-02, 6.177e-03, 4.036e-03, 3.094e-02, 1.306e-02, -3.701e-01, -4.192e-02, 2.934e-02, 3.040e-02, 3.836e-02, 2.302e-02, -1.705e-01, -1.324e-02, 8.943e-02, 1.016e-02));
	r1 += mul(s0_2_1, M4(5.925e-02, -9.417e-02, 3.019e-02, 1.286e-01, -8.100e-02, -7.633e-02, -7.029e-02, -2.795e-01, 8.156e-02, 1.327e-01, 5.216e-02, -1.177e-01, 2.268e-01, 2.529e-01, -7.551e-02, -2.014e-01));
	r2 += mul(s0_2_1, M4(-4.909e-02, 7.536e-03, 1.081e-02, 3.550e-02, 1.807e-01, -1.279e-02, -1.140e-02, -1.808e-02, -4.695e-02, 2.792e-02, 6.241e-03, -5.212e-02, -1.655e-01, -2.384e-03, 1.335e-02, 3.117e-02));
	r0 += mul(s0_2_2, M4(2.935e-02, -1.880e-01, 1.433e-01, -8.230e-02, 2.706e-02, -7.252e-02, -1.148e-01, 1.438e-02, -5.460e-03, 4.359e-02, -1.869e-02, 8.475e-03, 2.964e-02, 2.658e-02, -5.410e-02, 4.988e-02));
	r1 += mul(s0_2_2, M4(-2.880e-01, -1.107e-01, 2.577e-02, 2.298e-01, 4.330e-02, -1.230e-01, 1.758e-02, -1.050e-01, -2.214e-02, -4.940e-02, 1.680e-02, -3.130e-03, 3.647e-02, -1.469e-01, -1.687e-02, 4.784e-02));
	r2 += mul(s0_2_2, M4(-5.980e-02, 7.809e-02, 2.959e-02, 4.829e-02, -3.065e-02, -5.073e-02, 8.298e-03, 1.031e-02, -1.077e-02, -4.456e-03, 1.509e-02, -1.261e-02, 1.026e-01, 2.697e-02, -1.850e-02, -1.479e-01));
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 4
//!DESC out-shuffle
//!BLOCK_SIZE 16
//!NUM_THREADS 64
//!IN INPUT, T0, T1, T2
//!OUT OUTPUT
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = (Rmp8x8(tid.x) << 1) + blockStart;
	uint2 sz = GetOutputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = ((gxy >> 1) + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(8.183e-03, -1.776e-04, -1.026e-02, 1.545e-03, 2.160e-01, -2.148e-02, 1.284e-01, 4.152e-03, 4.838e-03, 3.588e-03, 2.038e-02, 1.435e-03, 1.924e-01, -3.175e-02, 6.402e-02, -1.999e-03));
	r0 += mul(s0_0_1, M4(1.057e-01, 6.198e-02, -2.375e-03, -1.859e-02, -2.763e-02, -3.785e-01, -4.038e-02, -7.095e-02, -9.692e-02, -1.012e-01, 4.815e-03, 2.557e-03, 1.246e-02, 2.953e-01, 1.828e-02, -1.393e-02));
	r0 += mul(s0_0_2, M4(-4.141e-03, 1.678e-02, -5.429e-05, -6.305e-03, 2.649e-04, -2.025e-02, 7.541e-04, -1.581e-02, -1.374e-03, -1.666e-02, 2.329e-04, -8.593e-03, -3.814e-03, -4.009e-02, -3.607e-03, 4.644e-02));
	r0 += mul(s0_1_0, M4(-6.240e-02, -8.513e-03, -8.081e-02, 4.376e-03, 6.434e-02, 2.655e-02, 1.429e-01, 5.552e-03, 1.072e-02, 6.443e-04, 4.455e-02, -3.622e-03, -1.004e-02, -8.817e-04, 7.947e-02, 3.336e-03));
	r0 += mul(s0_1_1, M4(1.426e-01, -1.384e-01, 6.269e-01, -5.702e-02, -1.642e-02, 1.731e-02, 3.022e-02, -2.783e-01, 4.285e-02, 1.013e-01, -3.623e-01, -2.481e-02, 1.480e-02, 2.648e-03, 2.397e-01, 3.135e-01));
	r0 += mul(s0_1_2, M4(-4.929e-03, -4.634e-02, -1.816e-02, 4.211e-02, 6.409e-04, 6.856e-03, -1.796e-03, 7.995e-03, -1.141e-02, -4.454e-02, 1.769e-02, -1.348e-01, 9.163e-03, 1.279e-02, -1.057e-03, -1.644e-02));
	r0 += mul(s0_2_0, M4(-3.170e-03, -6.622e-04, -9.498e-03, 1.903e-04, 5.488e-04, -2.359e-04, -4.824e-03, -4.065e-03, 4.784e-04, -9.334e-05, -5.909e-03, -1.297e-03, -4.249e-05, 1.617e-04, 7.531e-04, 4.523e-04));
	r0 += mul(s0_2_1, M4(3.728e-03, -1.108e-02, -3.373e-02, -2.406e-02, -7.981e-03, -2.118e-02, -8.818e-03, -2.264e-02, 5.377e-03, 1.830e-03, 2.188e-02, -3.068e-03, 2.024e-04, -1.277e-05, -3.626e-03, 1.077e-03));
	r0 += mul(s0_2_2, M4(-5.212e-03, -5.913e-03, -2.352e-03, -1.973e-03, -2.922e-04, -2.716e-03, 3.702e-04, -1.731e-03, 7.840e-04, 4.630e-03, 2.021e-03, -9.598e-03, -1.807e-04, -2.894e-04, 1.476e-03, -3.416e-03));
	r0 += mul(s1_0_0, M4(-3.134e-01, 1.654e-02, 1.365e-02, 6.117e-03, 1.145e-02, 1.644e-04, 2.119e-03, 1.916e-03, -6.163e-02, 1.101e-02, -1.080e-02, -4.043e-03, -1.099e-01, 1.568e-02, 1.299e-02, -3.100e-04));
	r0 += mul(s1_0_1, M4(7.192e-02, -5.723e-02, 4.211e-02, -2.583e-02, -7.122e-01, 5.237e-02, -2.623e-01, -6.240e-03, 4.336e-01, -8.863e-02, 3.036e-02, 2.377e-02, -5.113e-01, -5.470e-01, -1.119e-01, 8.420e-04));
	r0 += mul(s1_0_2, M4(-8.835e-04, 1.511e-02, -1.142e-03, 2.982e-03, 3.551e-02, -2.569e-03, 1.027e-03, 5.677e-02, -1.416e-03, 3.168e-01, 1.102e-02, 1.150e-01, 1.227e-02, -9.302e-02, -2.746e-03, -3.455e-02));
	r0 += mul(s1_1_0, M4(-2.329e-01, -1.233e-01, -5.227e-01, -3.711e-02, -5.440e-03, -1.397e-03, 6.142e-05, -3.364e-04, 8.120e-03, 2.010e-03, -1.740e-02, 6.196e-04, 8.497e-03, 1.372e-03, -3.040e-02, -1.000e-02));
	r0 += mul(s1_1_1, M4(-9.681e-04, -6.467e-03, 1.009e-02, -3.108e-02, -4.108e-03, -4.478e-02, -1.792e-01, -1.809e-02, 5.883e-04, 3.087e-02, 2.008e-02, -5.140e-02, 7.003e-03, 2.260e-02, -7.160e-03, -2.264e-02));
	r0 += mul(s1_1_2, M4(1.116e-04, -1.775e-03, 6.813e-04, 1.067e-03, -3.433e-03, -1.092e-02, -1.073e-02, 2.418e-02, -4.248e-03, 3.419e-03, 3.042e-03, 1.101e-01, -7.345e-04, 7.651e-03, -1.831e-03, -2.172e-02));
	r0 += mul(s1_2_0, M4(-3.814e-03, -1.078e-02, -2.897e-02, -3.552e-02, -4.112e-04, -4.360e-05, -1.484e-05, -5.382e-04, 1.415e-03, 8.197e-06, -1.723e-04, 5.276e-04, 3.348e-04, -1.303e-03, 5.025e-05, -4.703e-03));
	r0 += mul(s1_2_1, M4(3.685e-03, 3.034e-03, -9.584e-04, -1.006e-02, -2.237e-03, 7.387e-04, -1.819e-02, 1.161e-03, -6.305e-04, 1.333e-03, 6.593e-03, 3.807e-04, 2.267e-03, 3.307e-03, 4.994e-03, 5.401e-04));
	r0 += mul(s1_2_2, M4(6.045e-06, -1.370e-04, 1.049e-04, 2.325e-04, -3.578e-03, 1.346e-03, 6.379e-03, -8.307e-03, 4.396e-04, 5.811e-04, -2.252e-03, 6.001e-03, -5.613e-04, 5.689e-04, 1.312e-03, 4.284e-03));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(9.566e-05, 7.019e-07, -5.386e-05, 1.410e-06, -1.553e-02, -3.421e-04, -8.139e-03, -4.178e-03, 3.938e-05, 7.049e-06, 1.968e-04, 2.868e-04, 1.024e-01, -4.259e-03, -2.158e-03, 7.760e-04));
	r0 += mul(s0_0_1, M4(1.139e-04, -5.050e-03, -9.970e-03, -2.036e-03, -5.343e-02, -2.661e-02, 3.147e-03, -1.054e-03, 1.259e-05, -7.966e-06, -3.104e-04, -3.794e-04, -7.514e-02, 2.134e-01, 8.465e-03, 1.184e-02));
	r0 += mul(s0_0_2, M4(1.136e-01, 1.436e-01, -6.173e-04, -1.493e-02, 9.215e-03, -2.740e-02, -5.868e-04, 1.824e-02, -5.188e-05, 1.004e-06, 1.105e-04, 9.263e-05, -1.771e-03, -1.228e-01, -1.641e-02, -8.228e-02));
	r0 += mul(s0_1_0, M4(-1.389e-04, 5.135e-06, 1.542e-04, -1.986e-06, 8.199e-02, -2.515e-02, -6.239e-02, 1.135e-02, -7.706e-05, -3.613e-03, 3.437e-04, 1.339e-03, -2.298e-02, 1.500e-02, -7.739e-02, -5.267e-03));
	r0 += mul(s0_1_1, M4(1.198e-01, -1.453e-02, 1.722e-01, -5.614e-03, 3.969e-01, 3.683e-01, 1.023e-01, -1.586e-02, 1.014e-02, 1.457e-02, -1.046e-03, -2.919e-03, -1.059e-02, -6.451e-02, -2.705e-01, -3.232e-01));
	r0 += mul(s0_1_2, M4(-1.015e-01, 1.855e-01, 2.069e-01, 6.806e-01, -3.822e-03, 1.091e-01, 2.525e-03, 6.186e-02, -1.719e-03, -1.765e-03, 3.409e-04, 6.470e-04, 1.857e-03, 5.440e-04, 1.209e-02, -2.339e-02));
	r0 += mul(s0_2_0, M4(1.942e-06, -7.072e-06, -1.111e-04, 2.378e-07, 1.220e-03, 3.097e-03, 3.956e-02, 1.886e-02, -1.382e-01, 3.627e-02, -7.197e-03, 1.340e-02, -8.162e-04, -1.440e-03, -5.305e-03, -2.810e-03));
	r0 += mul(s0_2_1, M4(3.532e-03, 7.347e-03, 3.105e-03, 2.991e-03, -2.155e-02, -1.813e-02, -3.699e-02, -1.959e-03, -3.388e-01, -4.529e-01, -7.698e-02, 2.870e-03, -2.996e-03, -2.003e-03, -1.549e-02, -2.167e-02));
	r0 += mul(s0_2_2, M4(1.326e-02, 6.250e-03, -2.595e-02, -1.193e-02, -5.890e-03, -1.494e-02, -2.329e-03, 2.424e-02, 2.038e-02, -5.383e-02, 1.200e-02, -4.653e-02, 5.918e-04, -1.097e-03, -4.355e-03, -3.426e-03));
	r0 += V4(-1.432e-10, 7.369e-09, 1.548e-11, 6.564e-09);
	static const float3x3 RY = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081}, YR = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float2 opt = float2(GetOutputPt());
	float2 fpos = (float2(gxy) + 0.5) * opt;
	float3 yuv;
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.x), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.y), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.z), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.w), yuv.yz)), 1.0);
}
