// CuNNy fast NVL SOFT - https://github.com/funnyplanter/CuNNy

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


//!MAGPIE EFFECT
//!VERSION 4
//!SORT_NAME CuNNy-SOFT-0000284

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
Texture2D OUTPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!COMMON
#define O(t, x, y) t.SampleLevel(SP, pos + float2(x, y) * pt, 0)
#define V4 min16float4
#define M4 min16float4x4

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T4;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T5;

//!PASS 1
//!DESC in (1x12)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT T0, T1, T2
#define L0(x, y) min16float(dot(float3(0.299, 0.587, 0.114), O(INPUT, x, y).rgb))
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	r0 += V4(-6.380e-02, -4.491e-02, 5.303e-03, 9.494e-03) * s0_0_0;
	r1 += V4(-1.116e-03, -3.517e-02, 9.741e-02, -1.010e-02) * s0_0_0;
	r2 += V4(2.606e-02, 5.543e-02, 8.215e-03, 8.223e-01) * s0_0_0;
	r0 += V4(5.821e-02, 2.287e-02, -1.129e-02, 3.659e-02) * s0_0_1;
	r1 += V4(1.063e-02, -7.500e-01, -1.846e-01, 1.063e-01) * s0_0_1;
	r2 += V4(3.053e-01, -1.114e-01, 1.121e+00, 7.909e-02) * s0_0_1;
	r0 += V4(3.808e-03, 4.589e-03, -2.118e-03, 3.169e-02) * s0_0_2;
	r1 += V4(-1.138e-02, -1.560e-02, -6.004e-01, 1.817e-01) * s0_0_2;
	r2 += V4(-5.752e-02, 5.874e-02, 2.334e-02, -3.259e-02) * s0_0_2;
	r0 += V4(3.564e-01, 4.015e-02, -1.186e-02, -2.270e-02) * s0_1_0;
	r1 += V4(5.684e-03, -2.717e-01, 1.574e-01, 4.046e-02) * s0_1_0;
	r2 += V4(-5.913e-02, -4.904e-02, -3.609e-02, 1.701e-01) * s0_1_0;
	r0 += V4(-7.871e-01, -9.237e-01, -1.004e+00, -9.079e-01) * s0_1_1;
	r1 += V4(1.043e+00, 8.759e-01, 7.113e-01, 2.800e-01) * s0_1_1;
	r2 += V4(3.779e-01, -6.934e-01, -1.093e+00, -1.004e+00) * s0_1_1;
	r0 += V4(4.209e-01, -4.334e-02, 1.025e+00, 3.591e-01) * s0_1_2;
	r1 += V4(-1.044e+00, 2.029e-01, -1.506e-01, -7.246e-01) * s0_1_2;
	r2 += V4(-2.028e-01, 7.402e-01, -1.739e-02, -4.096e-02) * s0_1_2;
	r0 += V4(3.531e-02, 4.618e-03, 5.461e-03, 1.971e-02) * s0_2_0;
	r1 += V4(-3.235e-03, 2.874e-01, -2.557e-01, 3.178e-03) * s0_2_0;
	r2 += V4(2.958e-02, -7.386e-03, 2.705e-02, -7.341e-02) * s0_2_0;
	r0 += V4(-2.027e-02, -3.606e-02, -2.605e-02, 2.441e-01) * s0_2_1;
	r1 += V4(1.188e-02, -9.742e-02, 1.563e-01, -6.925e-02) * s0_2_1;
	r2 += V4(-4.215e-02, 8.088e-01, -2.122e-02, 6.939e-03) * s0_2_1;
	r0 += V4(-2.795e-04, 9.775e-01, 1.723e-02, 8.375e-02) * s0_2_2;
	r1 += V4(-6.326e-03, -1.942e-01, 7.142e-02, 2.370e-02) * s0_2_2;
	r2 += V4(-3.632e-01, -8.027e-01, -6.928e-03, 6.964e-02) * s0_2_2;
	r0 += V4(1.047e-02, 1.372e-03, 5.766e-04, -6.156e-03);
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 += V4(-2.808e-04, 2.610e-03, 6.083e-04, -1.099e-02);
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 += V4(2.142e-05, -2.578e-03, 4.669e-04, 3.379e-03);
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 2
//!DESC conv1 (12x12)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T0, T1, T2
//!OUT T3, T4, T5
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-1.287e-02, 4.399e-03, 1.424e-02, -8.166e-02, -1.072e-01, 3.139e-02, 3.904e-03, -1.255e-01, -3.938e-02, 2.407e-01, -1.224e-01, -3.220e-01, 5.802e-02, 1.239e-01, 4.202e-02, 1.011e-01));
	r1 += mul(s0_0_0, M4(4.639e-02, -3.395e-02, 3.055e-02, -6.775e-02, -5.040e-01, -1.820e-01, -3.490e-01, 9.231e-02, 7.350e-02, 4.209e-01, -1.343e-01, -6.176e-03, 3.292e-01, 9.306e-02, 6.568e-03, 2.548e-02));
	r2 += mul(s0_0_0, M4(1.645e-01, -1.654e-01, 2.034e-01, 1.782e-01, -1.608e-02, 1.277e-01, -7.481e-01, -9.082e-01, -1.553e-02, 5.838e-01, 3.107e-01, 6.168e-01, -2.816e-02, -1.277e-01, -2.032e-01, -1.740e-01));
	r0 += mul(s0_0_1, M4(-3.815e-02, -7.969e-02, -6.422e-02, -2.926e-01, -2.582e-02, 1.315e-01, 5.551e-02, 5.109e-02, -6.971e-02, -1.346e-01, 3.230e-03, -4.330e-01, 3.844e-02, 1.567e-01, 2.151e-03, 1.349e-01));
	r1 += mul(s0_0_1, M4(5.640e-01, 1.891e-02, 2.043e-01, 8.971e-02, -2.686e-01, 2.969e-01, 2.961e-01, -9.862e-02, -6.324e-02, -2.733e-01, 3.422e-01, -7.806e-03, 1.561e-01, -3.291e-02, 2.169e-01, -1.367e-01));
	r2 += mul(s0_0_1, M4(6.107e-02, -3.536e-01, -2.631e-01, -2.146e-01, 6.887e-03, 5.644e-01, 5.717e-02, 1.198e-01, 4.770e-01, 3.817e-02, 2.898e-01, 4.068e-02, 1.263e-01, -2.484e-01, 3.696e-01, -2.973e-01));
	r0 += mul(s0_0_2, M4(-7.847e-02, -1.354e-01, 9.351e-02, -2.765e-01, 1.145e-02, 2.315e-02, -4.262e-02, 1.229e-01, 2.257e-02, 2.830e-02, 1.541e-02, 1.116e-01, -6.154e-02, 4.193e-02, -7.143e-02, -2.460e-01));
	r1 += mul(s0_0_2, M4(5.452e-01, -3.683e-01, 3.001e-01, -7.451e-02, -4.518e-02, 3.115e-02, -1.589e-01, -5.124e-02, 4.259e-02, 4.761e-02, -1.784e-01, 9.402e-02, -1.996e-01, 2.156e-02, 1.738e-01, 5.879e-02));
	r2 += mul(s0_0_2, M4(4.219e-01, -1.194e-01, -1.776e-01, 2.102e-01, -3.272e-01, 1.260e-01, 4.399e-03, 3.089e-02, -5.461e-02, 1.600e-02, 3.646e-03, -1.142e-01, 2.961e-01, -2.935e-02, 5.767e-02, -1.156e-01));
	r0 += mul(s0_1_0, M4(-8.036e-02, -1.983e-01, 4.257e-02, -2.372e-01, 1.968e-01, 2.503e-01, -1.026e-01, 8.381e-02, 1.533e-01, -1.014e-01, 8.424e-02, 6.639e-01, 3.427e-02, -3.081e-02, 2.640e-02, -9.474e-02));
	r1 += mul(s0_1_0, M4(-2.736e-02, 4.026e-01, -2.395e-01, 8.612e-02, 2.768e-01, -2.926e-01, 2.032e-01, -7.486e-02, 2.177e-01, -6.311e-01, -1.101e-01, -2.272e-04, -3.827e-01, 1.293e-01, -1.582e-01, 3.155e-02));
	r2 += mul(s0_1_0, M4(-3.725e-02, 3.923e-02, -2.320e-01, -1.404e-01, -3.400e-01, -3.309e-01, 7.739e-02, -6.382e-02, -9.549e-02, 9.975e-02, -1.952e-01, -8.130e-01, 8.377e-02, 2.267e-01, 1.185e-01, -7.877e-02));
	r0 += mul(s0_1_1, M4(2.454e-01, 9.385e-02, 1.010e-01, 1.001e-01, 3.390e-01, 4.485e-02, 2.113e-01, 1.258e-01, 1.585e-01, -4.797e-01, 7.585e-01, 1.753e-01, -3.103e-02, -3.192e-01, -4.242e-02, -2.295e-01));
	r1 += mul(s0_1_1, M4(-5.766e-01, 8.011e-01, 6.402e-02, 1.312e-01, 5.293e-01, -7.682e-01, -6.282e-02, -1.915e-01, 2.797e-01, -2.448e+00, 3.195e-03, -6.648e+00, -2.109e-02, -7.241e-01, 1.046e-01, -5.944e-01));
	r2 += mul(s0_1_1, M4(-1.228e+00, 4.423e-01, 7.741e-01, 8.386e-01, 5.443e-01, -1.243e+00, -2.606e-01, 9.485e-02, -4.294e-01, -9.098e-01, -4.086e-01, 2.938e-02, -4.503e-01, -4.734e+00, 1.626e-01, 3.871e-01));
	r0 += mul(s0_1_2, M4(1.511e-02, -2.233e-01, 5.387e-02, -2.167e-01, 5.798e-02, 1.055e-01, -9.828e-02, -5.109e-02, -2.913e-02, 1.200e-01, -2.671e-01, -1.634e-02, 2.516e-02, -2.216e-01, 2.054e-01, 2.719e-01));
	r1 += mul(s0_1_2, M4(-3.130e-01, -4.102e-01, -1.150e-01, 5.491e-03, 7.681e-03, 1.232e-01, 3.664e-02, -6.449e-02, -8.689e-02, 2.136e-01, 1.815e-01, 1.633e-02, 4.036e-01, 8.075e-02, -1.884e-01, -3.919e-02));
	r2 += mul(s0_1_2, M4(-6.684e-01, -9.624e-03, -2.831e-01, -4.931e-02, -3.662e-01, 4.735e-02, 8.295e-02, 2.350e-02, -3.773e-01, 4.880e-02, -1.430e-02, 6.267e-03, 2.913e+00, -3.587e-01, 3.366e-01, 5.017e-02));
	r0 += mul(s0_2_0, M4(4.535e-02, -2.356e-01, -3.293e-02, 4.165e-02, -8.566e-02, 8.676e-02, 2.015e-02, -1.290e-01, -1.209e-02, 1.327e-01, 4.324e-02, -1.922e-01, -4.186e-02, -3.762e-02, 2.707e-02, 2.329e-01));
	r1 += mul(s0_2_0, M4(1.822e-01, -1.018e-02, -6.483e-02, -3.139e-02, -1.174e-01, -1.568e-02, 2.976e-02, -1.775e-02, -5.606e-01, 2.524e-01, -2.639e-01, -1.188e-02, 1.535e-01, 9.929e-02, 3.434e-02, 3.925e-02));
	r2 += mul(s0_2_0, M4(4.264e-02, 7.079e-02, 1.187e-01, 1.986e-01, 9.120e-02, 1.912e-01, 3.384e-02, -4.373e-02, 4.654e-01, -6.023e-01, -8.263e-02, 1.354e-01, -2.410e-02, 3.219e-01, -1.345e-01, -1.003e-01));
	r0 += mul(s0_2_1, M4(-2.409e-01, 9.126e-04, -4.082e-02, 4.189e-01, -4.767e-02, 9.595e-02, -6.744e-03, -9.711e-02, -3.564e-01, 2.001e-01, -6.713e-02, -4.385e-01, 1.612e-01, -2.562e-01, -5.371e-02, 4.620e-01));
	r1 += mul(s0_2_1, M4(-5.750e-01, -3.745e-01, 1.223e-01, -4.891e-03, 1.068e-04, 9.628e-02, -3.593e-02, 5.435e-03, -7.240e-01, 7.808e-01, 1.226e-01, 1.057e-01, 5.342e-01, -5.462e-02, -4.418e-02, -1.315e-02));
	r2 += mul(s0_2_1, M4(-2.819e-02, 2.181e-01, 7.478e-02, -3.207e-01, 1.993e-01, -1.276e-01, -7.291e-03, 1.119e-02, 6.275e-02, 3.631e-01, -1.239e-01, -8.293e-02, -1.852e-01, -8.308e-01, -1.222e-01, 1.020e-02));
	r0 += mul(s0_2_2, M4(1.274e-01, 1.344e-01, -5.433e-02, 2.125e-01, -1.794e-02, 1.674e-02, 2.894e-02, -2.417e-02, -5.344e-02, -5.263e-02, 4.195e-02, -3.832e-02, 3.514e-03, -1.436e-01, -1.891e-01, 2.949e-02));
	r1 += mul(s0_2_2, M4(-2.408e-01, -2.987e-01, 2.545e-02, -1.102e-01, 1.150e-01, 1.074e-01, 1.132e-02, -3.628e-03, 4.635e-02, 1.253e-01, 1.040e-02, 1.102e-01, -3.309e-01, -3.991e-01, -6.926e-03, -1.028e-01));
	r2 += mul(s0_2_2, M4(7.753e-01, -3.843e-02, -4.812e-02, 1.548e-01, -1.633e-01, 5.516e-02, 1.511e-02, 4.158e-02, -3.592e-01, -2.239e-04, -1.554e-01, -1.345e-01, -1.319e-01, 1.462e-02, 1.661e-01, 1.000e-01));
	r0 += mul(s1_0_0, M4(-3.853e-02, 6.556e-02, 1.469e-01, 4.514e-02, 1.359e-03, 4.641e-02, 1.061e-03, 4.021e-02, -1.283e-02, -1.081e-01, 2.684e-03, -1.304e-01, 6.765e-02, -3.267e-01, -6.602e-02, -3.548e-01));
	r1 += mul(s1_0_0, M4(-4.989e-01, -5.190e-01, 2.246e-04, 4.440e-02, -8.691e-02, 3.187e-02, -6.931e-02, -2.273e-03, 2.175e-01, 4.696e-02, 5.575e-02, 3.966e-02, 6.204e-01, 4.634e-01, -6.472e-01, -1.208e-01));
	r2 += mul(s1_0_0, M4(2.199e-01, 1.848e-01, -1.197e-01, -3.801e-01, 6.808e-02, -3.613e-02, 6.580e-03, 4.988e-02, -2.204e-02, -3.353e-02, -5.875e-02, -4.644e-02, -6.872e-01, -2.429e-01, -2.954e-01, 6.417e-01));
	r0 += mul(s1_0_1, M4(6.125e-03, 1.911e-01, -7.709e-02, 3.445e-01, 2.460e-02, 9.430e-02, -1.748e-02, 2.801e-01, -3.159e-02, -2.368e-01, 4.480e-02, -3.037e-01, 5.803e-02, -1.104e-01, -5.087e-03, -2.571e-02));
	r1 += mul(s1_0_1, M4(-4.111e-01, 4.747e-02, -2.703e-02, 9.146e-02, -8.753e-02, 6.214e-03, 4.262e-02, -4.248e-02, 3.587e-01, -1.388e-02, 2.361e-02, 5.608e-02, 4.194e-01, -1.496e-01, -1.360e-01, -1.052e-01));
	r2 += mul(s1_0_1, M4(-4.782e-01, 5.455e-01, -3.262e-01, 2.325e-01, -1.998e-01, 5.984e-02, 1.323e-01, -2.509e-02, 1.157e-01, -2.388e-01, -2.167e-01, 1.091e-01, -3.178e-01, -3.355e-01, 3.976e-02, 9.570e-02));
	r0 += mul(s1_0_2, M4(1.893e-02, 1.058e-01, -7.654e-02, 8.195e-03, 2.945e-02, 1.890e-01, -3.849e-02, 3.814e-02, -1.690e-02, -4.598e-02, 1.655e-02, 2.460e-02, -8.944e-03, -3.059e-04, -2.143e-02, 1.412e-01));
	r1 += mul(s1_0_2, M4(-1.152e-01, 2.528e-01, 8.642e-03, -1.352e-02, -3.938e-01, -8.208e-02, -1.929e-01, -5.093e-02, 6.703e-02, 2.305e-02, 1.743e-01, 1.585e-02, 1.776e-01, -9.915e-02, -1.300e-01, 5.804e-02));
	r2 += mul(s1_0_2, M4(-1.889e-01, -2.721e-01, -7.135e-02, 9.930e-02, 7.024e-02, 2.820e-02, 7.707e-02, -6.275e-02, -7.122e-03, 1.987e-01, 3.824e-02, -1.707e-03, 9.256e-02, 1.862e-01, -2.746e-02, -1.107e-01));
	r0 += mul(s1_1_0, M4(-1.293e-01, -1.905e-02, -2.010e-02, -7.074e-01, 2.358e-02, 6.727e-02, -1.547e-02, 1.871e-01, -6.038e-02, -3.634e-01, -2.712e-02, -3.158e-01, -8.709e-02, -5.645e-02, -2.834e-01, 2.699e-01));
	r1 += mul(s1_1_0, M4(-1.966e-02, -1.936e+00, -5.644e-02, -2.583e-01, -1.381e-01, 1.109e-01, -8.653e-02, -3.490e-02, 1.916e-01, 7.966e-02, 2.735e-02, -1.021e-02, -4.275e-01, 5.100e+00, 6.377e-01, 2.725e-01));
	r2 += mul(s1_1_0, M4(5.381e-01, -9.402e-01, -1.646e-01, -6.825e-01, 5.308e-02, -1.614e-01, 1.926e-01, 2.146e-02, -1.754e-01, -8.803e-02, 2.561e-01, 1.262e-01, 7.344e-02, 9.496e-01, 2.674e-01, 4.958e-01));
	r0 += mul(s1_1_1, M4(-2.402e-01, 3.717e-01, -3.290e-01, -5.542e-01, -6.091e-02, 5.767e-01, -2.168e-02, -3.271e-02, 1.518e-02, -4.763e-01, 6.591e-02, 2.106e-01, -5.191e-02, 1.520e-01, 3.106e-03, -2.669e-01));
	r1 += mul(s1_1_1, M4(-8.376e-01, -6.884e-02, 1.964e-01, 4.206e-01, -5.989e-01, -3.754e-02, -3.020e-02, 1.162e-01, 6.631e-02, 1.101e-01, 1.984e-01, 2.980e-01, 5.443e-01, -3.631e-01, -5.939e-02, -7.928e-02));
	r2 += mul(s1_1_1, M4(-8.551e-02, -4.732e-01, -1.955e-01, -4.585e-01, -1.695e-01, -8.678e-02, -8.467e-01, 2.764e-01, -3.609e-01, 4.748e-01, -1.707e-02, -2.329e-01, 4.533e-01, 1.253e-03, -3.121e-01, -8.170e-02));
	r0 += mul(s1_1_2, M4(-4.069e-02, 5.146e-02, 8.607e-04, -7.624e-02, 7.400e-02, 2.811e-01, -1.428e-01, -6.497e-03, -1.742e-02, -2.744e-01, 1.626e-01, -8.806e-02, -4.391e-02, 1.209e-01, -9.141e-02, 2.461e-01));
	r1 += mul(s1_1_2, M4(-3.074e-02, -1.210e-02, 7.937e-02, 2.946e-02, -1.213e-01, -2.877e-02, -3.199e-01, -2.908e-01, 3.236e-02, -2.241e-01, -4.735e-03, -3.407e-02, 1.899e-01, 1.155e-01, -4.254e-02, 2.098e-02));
	r2 += mul(s1_1_2, M4(8.248e-02, 1.440e-01, 2.903e-02, 4.400e-02, 4.867e-01, -1.714e-01, 3.526e-01, -1.144e-01, 1.558e-01, 1.400e-01, 7.866e-02, -9.357e-02, -9.477e-02, -8.469e-02, 9.803e-02, -1.885e-02));
	r0 += mul(s1_2_0, M4(9.476e-02, -8.280e-02, -2.010e-02, 1.404e-02, 4.120e-02, 2.709e-02, -8.583e-03, -1.037e-03, -4.866e-03, -4.172e-01, 2.806e-02, -5.551e-02, 3.328e-01, 6.703e-02, 7.938e-02, 3.238e-02));
	r1 += mul(s1_2_0, M4(-6.446e-02, -1.855e-02, 2.309e-01, -2.573e-02, -4.584e-02, 1.130e-01, -3.273e-02, 2.739e-03, 6.358e-02, 4.285e-03, -2.111e-02, -6.336e-04, -1.162e-01, 1.697e-02, 1.876e-01, -1.357e-02));
	r2 += mul(s1_2_0, M4(-1.517e-01, 4.071e-01, 2.491e-01, -6.617e-02, 2.401e-01, 1.203e-01, -1.907e-02, 1.650e-01, -1.662e-02, 1.489e-01, -3.404e-02, 7.856e-02, -2.935e-02, 2.330e-01, 1.629e-02, 9.528e-02));
	r0 += mul(s1_2_1, M4(2.773e-01, -6.312e-02, 1.967e-01, 1.759e-01, 2.186e-01, 6.050e-02, -6.413e-03, -2.572e-02, 2.278e-01, -3.169e-01, 3.555e-02, 6.061e-02, -1.272e-01, 2.112e-01, -2.522e-02, 2.843e-01));
	r1 += mul(s1_2_1, M4(4.269e-01, -3.271e-01, -2.713e-01, -7.918e-02, -6.764e-02, -5.469e-01, -1.655e-02, 7.891e-02, 1.963e-01, 2.643e-01, 1.179e-01, 4.439e-02, -1.904e-01, -2.208e-01, -2.379e-02, 8.394e-02));
	r2 += mul(s1_2_1, M4(-3.246e-01, -1.336e-01, 2.242e-01, 3.194e-01, -5.706e-01, -5.217e-01, -3.553e-01, -3.599e-02, -3.476e-01, -1.654e-01, 2.073e-03, 1.471e-01, -1.050e+00, 4.493e-01, 1.035e-01, 4.302e-03));
	r0 += mul(s1_2_2, M4(-1.113e-02, -1.255e-02, -9.506e-03, 3.539e-02, -4.156e-03, 1.196e-01, -2.558e-01, -8.405e-02, 7.988e-02, -1.753e-01, 3.646e-04, -8.585e-04, -2.977e-02, 1.368e-01, -4.423e-02, 9.550e-02));
	r1 += mul(s1_2_2, M4(1.760e-02, 4.752e-02, 1.674e-02, 2.090e-02, -2.188e-01, -1.637e-01, -6.718e-02, 1.468e-01, 1.326e-01, -8.598e-02, 4.193e-02, -6.341e-02, -6.511e-02, -3.468e-02, -2.351e-01, 9.712e-02));
	r2 += mul(s1_2_2, M4(-3.709e-01, 4.678e-02, 2.362e-02, 3.562e-02, -8.236e-01, 2.277e-01, 1.469e-01, 8.091e-02, -3.294e-01, -4.888e-02, 5.396e-02, -7.251e-03, 1.710e-01, 5.311e-02, 1.334e-02, -3.679e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-8.021e-02, -7.877e-02, 5.505e-02, -3.217e-01, -1.433e-02, -4.622e-01, 8.192e-02, 1.816e-01, -3.123e-03, -8.752e-02, 7.724e-03, 4.284e-02, 3.554e-03, 3.372e-02, 2.499e-04, 2.931e-02));
	r1 += mul(s0_0_0, M4(1.494e-01, -8.348e-02, 1.648e-01, 1.452e-01, -2.381e-01, -3.993e-01, -2.842e-01, 2.305e-02, -7.780e-02, 4.611e-02, 1.284e-01, 1.260e-02, -5.463e-02, 4.731e-02, -6.515e-02, 9.924e-04));
	r2 += mul(s0_0_0, M4(1.160e-01, 1.191e-01, 7.060e-02, -6.754e-02, 3.670e-01, -2.213e-01, 2.173e-01, -5.403e-01, -1.610e-01, 1.198e-01, -3.232e-02, 3.032e-02, 6.515e-02, 5.170e-02, 5.403e-02, 2.291e-02));
	r0 += mul(s0_0_1, M4(3.406e-02, 3.995e-02, -6.651e-02, 3.866e-02, 5.190e-02, 7.046e-02, 2.776e-02, 1.384e-01, -2.299e-02, -9.770e-02, -2.570e-03, 2.937e-02, 3.043e-02, 2.041e-01, -3.056e-02, 6.267e-02));
	r1 += mul(s0_0_1, M4(-3.313e-02, 2.674e-01, -2.339e-01, -7.741e-02, -2.347e-01, 5.088e-02, 6.432e-02, 2.817e-02, -5.217e-02, -1.010e-01, 5.407e-02, 4.058e-02, -5.597e-02, -1.028e-01, -7.683e-02, -7.126e-02));
	r2 += mul(s0_0_1, M4(-2.009e-01, -1.876e-01, 8.267e-02, 6.134e-02, 7.888e-02, 7.113e-01, -2.199e-01, -4.167e-01, 6.695e-02, 1.558e-01, 5.452e-02, -3.088e-02, 1.277e-01, -1.738e-01, -1.723e-03, -8.925e-02));
	r0 += mul(s0_0_2, M4(2.714e-02, 8.561e-02, 1.032e-03, -1.388e-01, 1.372e-02, -2.306e-02, -5.356e-02, 1.058e-01, 9.238e-03, -8.506e-02, 2.973e-02, 2.909e-02, -1.678e-03, 1.081e-01, 8.496e-03, -3.488e-02));
	r1 += mul(s0_0_2, M4(2.035e-02, 7.220e-02, -4.416e-02, -4.283e-02, -2.354e-01, 1.463e-01, -6.209e-02, -5.576e-02, -8.651e-02, -3.102e-02, -1.657e-01, 2.140e-02, -8.269e-02, 7.995e-02, -5.790e-02, 1.276e-02));
	r2 += mul(s0_0_2, M4(5.943e-02, 7.039e-02, 1.591e-02, 3.077e-03, -2.191e-01, 2.988e-01, 1.563e-02, 9.091e-02, -9.567e-02, 7.681e-02, 2.502e-02, -3.364e-03, 5.840e-02, -1.087e-01, -7.949e-02, -5.867e-02));
	r0 += mul(s0_1_0, M4(1.046e-01, -9.304e-02, -6.893e-02, -7.949e-02, -1.944e-01, -2.547e-02, -4.801e-02, -5.623e-02, -3.057e-02, 1.785e-02, -4.309e-02, -1.098e-02, 2.470e-02, 8.974e-02, -3.020e-02, 1.151e-01));
	r1 += mul(s0_1_0, M4(-3.796e-01, 5.584e-02, -2.653e-01, 6.624e-02, 5.330e-01, 9.029e-02, -1.868e-01, -2.532e-02, 5.940e-02, 1.786e-01, 2.017e-01, -4.901e-02, 6.143e-04, -1.032e-01, -1.238e-01, 1.743e-02));
	r2 += mul(s0_1_0, M4(-3.257e-01, -2.640e-02, -4.261e-01, 1.677e-01, 2.627e-01, -6.423e-01, -7.067e-02, -1.020e-01, -5.158e-02, 1.832e-01, 3.450e-02, 5.500e-02, -4.310e-02, 7.934e-02, -1.581e-01, -3.406e-02));
	r0 += mul(s0_1_1, M4(-2.199e-01, 1.785e-01, 7.012e-04, 5.030e-03, 1.500e-01, -4.713e-01, -2.011e-01, -1.770e-01, 3.907e-02, -5.222e-01, 8.187e-02, 2.770e-01, 9.191e-02, 1.584e-01, -5.505e-02, 3.721e-01));
	r1 += mul(s0_1_1, M4(5.133e-01, 3.967e-01, 1.907e-01, -2.084e-02, 3.654e-01, 5.203e-01, 7.618e-02, -1.249e-01, -1.198e-01, -1.790e+00, -4.949e-01, -6.854e-02, 5.241e-02, -1.476e-01, -1.882e-02, -1.887e-01));
	r2 += mul(s0_1_1, M4(1.845e-01, 7.265e-02, 5.716e-01, -1.444e-01, 7.592e-01, -8.641e-01, -4.485e-01, -1.781e-01, 3.100e-01, -6.850e-01, -5.089e-01, -4.407e-01, 7.768e-04, -1.902e-01, 1.024e+00, 2.921e-01));
	r0 += mul(s0_1_2, M4(6.016e-02, -1.610e-03, 6.213e-02, -3.582e-02, 9.052e-02, -8.425e-03, 2.259e-02, -1.013e-01, 2.756e-02, -1.788e-01, -1.328e-01, 1.432e-02, -1.604e-02, 1.851e-01, -1.579e-01, 1.197e-01));
	r1 += mul(s0_1_2, M4(-1.792e-01, -3.995e-01, 5.737e-02, -5.154e-02, 1.740e-01, 1.551e-01, 1.185e-01, 9.176e-03, -4.443e-03, 1.041e-02, 3.256e-01, -4.958e-02, 1.264e-01, -1.967e-02, -2.080e-01, 2.420e-01));
	r2 += mul(s0_1_2, M4(1.171e-01, -2.202e-01, -1.440e-01, 3.573e-02, -2.014e-01, 2.211e-01, -4.715e-03, 1.422e-01, -9.902e-01, -1.622e-02, -4.564e-02, 3.897e-01, 1.019e-02, 3.223e-01, -3.211e-01, 1.468e-01));
	r0 += mul(s0_2_0, M4(2.841e-02, 1.842e-02, 8.813e-02, 3.527e-03, -3.218e-02, 1.400e-02, -9.182e-02, -4.626e-02, 1.214e-02, -7.426e-02, 1.988e-02, -3.729e-02, 2.084e-02, 1.459e-01, 6.251e-03, 1.012e-01));
	r1 += mul(s0_2_0, M4(2.921e-01, -2.046e-01, -1.137e-01, 6.190e-03, -1.503e-01, 1.927e-01, -1.097e-02, -4.440e-02, 3.288e-01, -4.049e-02, 1.242e-01, -3.758e-02, -7.734e-02, -7.786e-02, 2.037e-02, 4.002e-03));
	r2 += mul(s0_2_0, M4(-1.017e-01, -9.984e-02, -8.328e-02, 1.599e-01, 2.287e-01, -4.505e-03, 1.160e-01, 1.351e-01, -2.115e-01, 2.108e-01, 1.547e-01, -3.226e-01, 1.026e-01, -1.024e-02, -1.566e-01, 2.409e-02));
	r0 += mul(s0_2_1, M4(-3.078e-02, -2.283e-02, -1.009e-01, -8.645e-03, -5.187e-02, -4.818e-02, 9.076e-02, -9.267e-02, -3.018e+00, -1.223e-01, 2.245e-01, -7.475e-01, -1.596e-01, 2.524e-01, -2.026e-02, 1.063e-01));
	r1 += mul(s0_2_1, M4(-2.743e-01, 5.419e-02, 9.779e-02, 1.944e-03, -6.902e-02, 2.313e-01, 1.519e-02, -6.128e-02, 3.409e-01, -1.305e-01, 1.911e-02, -1.474e-01, -3.650e-01, 1.799e-02, -2.020e-01, -4.832e-02));
	r2 += mul(s0_2_1, M4(-5.016e-01, 2.020e-01, 1.792e-01, -1.979e-02, 1.274e-01, -1.986e-01, -1.044e-02, 1.376e-01, 1.400e-01, -1.228e+00, -3.956e-01, -7.056e-01, 3.154e-01, 1.524e-01, 4.247e-02, 2.525e-01));
	r0 += mul(s0_2_2, M4(-2.487e-02, 6.464e-02, 1.464e-02, 1.254e-02, 1.132e-02, -4.306e-02, 1.082e-01, -3.169e-03, -2.071e-01, 1.465e-01, 4.517e-01, -2.056e-01, -3.975e-02, 2.075e-02, 2.186e-01, -1.454e-01));
	r1 += mul(s0_2_2, M4(-5.229e-02, 1.424e-01, -2.552e-02, -1.308e-02, 8.938e-02, 1.539e-01, 6.608e-02, 2.114e-03, 5.027e-02, 3.135e-01, 1.119e-01, 2.246e-02, -2.939e-01, 3.805e-01, 7.271e-02, 2.261e-01));
	r2 += mul(s0_2_2, M4(6.699e-01, -1.041e-01, -8.764e-02, -1.092e-01, -2.176e-01, 3.488e-02, 2.021e-03, 5.519e-02, -8.593e-01, 1.897e-01, 1.161e-01, 3.538e-02, -1.236e+00, -2.916e-02, -5.039e-01, -1.896e-01));
	r0 = max(r0, 0.0);
	T3[gxy] = r0;
	r1 = max(r1, 0.0);
	T4[gxy] = r1;
	r2 = max(r2, 0.0);
	T5[gxy] = r2;
}
//!PASS 3
//!DESC conv2 (12x8)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T3, T4, T5
//!OUT T0, T1
#define L0(x, y) V4(O(T3, x, y))
#define L1(x, y) V4(O(T4, x, y))
#define L2(x, y) V4(O(T5, x, y))
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(2.766e-02, -1.842e-02, -9.077e-02, -4.541e-02, 5.662e-03, 8.882e-02, -6.432e-03, 4.782e-02, 8.571e-03, 3.476e-01, 2.742e-01, 1.548e-01, -2.530e-03, -4.743e-02, 1.575e-02, 1.438e-02));
	r1 += mul(s0_0_0, M4(-7.829e-03, -4.823e-02, -1.474e-01, -5.769e-02, 6.930e-03, -4.193e-02, 3.845e-02, 3.321e-05, 5.387e-03, 4.848e-03, 3.323e-01, 8.730e-02, 1.053e-03, 4.239e-03, 5.330e-02, 6.703e-03));
	r0 += mul(s0_0_1, M4(6.866e-04, 1.874e-01, 1.853e-01, 2.056e-01, 2.443e-03, -5.940e-02, 1.204e-01, -5.495e-02, 1.403e-02, 9.350e-02, 2.271e-01, 9.803e-02, -5.059e-03, -4.535e-02, 1.946e-02, -1.591e-02));
	r1 += mul(s0_0_1, M4(-8.033e-02, 5.002e-02, 1.999e-01, 2.864e-01, 9.577e-02, -2.234e-02, 6.792e-02, 1.193e-01, 3.623e-01, -4.932e-02, 1.808e-01, 1.884e-01, -1.004e-03, 1.442e-02, -5.720e-03, -2.820e-02));
	r0 += mul(s0_0_2, M4(-5.059e-03, -5.207e-02, 5.096e-02, 1.202e-01, 1.101e-02, -2.174e-02, 1.224e-02, 1.250e-02, 1.547e-03, -4.297e-03, 4.076e-02, 4.710e-02, -1.325e-02, -4.967e-03, -8.877e-03, 1.157e-02));
	r1 += mul(s0_0_2, M4(1.937e-01, 9.410e-03, 9.601e-02, 7.167e-02, -5.700e-02, 7.196e-02, 8.228e-02, -9.425e-02, 6.763e-02, 3.504e-02, 5.488e-02, 1.399e-02, -5.982e-02, 2.201e-02, -6.731e-03, -5.285e-02));
	r0 += mul(s0_1_0, M4(5.009e-02, 3.862e-03, -2.786e-02, 7.044e-02, 3.461e-02, -9.342e-02, 1.942e-02, -1.164e-01, -3.383e-02, -1.721e-01, -1.275e-01, -2.482e-01, -6.815e-02, -1.612e-02, -2.071e-02, -2.110e-02));
	r1 += mul(s0_1_0, M4(1.642e-02, -3.339e-02, 1.922e-02, 3.249e-02, -7.288e-03, 2.143e-01, 7.459e-02, 9.673e-03, -5.248e-02, 1.503e-02, -1.807e-01, -1.448e-01, -3.327e-02, 4.539e-02, -7.988e-02, -4.482e-02));
	r0 += mul(s0_1_1, M4(5.249e-01, 8.374e-02, 4.408e-01, 7.103e-01, -8.179e-02, -4.120e-02, -2.401e-01, -1.679e-01, 1.571e-02, 5.379e-02, 2.226e-01, 3.288e-01, -7.482e-02, 4.243e-01, -3.154e-01, 1.765e-02));
	r1 += mul(s0_1_1, M4(5.870e-02, 2.521e-01, 4.620e-01, 5.137e-01, -1.223e-01, -1.259e-01, -4.521e-01, -3.798e-01, 1.208e-01, 2.874e-01, 4.133e-01, 9.415e-02, 4.316e-02, -9.790e-02, -2.802e-01, -2.649e-02));
	r0 += mul(s0_1_2, M4(3.144e-02, -1.888e-02, -1.299e-02, -1.108e-01, -3.590e-02, 1.450e-02, -1.231e-01, 9.587e-02, -2.123e-02, -5.008e-04, 1.606e-02, -1.075e-02, -1.706e-02, 6.825e-03, -4.804e-02, 4.036e-02));
	r1 += mul(s0_1_2, M4(2.847e-02, 8.680e-02, -6.280e-02, 5.087e-02, 8.605e-02, -2.008e-02, 2.000e-02, 1.265e-01, 3.061e-02, -2.141e-02, -1.581e-02, 1.681e-02, 2.528e-01, -8.475e-02, -5.612e-02, 2.366e-02));
	r0 += mul(s0_2_0, M4(9.979e-03, -5.698e-03, 4.219e-03, 2.437e-02, -9.023e-02, -1.908e-02, 1.080e-02, -3.171e-02, -4.835e-02, -4.284e-03, -4.183e-02, -3.328e-02, 3.504e-03, -2.046e-02, 5.418e-02, 8.325e-02));
	r1 += mul(s0_2_0, M4(5.358e-03, 9.064e-02, 3.701e-02, -7.820e-03, -1.797e-03, -1.536e-01, -1.404e-01, 1.486e-02, -1.048e-02, -8.681e-02, -1.048e-01, 7.219e-04, -2.790e-02, -1.903e-01, 1.140e-01, 3.621e-02));
	r0 += mul(s0_2_1, M4(4.260e-02, -2.846e-03, 6.223e-02, 1.700e-02, 3.212e-02, 2.687e-02, -1.841e-01, 5.844e-02, 1.699e-02, -5.996e-04, -2.585e-02, 6.116e-02, 3.027e-01, 1.125e-03, 2.992e-01, -3.605e-01));
	r1 += mul(s0_2_1, M4(-2.119e-03, 2.529e-01, 5.433e-02, 2.356e-02, -3.812e-02, -1.116e-01, 9.820e-02, -3.725e-02, 1.212e-02, 1.675e-01, 1.008e-01, 5.717e-03, 5.600e-02, 1.874e-01, 2.493e-01, -1.079e-01));
	r0 += mul(s0_2_2, M4(-5.195e-03, 5.798e-03, 4.051e-02, -6.723e-03, 2.874e-02, 1.020e-02, 1.772e-01, -8.776e-03, -7.269e-03, 6.230e-03, 8.575e-03, -1.500e-02, -5.270e-02, -4.477e-02, -7.390e-02, -1.971e-01));
	r1 += mul(s0_2_2, M4(-1.149e-02, 1.184e-01, 1.932e-02, 1.531e-02, 6.484e-02, 8.376e-02, 5.396e-02, 4.450e-02, -1.757e-02, -1.930e-02, 6.733e-03, -2.803e-03, -1.549e-01, -2.012e-01, -1.282e-01, -1.135e-01));
	r0 += mul(s1_0_0, M4(-2.056e-02, 1.055e-01, 4.425e-02, 1.048e-01, -8.658e-03, -3.919e-02, 8.306e-02, -1.452e-02, 6.754e-03, -3.356e-03, -5.849e-03, 3.705e-02, 9.537e-03, 5.168e-03, 1.147e-02, -7.890e-02));
	r1 += mul(s1_0_0, M4(-5.153e-03, -8.029e-02, 4.304e-02, 5.785e-02, 1.870e-02, 4.162e-02, 1.055e-01, 9.164e-02, 2.530e-02, 2.717e-02, 4.485e-03, 2.505e-02, -1.084e-02, -1.644e-02, -3.020e-03, 8.284e-02));
	r0 += mul(s1_0_1, M4(-1.029e-01, 7.015e-02, -2.115e-01, 5.821e-02, -6.336e-03, -4.985e-02, 8.353e-02, 1.032e-01, 1.340e-03, 2.161e-02, 1.864e-02, 2.356e-03, -7.526e-03, 6.316e-02, 1.293e-01, 2.488e-02));
	r1 += mul(s1_0_1, M4(1.718e-01, -4.567e-02, -2.212e-01, 1.367e-01, -8.517e-02, 5.623e-02, 5.498e-02, -1.140e-01, 1.837e-03, -5.855e-03, 1.189e-02, -7.510e-03, -1.521e-01, 1.601e-02, 9.587e-02, 7.185e-02));
	r0 += mul(s1_0_2, M4(-3.511e-02, -3.358e-04, -2.700e-02, 2.909e-02, 4.149e-03, 3.693e-03, 4.254e-02, 4.032e-03, 5.116e-05, 2.720e-03, 1.949e-02, 8.010e-03, -4.760e-03, 1.703e-02, 4.425e-02, 4.309e-02));
	r1 += mul(s1_0_2, M4(1.156e-02, 1.022e-02, 1.605e-02, -4.078e-02, -2.947e-02, 7.606e-03, 4.088e-02, -2.857e-02, 1.983e-02, -5.512e-03, 1.975e-06, 1.689e-02, -4.085e-03, 1.649e-02, 4.013e-02, 4.804e-02));
	r0 += mul(s1_1_0, M4(3.911e-02, -2.644e-02, -3.876e-02, -7.534e-02, -7.167e-02, -1.053e-01, -9.899e-03, -1.783e-01, 3.765e-03, -1.108e-01, -1.141e-01, 3.268e-02, 1.733e-02, 5.215e-01, 8.770e-01, 6.021e-01));
	r1 += mul(s1_1_0, M4(-3.127e-02, 1.472e-01, -5.045e-02, -2.581e-02, -1.592e-02, 2.643e-02, -2.708e-01, -6.945e-02, -1.198e-02, -2.843e-02, -8.467e-02, -6.928e-02, -2.626e-02, 3.445e-02, 5.801e-01, 7.603e-01));
	r0 += mul(s1_1_1, M4(1.816e-01, -1.242e-01, 7.388e-02, -2.791e-01, -7.853e-02, -9.981e-02, -2.140e-01, -3.377e-01, -1.190e-02, -1.480e-01, -3.265e-01, -1.722e-01, -8.489e-03, -1.412e-02, 2.226e-02, 1.762e-01));
	r1 += mul(s1_1_1, M4(-8.981e-02, -3.186e-02, 1.509e-01, -1.930e-01, -1.589e-01, -2.752e-01, -2.703e-01, -1.440e-01, -4.954e-02, 4.948e-02, -2.498e-01, -2.017e-01, 7.026e-02, 8.663e-02, 1.626e-01, 6.113e-02));
	r0 += mul(s1_1_2, M4(2.832e-02, 3.249e-02, 4.254e-02, -3.046e-02, -2.848e-02, -6.117e-03, -1.335e-01, -1.465e-01, 1.021e-03, -3.327e-03, -3.307e-02, -4.379e-02, 1.764e-02, 2.053e-03, 2.369e-02, -3.823e-02));
	r1 += mul(s1_1_2, M4(-2.927e-02, -1.794e-02, -5.867e-02, -4.348e-02, -1.687e-01, 1.796e-02, -1.085e-01, -1.528e-01, -5.518e-02, -2.712e-02, -4.476e-02, -2.012e-02, -3.756e-03, 6.144e-03, -6.336e-03, -1.872e-02));
	r0 += mul(s1_2_0, M4(-3.602e-02, 8.858e-04, 1.344e-02, 2.032e-02, -8.512e-02, -1.492e-02, 2.559e-02, -2.087e-02, 4.868e-02, 4.633e-03, -1.964e-01, -4.158e-03, 5.053e-01, -2.240e-02, 9.383e-02, -7.612e-02));
	r1 += mul(s1_2_0, M4(-4.421e-03, -1.054e-01, 1.404e-02, 6.125e-03, -2.103e-03, -4.324e-01, -1.897e-01, 3.510e-02, -5.509e-02, 1.861e-01, 1.774e-01, -1.243e-01, 1.286e-02, 4.635e-01, 1.481e-02, 2.379e-02));
	r0 += mul(s1_2_1, M4(-5.245e-02, 6.132e-03, -7.344e-02, 5.091e-02, -4.470e-02, -9.970e-03, -9.866e-02, -7.041e-02, -3.991e-02, 9.845e-03, 3.722e-02, -7.193e-02, 2.324e-02, -1.991e-02, -4.348e-02, -1.401e-01));
	r1 += mul(s1_2_1, M4(2.211e-03, -4.354e-02, -1.523e-01, 3.079e-02, -4.510e-02, -1.405e-01, -1.536e-01, -4.637e-02, 1.813e-01, -3.310e-01, -2.145e-01, 1.846e-03, -1.022e-01, -5.846e-02, -1.782e-01, -4.415e-02));
	r0 += mul(s1_2_2, M4(-3.049e-02, -2.661e-02, -6.748e-02, -2.520e-02, -2.433e-03, -5.119e-03, -3.951e-02, 3.388e-03, 3.047e-03, 6.444e-04, 1.537e-02, 5.334e-02, -8.368e-03, -4.989e-03, -3.234e-02, 5.193e-03));
	r1 += mul(s1_2_2, M4(-1.586e-03, -4.343e-03, 4.483e-03, -2.999e-02, -1.394e-03, -8.597e-02, -3.308e-02, -3.321e-03, 1.377e-02, 3.690e-02, 5.738e-02, 9.454e-03, -2.718e-02, -2.220e-04, 1.568e-03, -1.885e-03));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-5.788e-03, -2.539e-01, -1.340e-01, -6.678e-02, 7.822e-04, -5.337e-02, -1.943e-02, -7.257e-02, 1.395e-02, -5.930e-03, -1.184e-02, 6.349e-03, 4.538e-03, -6.314e-03, -1.198e-02, 2.155e-02));
	r1 += mul(s0_0_0, M4(3.019e-03, -2.550e-02, -1.596e-01, -7.625e-02, -2.131e-02, -6.357e-03, -6.850e-02, -3.714e-02, 4.733e-03, 2.482e-02, 3.863e-03, 8.610e-03, 1.283e-02, 1.486e-02, -2.672e-02, -1.603e-02));
	r0 += mul(s0_0_1, M4(1.944e-03, 1.441e-02, -2.801e-03, 1.065e-01, -7.520e-03, -5.735e-02, -8.958e-02, -8.343e-02, 8.935e-04, -1.545e-02, -6.314e-02, 2.506e-02, 1.190e-02, -3.045e-02, -5.740e-02, -4.569e-02));
	r1 += mul(s0_0_1, M4(-1.482e-01, 1.433e-02, 5.240e-02, -1.616e-01, -5.282e-02, -5.833e-03, -7.399e-02, -6.028e-02, -1.426e-03, 4.896e-03, -9.195e-02, -8.119e-02, -1.059e-02, -7.839e-02, -5.969e-02, -2.320e-02));
	r0 += mul(s0_0_2, M4(-9.387e-03, -1.659e-02, -5.761e-03, 3.032e-02, 3.137e-03, 8.514e-04, -1.636e-02, 1.190e-03, -6.054e-03, -1.899e-02, -5.110e-02, 4.334e-03, -1.106e-03, 1.424e-02, -5.202e-02, -7.358e-02));
	r1 += mul(s0_0_2, M4(6.190e-02, -7.878e-03, -3.362e-02, 5.198e-02, -3.783e-02, -1.157e-02, -1.136e-02, -1.905e-03, 3.626e-02, -1.383e-02, -6.024e-02, -2.975e-02, -4.283e-02, -1.546e-02, -6.217e-02, 2.389e-03));
	r0 += mul(s0_1_0, M4(-2.317e-01, -2.188e-01, -8.967e-02, -1.272e-01, -2.500e-02, -1.375e-01, -2.437e-01, -1.455e-01, -1.451e-02, -1.319e-02, -1.885e-02, -1.607e-02, -1.621e-03, 1.027e-02, 3.248e-03, -1.308e-02));
	r1 += mul(s0_1_0, M4(2.316e-02, 6.613e-03, -6.560e-02, 1.027e-02, 9.272e-03, -9.321e-02, -3.714e-01, -1.364e-01, 1.729e-02, -1.941e-02, -7.787e-02, -2.765e-02, 2.068e-02, -5.354e-02, 2.893e-02, -1.623e-02));
	r0 += mul(s0_1_1, M4(2.234e-02, 3.337e-02, -3.333e-01, 2.088e-01, -2.790e-02, -1.465e-01, -2.017e-01, -2.179e-01, 3.675e-02, 3.752e-01, -9.117e-01, -6.190e-01, 1.599e-02, -3.855e-02, -8.068e-01, -8.730e-01));
	r1 += mul(s0_1_1, M4(-2.012e-01, -9.189e-03, 4.288e-02, -1.760e-01, -1.880e-01, -3.401e-02, -1.666e-01, -2.493e-01, 6.053e-02, -3.388e-02, -5.918e-01, -8.379e-01, 9.604e-02, 6.872e-02, -8.540e-01, -7.289e-01));
	r0 += mul(s0_1_2, M4(2.024e-02, 5.209e-03, 6.882e-02, -1.046e-01, 2.769e-03, -4.165e-02, -8.422e-02, -7.008e-02, 2.154e-02, -1.803e-02, 1.151e-01, -2.030e-01, -2.410e-02, 4.597e-03, -1.373e-01, -4.168e-02));
	r1 += mul(s0_1_2, M4(6.132e-02, -3.273e-02, -5.064e-02, 3.706e-02, -9.135e-02, -3.166e-03, -6.999e-02, -9.301e-02, 2.733e-01, -1.141e-01, -1.654e-01, 1.432e-01, -1.443e-01, -2.525e-02, -1.393e-01, -1.342e-01));
	r0 += mul(s0_2_0, M4(-1.118e-01, -2.142e-02, -1.033e-01, 2.283e-02, -4.707e-02, 2.367e-02, 1.503e-02, 5.478e-02, -1.693e-02, 1.600e-02, 1.318e-02, 1.078e-02, 5.808e-03, -5.703e-03, -1.470e-02, 1.381e-04));
	r1 += mul(s0_2_0, M4(-1.108e-02, -3.528e-01, -8.912e-02, -6.039e-02, 1.287e-02, -3.352e-01, -8.211e-03, 3.686e-03, -8.998e-03, -5.842e-02, 2.754e-02, -5.094e-03, 8.052e-03, 6.050e-02, -8.958e-03, 1.507e-03));
	r0 += mul(s0_2_1, M4(4.128e-02, 1.603e-02, 6.793e-02, 1.241e-01, -9.260e-02, -8.348e-03, -9.560e-02, 1.532e-02, 2.305e-01, 3.612e-03, -5.945e-02, 4.160e-02, -6.958e-02, 1.914e-02, 1.399e-03, -4.963e-02));
	r1 += mul(s0_2_1, M4(6.564e-02, 4.730e-02, 1.274e-01, 8.576e-02, -2.010e-02, -1.304e-01, -1.332e-01, 3.860e-02, -2.252e-02, -5.281e-01, 1.174e-02, -1.200e-05, 2.403e-03, -6.306e-01, 2.184e-02, -3.549e-02));
	r0 += mul(s0_2_2, M4(-1.443e-02, -5.055e-03, 5.578e-04, -2.112e-02, -2.856e-02, -2.932e-03, -8.647e-02, 6.673e-02, -5.476e-02, -1.433e-02, 5.436e-02, -6.854e-02, 3.545e-02, 3.480e-03, -2.025e-03, -3.479e-02));
	r1 += mul(s0_2_2, M4(-5.468e-03, 3.621e-02, -1.576e-03, -1.919e-02, 3.123e-02, -5.219e-02, -1.763e-02, -1.105e-02, 2.437e-02, -3.777e-02, -2.343e-02, -2.081e-02, -1.269e-02, -1.582e-01, -2.180e-02, -2.234e-02));
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
}
//!PASS 4
//!DESC out-shuffle (8x4)
//!BLOCK_SIZE 16
//!NUM_THREADS 64
//!IN INPUT, T0, T1
//!OUT OUTPUT
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = (Rmp8x8(tid.x) << 1) + blockStart;
	uint2 sz = GetOutputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = ((gxy >> 1) + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(3.934e-02, 3.780e-03, -5.679e-03, 1.149e-04, 1.341e-03, -8.761e-05, -3.968e-04, -3.993e-05, -4.851e-03, 1.835e-03, 5.556e-05, 7.798e-04, 2.469e-02, -1.174e-03, -1.323e-03, 3.526e-04));
	r0 += mul(s0_0_1, M4(2.803e-01, 2.096e-01, 3.170e-03, -1.374e-03, -5.823e-02, 1.462e-03, -8.209e-03, -3.061e-04, -9.978e-03, -6.923e-02, -9.338e-03, 3.490e-03, 9.694e-02, 7.544e-02, -2.192e-03, -6.283e-04));
	r0 += mul(s0_0_2, M4(2.670e-02, 1.420e-01, 1.837e-03, 1.259e-03, -1.840e-02, -6.835e-03, -8.063e-04, -2.712e-03, -7.900e-03, -1.714e-02, -1.390e-03, 7.175e-04, -5.525e-04, 1.850e-02, -1.505e-04, 1.723e-03));
	r0 += mul(s0_1_0, M4(1.840e-02, 1.637e-03, 9.853e-05, 7.219e-03, -3.832e-02, -3.571e-03, 5.148e-03, 5.882e-04, 1.847e-02, -1.061e-02, -5.817e-02, 5.783e-03, 1.004e-01, -2.675e-03, 1.009e-01, 2.656e-05));
	r0 += mul(s0_1_1, M4(-2.445e-02, -8.464e-03, -3.662e-01, -2.942e-01, -4.813e-01, -1.929e-01, -1.841e-01, 8.119e-03, 2.627e-01, 3.604e-01, 3.135e-01, -7.743e-01, -2.948e-01, 3.451e-01, 2.921e-01, 3.242e-01));
	r0 += mul(s0_1_2, M4(5.921e-03, 6.846e-03, 1.988e-03, -6.368e-02, -1.208e-02, 1.578e-01, -3.889e-04, 2.420e-01, -2.060e-03, 7.395e-02, -5.113e-03, 1.081e-01, -3.823e-03, -3.875e-02, -8.788e-03, 9.986e-03));
	r0 += mul(s0_2_0, M4(-2.275e-04, 1.594e-04, -2.130e-04, 1.738e-04, -1.552e-02, -1.632e-03, 7.852e-04, -7.749e-03, -4.329e-03, -8.794e-04, -2.777e-03, 2.565e-03, -1.171e-03, 5.974e-04, 1.841e-02, 2.668e-03));
	r0 += mul(s0_2_1, M4(3.907e-04, -8.735e-04, 2.477e-03, -4.487e-04, 3.468e-03, 4.658e-03, 2.322e-01, 2.653e-01, 2.792e-03, -1.329e-03, 6.665e-02, 1.093e-01, 5.587e-03, -1.862e-02, -8.712e-02, -3.572e-02));
	r0 += mul(s0_2_2, M4(3.991e-05, 8.341e-04, 4.540e-04, 2.625e-03, -7.216e-04, -3.556e-03, -2.782e-03, 1.079e-01, 1.410e-03, -1.328e-03, -4.892e-04, 2.327e-02, 2.811e-03, 2.302e-03, -4.914e-03, -1.003e-02));
	r0 += mul(s1_0_0, M4(6.616e-02, -9.574e-04, 9.865e-03, 7.925e-04, 1.142e-02, -3.138e-03, -1.058e-02, -1.304e-04, -1.834e-03, 1.054e-03, 3.465e-03, -6.416e-04, -1.421e-02, -2.151e-03, -3.143e-03, -6.925e-04));
	r0 += mul(s1_0_1, M4(2.452e-02, 7.396e-03, 1.303e-03, 2.334e-03, -7.286e-01, 2.522e-02, 1.786e-02, -1.391e-02, -1.218e-01, -4.229e-02, 1.012e-02, 1.194e-03, 5.871e-02, 6.165e-02, 2.444e-03, -2.964e-03));
	r0 += mul(s1_0_2, M4(-2.042e-04, 5.489e-04, -1.460e-04, 3.342e-04, 1.980e-02, -9.252e-02, 3.400e-04, -3.777e-02, 1.126e-03, -2.566e-02, 1.169e-03, -3.716e-03, 2.500e-03, 2.308e-02, 4.325e-04, -9.918e-04));
	r0 += mul(s1_1_0, M4(2.495e-01, -1.649e-03, 2.112e-01, -5.559e-03, 1.904e-03, -3.139e-03, 3.108e-03, 3.363e-03, 6.116e-02, 1.409e-03, 4.374e-02, -1.077e-02, -1.664e-01, 1.453e-02, -5.823e-02, 3.877e-03));
	r0 += mul(s1_1_1, M4(-2.745e-02, -3.604e-01, -2.117e-03, -2.939e-01, 1.080e-02, 8.775e-03, -5.634e-02, -2.054e-02, 2.040e-01, 1.649e-01, -8.128e-01, 2.239e-01, 2.797e-01, -9.944e-01, 2.065e-01, 2.686e-01));
	r0 += mul(s1_1_2, M4(4.534e-04, -4.626e-04, 1.433e-04, -7.602e-04, -4.347e-04, 4.284e-04, 1.074e-02, 9.734e-03, -5.866e-03, 8.992e-03, 1.233e-02, -8.032e-02, 4.615e-03, 6.584e-02, 3.816e-03, 2.486e-02));
	r0 += mul(s1_2_0, M4(1.454e-02, 2.611e-03, 1.229e-01, 4.525e-03, 3.665e-05, 3.838e-06, -2.657e-03, 1.105e-05, 1.641e-04, 4.536e-04, 2.277e-02, -2.640e-04, 1.299e-03, 3.340e-03, -3.918e-02, -7.163e-03));
	r0 += mul(s1_2_1, M4(6.740e-04, -2.251e-03, 3.195e-04, -4.522e-02, -7.194e-04, 1.368e-04, 1.711e-03, 4.544e-05, -2.833e-03, 1.066e-03, 7.282e-02, 3.406e-02, -1.716e-02, 1.833e-02, 1.210e-02, -7.058e-02));
	r0 += mul(s1_2_2, M4(-2.432e-04, 3.214e-04, 2.616e-05, 2.566e-03, -6.923e-05, -4.413e-04, -3.680e-05, -8.887e-04, -2.158e-03, 1.867e-04, -5.903e-04, 5.740e-03, -2.137e-03, -4.192e-03, 1.220e-03, -1.172e-02));
	r0 += V4(2.964e-08, -1.291e-08, 1.680e-08, -2.976e-08);
	static const float3x3 RY = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081}, YR = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float2 opt = float2(GetOutputPt());
	float2 fpos = (float2(gxy) + 0.5) * opt;
	float3 yuv;
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.x), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.y), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.z), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.w), yuv.yz)), 1.0);
}
