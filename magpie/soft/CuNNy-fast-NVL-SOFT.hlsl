// CuNNy fast NVL SOFT - https://github.com/funnyplanter/CuNNy

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


//!MAGPIE EFFECT
//!VERSION 4
//!SORT_NAME CuNNy-SOFT-0000284

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
Texture2D OUTPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!COMMON
#define O(t, x, y) t.SampleLevel(SP, pos + float2(x, y) * pt, 0)
#define V4 min16float4
#define M4 min16float4x4

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T4;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T5;

//!PASS 1
//!DESC in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT T0, T1, T2
#define L0(x, y) min16float(dot(float3(0.299, 0.587, 0.114), O(INPUT, x, y).rgb))
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	r0 += V4(1.513e-02, 7.916e-03, -2.017e-01, -7.924e-03) * s0_0_0;
	r1 += V4(-6.077e-02, 7.317e-03, -2.280e-01, 2.231e-01) * s0_0_0;
	r2 += V4(-9.229e-03, 1.264e-02, 1.071e-02, 4.248e-02) * s0_0_0;
	r0 += V4(-1.511e-02, -3.096e-01, -3.169e-01, -5.360e-02) * s0_0_1;
	r1 += V4(3.652e-01, 3.531e-02, -3.157e-01, -5.686e-01) * s0_0_1;
	r2 += V4(3.041e-02, 5.176e-01, -1.610e-02, -3.185e-02) * s0_0_1;
	r0 += V4(-4.333e-03, -5.924e-02, 4.580e-01, -3.098e-02) * s0_0_2;
	r1 += V4(-1.584e-02, -3.880e-02, 1.084e-01, 7.618e-01) * s0_0_2;
	r2 += V4(-1.138e-02, -5.107e-01, 4.053e-03, 6.740e-03) * s0_0_2;
	r0 += V4(-3.259e-02, -3.115e-01, 2.564e-02, -5.962e-01) * s0_1_0;
	r1 += V4(3.096e-01, 1.177e-02, -6.771e-01, -1.545e-01) * s0_1_0;
	r2 += V4(2.708e-02, -6.415e-01, -3.224e-02, 9.396e-01) * s0_1_0;
	r0 += V4(-8.773e-02, 9.238e-01, -5.513e-01, 3.178e-01) * s0_1_1;
	r1 += V4(-1.129e+00, -3.356e-02, 2.702e-01, 4.424e-01) * s0_1_1;
	r2 += V4(9.512e-01, 1.250e-01, -9.890e-01, -9.355e-01) * s0_1_1;
	r0 += V4(9.902e-02, -1.470e-01, -4.203e-01, -1.465e-03) * s0_1_2;
	r1 += V4(2.220e-01, -1.035e+00, 4.030e-01, -1.030e+00) * s0_1_2;
	r2 += V4(4.577e-02, 3.747e-01, 1.012e+00, -3.329e-02) * s0_1_2;
	r0 += V4(3.273e-02, -7.460e-02, 3.062e-01, 5.060e-02) * s0_2_0;
	r1 += V4(-8.339e-03, -1.729e-02, 2.778e-01, -7.321e-02) * s0_2_0;
	r2 += V4(-1.576e-02, 6.344e-01, 2.635e-02, 3.329e-02) * s0_2_0;
	r0 += V4(9.004e-01, -1.405e-01, 7.250e-01, 1.225e-01) * s0_2_1;
	r1 += V4(7.686e-02, -9.343e-03, 4.117e-01, 1.051e-01) * s0_2_1;
	r2 += V4(-9.737e-01, -6.542e-01, -6.073e-02, -1.794e-02) * s0_2_1;
	r0 += V4(-9.113e-01, 1.151e-01, -3.183e-02, 4.895e-03) * s0_2_2;
	r1 += V4(7.142e-02, 1.077e+00, -2.510e-01, 2.969e-01) * s0_2_2;
	r2 += V4(-4.327e-02, 1.362e-01, 4.891e-02, -5.562e-03) * s0_2_2;
	r0 += V4(-9.316e-03, 7.786e-03, -6.974e-03, -4.091e-03);
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 += V4(-2.517e-03, -1.879e-03, 9.013e-04, -2.557e-03);
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 += V4(-1.138e-03, -2.900e-03, -1.187e-03, -6.140e-04);
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 2
//!DESC conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T0, T1, T2
//!OUT T3, T4, T5
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(7.773e-02, 6.757e-01, -2.274e-02, 7.745e-02, 1.675e-01, 3.301e-01, -1.581e-01, -7.753e-02, 2.027e-01, 1.797e-01, -2.086e-01, -4.638e-02, 1.145e-01, 7.071e-01, 2.393e-02, -9.452e-03));
	r1 += mul(s0_0_0, M4(2.991e-02, 1.067e-01, 1.527e+00, 2.620e-01, 1.730e-02, 7.523e-03, 1.884e-01, -1.007e-01, 1.756e-02, -2.214e-02, -4.432e-02, -2.735e-02, -5.450e-02, -1.116e-01, 2.130e-01, 1.102e-02));
	r2 += mul(s0_0_0, M4(-4.199e-01, 4.280e-01, -4.727e-01, 2.491e-01, 1.855e-01, 1.065e-01, -1.255e-01, 2.998e-02, 2.644e-01, -3.108e-02, -8.441e-03, -5.176e-02, -2.322e-01, -1.082e-01, -2.345e-02, -1.324e-01));
	r0 += mul(s0_0_1, M4(-1.655e-01, 4.563e-01, -9.857e-02, 2.320e-01, 2.245e-02, -2.078e-01, -5.747e-02, -1.334e-03, -3.680e-03, -9.094e-02, -3.174e-01, 1.198e-02, -1.223e-01, -1.101e+00, 8.845e-02, -5.521e-02));
	r1 += mul(s0_0_1, M4(3.711e-01, -7.443e-02, 1.728e-01, -1.813e-01, 8.926e-02, -1.125e-01, 3.603e-01, 2.602e-01, 2.221e-01, 2.018e-02, 1.587e-01, 1.194e-01, -6.888e-01, -5.526e-02, 1.731e-01, -7.688e-03));
	r2 += mul(s0_0_1, M4(1.009e+00, -2.858e-02, 4.423e-02, 8.182e-03, -3.554e-02, -2.594e-02, 8.238e-02, -1.603e-02, 1.687e-02, -7.660e-02, 3.676e-02, -7.140e-02, 2.602e-01, 2.260e-01, 2.484e-01, -3.165e-02));
	r0 += mul(s0_0_2, M4(-1.276e-02, 5.770e-01, 1.400e-01, -3.488e-03, 3.766e-03, -3.232e-01, -2.428e-02, 3.755e-03, -8.915e-03, -2.498e-01, -4.999e-01, -2.948e-02, -3.560e-02, 9.270e-02, 1.394e-01, 2.107e-01));
	r1 += mul(s0_0_2, M4(1.004e-01, -5.256e-03, -1.242e-01, 9.066e-02, 6.759e-02, 1.532e-02, 5.972e-02, -1.064e-01, -2.646e-01, 5.822e-02, -1.028e-01, -1.190e-02, -3.422e-01, 5.939e-02, 3.793e-01, -1.574e-01));
	r2 += mul(s0_0_2, M4(-3.017e-01, -4.818e-02, 2.779e-01, -4.028e-02, 1.576e-01, -3.842e-03, -7.145e-02, -8.838e-03, -9.255e-02, 2.627e-01, -5.076e-03, 9.604e-02, 2.925e-01, 2.423e-02, 8.978e-03, 2.949e-02));
	r0 += mul(s0_1_0, M4(2.223e-01, 5.421e-01, -2.607e-01, 9.047e-02, 9.219e-03, -4.818e-01, -3.248e-01, 5.326e-02, -1.916e-01, -2.030e-01, -2.684e-01, -1.408e-02, -8.516e-02, -1.969e-01, -2.657e-02, -5.428e-02));
	r1 += mul(s0_1_0, M4(1.001e-02, -1.927e-01, 1.270e+00, -7.203e-02, 2.483e-01, -3.104e-02, 9.148e-02, 1.231e-01, -9.289e-02, 8.130e-02, -8.418e-01, 9.303e-02, 1.117e-01, -1.042e-01, 2.088e-01, 4.692e-02));
	r2 += mul(s0_1_0, M4(-4.283e-01, -1.169e-01, -6.551e-03, -1.994e-01, -2.249e-01, 4.509e-02, 1.098e-01, 1.157e-01, -1.419e-01, 2.095e-01, 1.201e-01, 8.077e-02, 2.679e-01, 1.083e-02, -5.339e-02, -2.262e-01));
	r0 += mul(s0_1_1, M4(1.450e-01, -3.518e-01, 1.983e-01, -1.530e-01, -1.482e-01, -1.733e-01, -3.256e-01, 4.137e-02, -1.649e-01, -1.615e+00, -5.020e-01, -6.792e-02, 6.117e-01, -2.929e-01, -6.647e-02, -3.200e-02));
	r1 += mul(s0_1_1, M4(-1.545e-01, 1.235e-01, 1.953e-01, 2.375e-01, -4.005e-01, -2.690e-01, -7.798e-02, -2.793e-01, 2.881e-01, 5.035e-02, 1.851e-01, 4.065e-02, -1.073e-01, 4.018e-03, 6.350e-01, -6.074e-01));
	r2 += mul(s0_1_1, M4(-4.137e-01, 3.173e-02, -3.198e-01, 3.641e-02, -1.456e+00, 1.553e-01, 2.829e-01, 1.882e-02, 2.125e-01, -2.233e-01, -8.751e-02, 1.384e-01, 6.078e-01, 2.338e-01, -4.326e-01, 1.682e-01));
	r0 += mul(s0_1_2, M4(7.983e-03, -3.115e-01, -1.649e-02, 1.136e-03, 1.476e-01, -8.286e-01, -1.487e-01, -6.487e-02, -1.479e-01, -2.823e-01, -2.402e-01, -1.695e-01, 7.790e-03, 5.363e-01, 3.918e-02, -4.852e-02));
	r1 += mul(s0_1_2, M4(-3.517e-02, -3.979e-02, 1.308e-02, -5.915e-02, -1.072e-01, 2.150e-01, -2.486e-01, -3.749e-01, -2.568e-01, 9.993e-02, -9.249e-02, -1.563e-01, 4.102e-01, -1.524e-02, 2.956e-02, 2.246e-01));
	r2 += mul(s0_1_2, M4(1.564e-01, 3.405e-02, -2.270e-01, 4.712e-03, 8.468e-01, -1.592e-03, -3.023e-01, -3.007e-03, -4.790e-01, 1.346e-01, -2.919e-02, 1.031e-01, 2.629e+00, -2.132e-01, -1.627e-02, -9.179e-02));
	r0 += mul(s0_2_0, M4(2.816e-02, 1.520e-01, 1.513e-01, -3.106e-02, -1.290e-01, -1.988e-01, -2.109e-01, -4.032e-02, 4.791e-03, -9.362e-02, -1.210e-01, -1.812e-02, 7.055e-02, 4.075e-01, -2.670e-02, 5.140e-02));
	r1 += mul(s0_2_0, M4(-3.021e-02, -3.270e-02, -1.895e+00, -9.049e-02, -1.031e-01, 1.174e-01, -6.995e-01, 6.183e-02, 3.734e-04, 1.560e-02, 4.479e-01, 2.505e-02, -1.452e-01, 6.919e-03, 4.462e-01, 1.155e-02));
	r2 += mul(s0_2_0, M4(1.868e-01, -1.844e-02, -1.849e-01, -5.120e-02, 2.773e-01, -7.052e-02, 1.817e-01, 1.347e-01, -3.313e-01, 5.363e-02, -4.567e-02, 5.528e-02, -6.243e-01, 1.222e-01, -1.589e-01, 1.076e-01));
	r0 += mul(s0_2_1, M4(1.516e-03, -3.955e-01, -5.379e-02, -8.340e-02, -1.642e-02, 3.313e-01, -5.799e-01, 9.839e-02, 6.059e-02, -4.209e-01, -2.626e-01, -8.474e-02, -6.664e-02, -3.058e-01, -1.968e-01, -1.160e-02));
	r1 += mul(s0_2_1, M4(-8.274e-03, -2.646e-02, -1.923e-01, -1.157e-01, -1.724e-01, 3.721e-01, -1.255e-01, 2.443e-01, -1.802e-01, 3.009e-02, -7.520e-01, -2.410e-02, 9.811e-02, 2.523e-03, -1.060e+00, 1.562e-01));
	r2 += mul(s0_2_1, M4(-2.251e-01, -5.652e-02, -1.980e-02, -9.787e-02, 3.066e-01, -7.298e-02, -2.137e-01, 2.803e-01, 1.258e-01, 1.096e-01, -9.705e-02, 6.389e-02, -5.709e-01, 5.563e-02, -3.156e-01, -8.794e-02));
	r0 += mul(s0_2_2, M4(-1.260e-02, -1.734e-01, -6.330e-02, 1.053e-02, -5.687e-02, 3.038e-01, -2.953e-01, 5.782e-03, -3.321e-02, -2.885e-01, -3.525e-01, -2.849e-02, -4.398e-02, -2.109e+00, -4.972e-01, 3.133e-02));
	r1 += mul(s0_2_2, M4(-5.718e-03, 1.677e-02, 1.435e-01, 3.657e-02, 1.436e-01, 1.685e-01, 4.302e-01, 1.394e-01, -1.392e-01, -2.508e-02, -2.549e-01, -1.033e-01, -2.106e-01, 1.621e-01, 3.538e-01, -1.665e-01));
	r2 += mul(s0_2_2, M4(8.527e-02, 2.775e-02, 1.393e-02, 1.398e-02, -8.245e-02, -1.578e-01, -1.864e-02, 5.458e-02, -7.804e-02, -2.533e-02, 3.606e-01, 6.388e-02, -3.996e-01, -1.606e-01, -3.689e-02, 7.167e-01));
	r0 += mul(s1_0_0, M4(-1.350e-01, 3.423e-01, -1.600e-01, -2.346e-04, -1.711e-01, 8.210e-01, 4.542e-01, -8.170e-02, -2.168e-01, -3.972e-01, 1.286e-01, 4.519e-02, -9.627e-03, -3.526e-01, -5.702e-02, 2.979e-02));
	r1 += mul(s1_0_0, M4(3.514e-02, -4.235e-02, 9.679e-02, 9.238e-02, -2.199e-01, -7.115e-02, 4.191e-02, -5.152e-01, -5.342e-03, 4.332e-02, -8.860e-02, 4.386e-02, -7.767e-02, 2.934e-02, 1.334e-01, -1.274e-01));
	r2 += mul(s1_0_0, M4(-2.782e-01, -6.706e-02, -1.679e-01, -3.168e-02, 5.184e-02, -1.071e-01, -2.656e-01, 1.933e-01, 1.126e-02, 2.350e-02, 4.274e-02, 2.186e-02, 1.294e-01, -4.413e-02, 2.426e-02, 4.689e-02));
	r0 += mul(s1_0_1, M4(-9.368e-02, 1.612e-01, -1.173e-01, -5.341e-02, -5.554e-02, -7.177e-02, 3.936e-01, 1.096e-01, 8.928e-02, 5.568e-01, 1.015e-01, 4.552e-02, 1.960e-02, 2.705e-01, 4.424e-02, -6.037e-02));
	r1 += mul(s1_0_1, M4(1.110e-01, -3.793e-03, -1.151e-01, 2.759e-01, 1.840e-01, -5.715e-02, 2.597e-01, -9.420e-02, -1.594e-01, 4.979e-02, -4.179e-01, -9.477e-02, -1.066e-02, 3.104e-02, -1.182e-01, -1.886e-01));
	r2 += mul(s1_0_1, M4(-9.019e-02, 3.232e-01, -3.653e-02, 2.807e-02, -5.223e-02, -2.369e-01, -1.069e-01, -1.782e-01, -3.680e-01, -3.164e-02, 4.960e-02, 5.009e-02, -4.506e-02, -3.205e-02, -1.416e-02, 3.064e-03));
	r0 += mul(s1_0_2, M4(5.090e-02, -2.738e-01, 5.123e-02, 8.997e-02, -4.499e-02, -1.488e-01, 9.861e-02, -1.979e-02, -4.591e-02, -3.376e-02, 7.855e-02, -3.282e-02, -6.451e-05, 2.945e-01, 3.945e-03, 3.767e-02));
	r1 += mul(s1_0_2, M4(-1.538e-01, 6.241e-02, 3.690e-02, 7.992e-02, -2.252e-01, 2.787e-03, -1.604e-01, -5.116e-02, -2.034e-03, -1.707e-02, 1.601e-02, -7.596e-03, 1.462e-01, 2.177e-02, 7.733e-02, -3.045e-02));
	r2 += mul(s1_0_2, M4(1.587e-01, -7.691e-02, 1.465e-01, -1.529e-02, -1.218e-01, 3.628e-02, 8.199e-03, 2.720e-02, 7.646e-02, -1.001e-01, -1.194e-03, -6.416e-02, 2.397e-01, -1.832e-01, 7.909e-02, -4.986e-02));
	r0 += mul(s1_1_0, M4(1.402e-01, 6.340e-01, 2.581e-02, -3.744e-02, -1.005e-01, 1.884e-01, 9.259e-02, -1.494e+01, 1.674e-01, 2.311e-01, 1.709e-01, 1.158e-02, -1.301e-01, 2.302e-01, -4.869e-01, 6.454e-02));
	r1 += mul(s1_1_0, M4(2.860e-01, -6.086e-02, -7.479e-02, -8.231e-02, 1.012e-01, 1.492e-01, -7.595e-01, 3.526e-01, -2.481e-02, 2.266e-02, -5.097e-02, -8.277e-02, 5.574e-02, 1.165e-01, -2.715e-02, 3.790e-02));
	r2 += mul(s1_1_0, M4(-3.733e-01, -3.550e-01, -1.834e-02, -3.093e-01, -3.643e+00, 7.318e-02, -1.008e+00, 2.157e-01, -7.780e-02, -4.068e-02, -2.815e-02, 8.880e-03, 8.267e-01, -1.130e-01, 2.093e-01, -3.826e-02));
	r0 += mul(s1_1_1, M4(-2.436e-02, -5.863e-01, -8.918e-02, 3.535e-01, 1.732e-01, -3.958e-01, 7.112e-01, -4.233e-02, -1.995e-01, -5.870e-01, 4.393e-01, -1.113e-01, 2.560e-01, 1.587e+00, -3.348e-01, 1.855e-01));
	r1 += mul(s1_1_1, M4(2.089e-01, -6.587e-02, 4.658e-02, -4.888e-02, -3.639e-01, -3.430e-02, -1.291e-01, 2.879e-01, 3.448e-01, -2.765e-02, 3.762e-01, 1.336e-01, -1.082e-02, -1.837e-02, 1.467e-01, 1.572e-02));
	r2 += mul(s1_1_1, M4(-2.728e+00, -2.466e-01, 5.410e-01, -2.877e-01, -4.517e-01, -1.818e-02, -3.556e-01, -1.317e-01, 7.715e-01, -5.219e-02, -1.664e-02, -1.397e-01, 2.744e-01, -1.482e-01, 4.851e-01, -6.623e-02));
	r0 += mul(s1_1_2, M4(-1.785e-02, 6.302e-01, -2.145e-01, -2.149e-02, 3.288e-03, -5.449e-01, -4.792e-02, -6.601e-03, 6.518e-02, 6.269e-01, 2.530e-01, 6.005e-02, 9.618e-02, 1.347e-01, -3.205e-04, 9.407e-02));
	r1 += mul(s1_1_2, M4(-3.169e-01, 4.659e-02, -4.809e-01, -7.056e-03, -1.538e-01, 1.629e-03, -1.692e-01, -2.964e-02, -1.670e-01, 3.749e-02, 6.695e-03, 1.159e-01, 1.806e-01, 2.640e-02, 2.221e-01, 8.831e-02));
	r2 += mul(s1_1_2, M4(1.548e-01, 1.019e-01, 5.618e-01, 5.417e-03, -2.353e-01, 1.174e-02, -1.063e-01, 3.048e-02, 1.586e-01, -7.760e-02, -3.141e-02, -3.810e-03, 3.849e-01, -5.774e-02, 1.664e-01, -7.793e-02));
	r0 += mul(s1_2_0, M4(7.247e-02, 3.773e-01, 1.115e-01, -6.537e-02, 7.162e-02, -7.198e-02, 3.423e-01, 1.597e-01, -5.705e-02, -3.912e-01, 1.184e-01, -8.232e-03, -3.096e-01, 5.380e-01, 1.606e-01, -3.723e-02));
	r1 += mul(s1_2_0, M4(6.742e-02, -5.019e-02, 1.070e+00, -8.286e-02, 1.052e-01, -2.723e-02, -5.296e-01, 1.428e-02, -3.556e-02, 7.797e-03, -1.258e-01, -4.435e-02, 1.215e-02, -5.910e-02, 1.034e-01, 3.035e-02));
	r2 += mul(s1_2_0, M4(-1.260e-01, 1.714e-01, 3.317e-01, 1.828e-02, 1.437e-01, -4.728e-02, 6.470e-02, -1.859e-01, 2.666e-01, -3.807e-02, 1.423e-02, -4.243e-02, 2.248e-01, 1.081e-01, 3.732e-01, 1.590e-02));
	r0 += mul(s1_2_1, M4(1.471e-02, 8.638e-01, 4.120e-02, -7.614e-02, 2.626e-02, -1.171e-01, 9.667e-02, 1.284e-02, -3.979e-02, 5.777e-01, 1.713e-01, 3.341e-02, -2.497e-03, 5.775e-01, 4.145e-02, -2.722e-02));
	r1 += mul(s1_2_1, M4(1.266e-01, -2.884e-02, 3.062e-01, 8.684e-02, 1.540e-01, 6.984e-03, -5.540e-02, 6.762e-02, 2.447e-01, 4.168e-02, -6.007e-02, 6.519e-02, -9.911e-03, 3.880e-02, -9.506e-02, -2.293e-02));
	r2 += mul(s1_2_1, M4(5.473e-02, 8.923e-02, -2.392e-01, -1.547e-01, -2.902e-02, -3.992e-03, -6.229e-01, -1.684e-01, 1.985e-01, -1.909e-01, 1.797e-01, -7.852e-02, 1.373e-01, 2.407e-01, 5.683e-01, 4.845e-02));
	r0 += mul(s1_2_2, M4(1.552e-02, 5.087e-02, 2.163e-01, -9.356e-02, -1.245e-03, -8.153e-02, 3.094e-02, 1.558e-02, -3.574e-02, 1.129e+00, 1.805e-01, -3.030e-02, -9.938e-03, 3.493e-01, -2.679e-02, -5.918e-02));
	r1 += mul(s1_2_2, M4(-1.063e-01, -8.631e-02, -1.155e-01, -1.869e-01, -6.664e-02, -2.643e-02, -1.559e-01, -1.541e-02, -4.720e-02, -1.412e-02, 1.272e-01, -2.226e-02, 2.861e-01, 2.008e-02, 2.446e-01, 8.506e-02));
	r2 += mul(s1_2_2, M4(-3.500e-01, -3.390e-02, 4.567e-01, -8.916e-02, 8.620e-02, -1.273e-02, 7.882e-02, -1.325e-02, 8.654e-02, -1.934e-01, 2.693e-01, -9.266e-02, -6.671e-02, 1.182e-01, 1.291e-01, -6.365e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-6.113e-01, -8.211e-01, 3.579e-01, -7.709e-02, -4.213e-02, -6.190e-01, -1.169e-01, -1.328e-03, -3.857e-01, -6.238e-01, 3.467e-01, -9.388e-02, -2.015e-01, -4.886e-01, 2.556e-02, -2.942e-02));
	r1 += mul(s0_0_0, M4(-2.928e-01, -1.505e-02, 3.623e-01, 2.715e-02, -8.692e-02, 5.147e-02, 1.924e-01, 4.619e-03, -4.109e-01, -8.201e-02, 1.860e-01, -1.208e-01, -4.299e-02, 2.331e-02, 2.458e-02, 2.621e-02));
	r2 += mul(s0_0_0, M4(-9.209e-01, 4.205e-01, -1.372e-01, 1.420e-01, 3.329e-01, 3.507e-02, -5.090e-03, 2.494e-02, 3.717e-01, 2.162e-01, -2.066e-01, 8.379e-02, 1.518e-01, 2.315e-02, -3.885e-02, 1.186e-04));
	r0 += mul(s0_0_1, M4(6.855e-01, 4.139e-02, -6.616e-02, -3.443e-01, 4.063e-02, 6.531e-02, 1.019e-02, 3.040e-02, 7.314e-02, -2.895e-01, 3.682e-01, 3.365e-02, 4.990e-01, -1.018e-01, -2.446e-01, 6.809e-02));
	r1 += mul(s0_0_1, M4(-1.676e-01, -7.942e-02, -1.340e-02, -1.807e-01, -2.354e-02, 4.805e-03, 4.594e-02, -1.016e-01, 1.810e-01, 1.709e-02, 2.203e-02, -1.919e-01, 2.156e-01, 1.531e-02, -1.694e-01, -5.194e-02));
	r2 += mul(s0_0_1, M4(-4.200e+00, -1.820e-01, -2.566e-01, -2.107e-02, 2.099e-01, -4.798e-02, -3.022e-02, -3.116e-03, -5.352e-01, -3.459e-01, -7.922e-02, -8.927e-02, -3.825e-01, -4.829e-01, 1.417e-01, -1.293e-01));
	r0 += mul(s0_0_2, M4(-1.763e-01, -1.305e+00, 1.387e-01, -2.744e-01, -5.329e-02, 2.324e-01, -8.729e-02, 4.940e-03, -7.004e-03, -1.068e-01, 8.601e-04, 1.157e-03, -1.426e-02, -1.206e-01, -4.287e-01, -8.676e-02));
	r1 += mul(s0_0_2, M4(-5.257e-01, -7.203e-02, -5.326e-02, 1.265e-01, 1.645e-01, 1.076e-03, 1.671e-01, 7.141e-04, 6.241e-02, -2.937e-03, -1.198e-02, 9.496e-03, 2.959e-01, 2.656e-02, 5.432e-02, 9.964e-02));
	r2 += mul(s0_0_2, M4(-3.180e-01, -1.977e-02, -9.640e-02, 7.991e-02, 1.109e-01, -1.275e-01, 4.634e-02, -3.603e-03, -7.011e-02, 8.106e-02, -1.007e-01, 4.962e-02, 1.015e-01, -1.468e-01, 4.227e-02, 5.699e-02));
	r0 += mul(s0_1_0, M4(-8.211e-02, -8.740e-02, 2.332e-01, 5.531e-02, 2.045e-02, 2.134e-01, -5.089e-02, 2.316e-02, -1.180e+00, 8.036e-01, -1.202e-01, 1.550e-01, -4.749e-01, 4.259e-03, -1.573e-02, 3.482e-02));
	r1 += mul(s0_1_0, M4(-1.486e-01, -7.016e-02, -2.822e-01, 2.108e-01, -7.946e-02, 1.180e-01, -3.630e-01, 4.418e-02, -6.249e-01, 1.968e-02, -3.383e-01, 1.180e-01, -3.903e-02, 3.024e-02, -2.645e-02, -2.417e-02));
	r2 += mul(s0_1_0, M4(-5.293e-01, -1.995e-01, -5.449e-01, 2.259e-01, 3.018e-01, 9.083e-02, 3.096e-01, 5.694e-02, -9.650e-01, 2.618e-01, -7.871e-01, 1.182e-01, -4.659e-02, 4.835e-02, -2.858e-02, 3.897e-02));
	r0 += mul(s0_1_1, M4(2.164e-01, -1.479e+00, 3.326e-01, 7.347e-01, -3.694e-03, 1.796e+00, -1.182e-01, -4.289e-02, 1.294e-01, -6.349e-01, -5.772e-01, -3.539e-01, 3.803e-01, -7.120e-01, 3.151e-02, -3.848e-01));
	r1 += mul(s0_1_1, M4(-5.645e-01, 1.165e-01, -1.846e+00, -1.704e-01, 2.212e-01, 8.349e-02, -3.716e-01, 1.205e-02, -1.348e-01, 4.111e-01, -1.334e+00, 1.958e-01, -2.100e-01, -6.307e-02, -2.445e+00, 1.453e-03));
	r2 += mul(s0_1_1, M4(2.164e-01, 3.213e-01, 6.055e-01, -3.213e-01, -3.859e-01, 4.363e-02, 9.231e-02, 9.867e-02, -3.825e+00, -6.059e-03, -1.335e-01, 1.112e-01, -2.577e+00, -6.381e-02, 8.692e-01, 4.364e-01));
	r0 += mul(s0_1_2, M4(-1.725e-01, 4.077e-02, -5.488e-01, 1.784e-01, 8.065e-02, 5.524e-01, -1.749e-01, 4.725e-02, 1.947e-02, -8.549e-01, -3.961e-03, 2.394e-02, -1.688e-02, -1.598e+00, 7.138e-01, -5.239e-02));
	r1 += mul(s0_1_2, M4(7.507e-01, 8.550e-03, 7.591e-01, 1.133e-01, 3.232e-01, -4.645e-03, 4.188e-01, 1.797e-01, -4.469e-03, -1.858e-02, 1.705e-01, -2.670e-02, -1.444e-01, -2.381e-01, 5.098e-01, -1.453e-02));
	r2 += mul(s0_1_2, M4(5.851e-01, -9.441e-02, -2.769e-01, 7.339e-02, 6.285e-03, -1.010e-02, 7.717e-03, 1.646e-02, 8.451e-02, -1.848e-02, -3.454e-01, -1.402e-02, 2.460e-01, -6.015e-02, -5.046e-01, 9.587e-02));
	r0 += mul(s0_2_0, M4(5.750e-02, -6.477e-02, 1.594e-01, 2.021e-02, -1.196e-02, 2.841e-01, -4.953e-02, 7.278e-03, 9.666e-02, -6.308e-01, 1.203e-01, -1.160e-01, -1.092e-01, -6.367e-02, 1.869e-02, -8.113e-03));
	r1 += mul(s0_2_0, M4(-4.446e-03, -3.043e-02, 3.936e-01, -3.069e-02, 6.359e-03, 5.921e-02, -3.375e-03, 8.074e-02, -8.608e-02, -5.747e-02, -2.496e-01, -2.978e-01, 3.034e-03, -2.058e-02, -1.262e-01, -2.049e-02));
	r2 += mul(s0_2_0, M4(7.798e-02, 3.790e-02, -1.081e-01, -1.343e-01, 1.122e-01, -1.172e-02, 1.329e-01, 8.912e-02, 8.965e-01, 5.772e-02, 2.569e-01, -1.986e-01, 1.395e-01, -7.977e-02, -2.697e-01, 2.855e-02));
	r0 += mul(s0_2_1, M4(-6.934e-02, -2.200e-01, -1.222e-01, -5.759e-02, 9.576e-03, -7.070e-02, -1.349e-01, 6.861e-02, -8.917e-02, -1.245e+00, -3.044e-01, 3.098e-02, -1.581e-01, -1.740e+00, 4.365e-01, 1.550e-01));
	r1 += mul(s0_2_1, M4(1.070e-01, -1.065e-02, -5.372e-01, 3.482e-03, 1.461e-01, 2.413e-02, 3.048e-01, 1.396e-01, 5.351e-01, -1.086e-01, -1.543e+00, -6.461e-02, -1.458e-01, 7.826e-02, 2.204e-02, -7.756e-02));
	r2 += mul(s0_2_1, M4(-2.355e-01, -3.481e-02, -2.595e-01, 4.735e-02, 1.909e-01, 1.732e-02, 3.147e-01, -1.548e-01, 7.169e-01, 1.114e-01, 1.687e-01, -4.853e-02, -2.589e-01, -1.127e-01, 2.575e-01, -2.581e-01));
	r0 += mul(s0_2_2, M4(2.470e-02, 2.081e-01, 5.743e-02, 3.027e-02, -2.913e-02, 2.379e-01, -2.841e-01, 4.059e-02, -1.429e-02, 1.505e-01, -6.120e-02, -1.334e-02, 5.249e-02, 4.532e-01, 1.454e-01, 1.353e-01));
	r1 += mul(s0_2_2, M4(-5.614e-02, 2.545e-02, 1.243e-01, 4.344e-02, 1.926e-01, 2.517e-02, 6.389e-01, 8.081e-02, 9.203e-02, 4.017e-02, 5.243e-02, 5.708e-02, -2.089e-01, -5.296e-03, -2.598e-01, 7.038e-02));
	r2 += mul(s0_2_2, M4(2.011e-01, 2.618e-02, 3.428e-01, 6.862e-02, 3.016e-01, 1.684e-01, -2.527e-01, 9.822e-02, 1.812e-02, 3.575e-02, -2.006e-02, 4.065e-02, -2.705e-01, 3.313e-02, -5.589e-01, 1.020e-01));
	r0 = max(r0, 0.0);
	T3[gxy] = r0;
	r1 = max(r1, 0.0);
	T4[gxy] = r1;
	r2 = max(r2, 0.0);
	T5[gxy] = r2;
}
//!PASS 3
//!DESC conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T3, T4, T5
//!OUT T0, T1
#define L0(x, y) V4(O(T3, x, y))
#define L1(x, y) V4(O(T4, x, y))
#define L2(x, y) V4(O(T5, x, y))
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(2.190e-02, -4.082e-03, -5.801e-03, 5.696e-03, 4.599e-02, -2.872e-02, 2.918e-02, -1.109e+00, -1.501e-01, -1.023e-01, -3.746e-02, 1.539e-01, 1.305e-01, 6.401e-02, 4.377e-02, 1.035e-01));
	r1 += mul(s0_0_0, M4(-9.701e-03, 2.769e-02, 7.009e-02, -1.162e-03, -5.699e-02, -7.370e-01, -3.400e-01, -3.011e-02, 1.880e-03, 7.341e-02, 1.923e-01, -7.688e-02, 6.366e-02, 1.782e-01, 2.049e-01, 5.812e-02));
	r0 += mul(s0_0_1, M4(-1.241e-02, -1.023e-02, 4.914e-02, 5.728e-02, -3.581e-02, -1.642e-02, 1.641e-02, -1.013e+00, 1.499e-02, 2.566e-01, -6.663e-03, 2.095e-02, 7.749e-01, 3.193e-01, 3.706e-01, -9.102e-02));
	r1 += mul(s0_0_1, M4(1.092e-01, 5.714e-02, 1.405e-01, 5.516e-02, 4.116e-02, 1.440e-01, 6.896e-02, -2.851e-02, 7.619e-02, -7.154e-02, -7.984e-02, 1.442e-02, 5.660e-03, -3.214e-02, -6.906e-02, 1.760e-01));
	r0 += mul(s0_0_2, M4(8.568e-02, 1.255e-01, 2.943e-02, 9.948e-02, 1.139e-02, -3.379e-02, 1.988e-02, -4.723e-01, 4.652e-02, 5.083e-02, -2.710e-05, 8.163e-02, 1.528e-01, 5.483e-01, 1.659e-02, -7.788e-02));
	r1 += mul(s0_0_2, M4(3.180e-02, -6.837e-02, -3.390e-03, 2.207e-02, -1.876e-01, 1.408e-02, -2.543e-02, -8.717e-03, -1.743e-01, 1.174e-02, 1.803e-02, 2.787e-02, 1.086e-01, -6.149e-03, -4.844e-02, 3.900e-02));
	r0 += mul(s0_1_0, M4(4.108e-03, 1.526e-02, -1.473e-02, 1.831e-01, 8.794e-02, 2.475e-02, 6.400e-03, -6.651e-01, 1.467e-02, 1.064e-02, 2.800e-02, -6.613e-02, 6.859e-02, 1.666e-02, 1.509e-01, 1.997e-01));
	r1 += mul(s0_1_0, M4(7.370e-02, 1.665e-01, 5.146e-01, 8.179e-03, -4.613e-02, -2.152e-01, 1.910e-01, -7.727e-03, -1.293e-01, 2.550e-01, -2.108e-01, 1.290e-01, -9.654e-02, 3.246e-01, 6.840e-02, 1.334e-01));
	r0 += mul(s0_1_1, M4(2.077e-02, 3.388e-02, 4.985e-01, 2.046e-01, -1.970e-02, 3.514e-01, 3.490e-02, -6.813e-01, -8.584e-03, -2.300e-01, -3.100e-02, -3.083e-01, -9.185e-02, -1.080e-01, -9.810e-02, -2.751e-01));
	r1 += mul(s0_1_1, M4(3.611e-01, 5.404e-01, -1.392e-01, 1.597e-01, 6.830e-02, 3.636e-01, -3.779e-01, 1.013e-01, -4.598e-01, -3.886e-01, 1.595e-02, 2.477e-01, 3.312e-01, -3.008e-01, -7.635e-02, -1.873e-01));
	r0 += mul(s0_1_2, M4(-4.378e-02, 3.183e-02, -1.421e-02, 2.644e-02, 8.543e-03, 3.665e-01, 1.181e-02, -9.009e-01, -9.608e-03, -1.909e-01, -1.236e-02, 1.256e-01, 3.196e-02, 1.407e-01, -3.915e-02, 6.999e-02));
	r1 += mul(s0_1_2, M4(-1.637e-01, 1.980e-01, 9.643e-02, -2.442e-02, 1.006e-01, -3.245e-01, -1.576e-01, 7.181e-02, -3.672e-01, 8.819e-02, -1.246e-02, -3.225e-02, -2.267e-01, -1.324e-02, 2.505e-02, 6.598e-03));
	r0 += mul(s0_2_0, M4(5.881e-03, 9.000e-03, -5.615e-02, 1.698e-01, 2.918e-02, -4.368e-03, -5.259e-02, -5.109e-01, -5.032e-02, 1.421e-02, 3.746e-02, -4.334e-02, -6.321e-03, -3.469e-03, -2.545e-02, -4.601e-02));
	r1 += mul(s0_2_0, M4(-1.800e-02, 1.577e-01, 6.289e-02, 4.017e-02, -2.770e-01, -1.505e-01, 4.105e-02, 3.735e-02, 2.258e-02, -1.849e-01, -1.980e-02, -3.940e-02, -4.461e-03, -1.315e-02, -2.084e-03, -7.738e-02));
	r0 += mul(s0_2_1, M4(6.704e-02, 1.690e-03, 2.896e-01, 2.334e-01, 7.973e-03, -5.097e-02, -7.946e-03, -9.943e-01, -1.911e-02, 8.130e-02, -5.099e-02, 2.241e-01, 2.450e-02, -7.027e-03, 3.257e-02, -3.697e-02));
	r1 += mul(s0_2_1, M4(-1.256e-01, 3.051e-01, 8.765e-02, 2.503e-01, -1.274e-01, -1.636e-01, -8.541e-02, -4.276e-02, 4.563e-02, -2.280e-02, 4.157e-02, -1.113e-01, -2.373e-02, -8.870e-04, -3.005e-02, 6.148e-02));
	r0 += mul(s0_2_2, M4(-2.488e-02, -1.658e-02, -3.010e-02, -8.345e-03, -7.991e-04, -2.677e-02, 4.419e-03, -9.466e-01, 1.658e-02, 7.203e-02, 8.963e-03, -1.057e-01, -2.179e-02, -1.377e-02, -3.187e-02, 2.494e-03));
	r1 += mul(s0_2_2, M4(2.056e-01, 9.219e-02, -1.806e-02, 1.108e-02, 3.413e-04, -1.965e-01, -1.006e-01, -1.020e-01, -3.656e-02, -1.946e-02, -2.374e-02, 2.590e-02, -1.022e-02, 1.733e-02, 2.004e-02, -2.626e-02));
	r0 += mul(s1_0_0, M4(-2.728e-02, -3.424e-02, 1.601e-03, -8.561e-02, -3.178e-02, -4.997e-02, -3.343e-02, -4.114e-02, 1.717e-02, -2.967e-03, -3.714e-02, -7.142e-01, 2.520e-02, 6.928e-02, 4.185e-02, 6.767e-02));
	r1 += mul(s1_0_0, M4(-6.221e-02, 5.158e-02, 4.575e-02, -1.918e-02, -1.766e-01, -1.503e-01, -8.473e-03, 1.575e-02, -1.288e-02, -7.891e-01, -1.460e+00, -3.828e-02, 1.220e-01, -3.729e-02, -9.106e-03, -3.706e-02));
	r0 += mul(s1_0_1, M4(-2.865e-02, -2.705e-01, -1.431e-02, -1.058e-01, -1.802e-01, 2.537e-02, -2.264e-02, -1.575e-03, -1.448e-01, -3.386e-01, -5.371e-02, -8.612e-01, -2.186e-01, 1.354e-01, 4.192e-02, 3.612e-01));
	r1 += mul(s1_0_1, M4(-2.133e-01, -3.361e-02, -1.236e-01, -2.573e-02, 2.444e-01, 9.292e-02, 8.678e-02, -1.581e-02, -5.982e-01, -2.237e-02, -1.599e-02, -8.357e-01, 4.130e-01, 3.400e-02, 7.105e-02, -3.986e-02));
	r0 += mul(s1_0_2, M4(4.085e-02, 1.894e-02, -4.706e-03, -1.037e-01, -4.308e-02, -4.787e-02, 6.196e-03, -6.074e-03, -4.345e-03, -2.576e-01, -1.324e-02, -9.792e-02, 1.782e-02, 1.802e-01, 2.352e-02, 7.417e-02));
	r1 += mul(s1_0_2, M4(4.391e-02, -2.691e-02, -1.055e-02, -1.297e-02, -9.055e-02, -5.883e-03, -5.883e-03, 3.191e-02, -1.387e-02, -7.038e-02, -1.229e-02, 1.586e-02, -5.253e-02, 3.404e-02, 6.320e-03, 7.926e-03));
	r0 += mul(s1_1_0, M4(8.023e-02, 6.715e-03, -1.588e-01, 3.289e-01, -2.404e-03, 3.394e-02, -7.505e-02, 2.156e-01, -6.463e-02, -7.108e-03, -5.855e-02, -2.427e-01, 2.933e-03, -2.659e-02, -4.994e-02, 2.696e-02));
	r1 += mul(s1_1_0, M4(-1.196e-01, 8.220e-01, 1.810e-01, -1.281e-01, -4.842e-02, -3.891e-02, 4.322e-01, -9.753e-03, 2.546e-02, -5.410e-01, -3.950e-01, -5.527e-02, 8.083e-02, -3.082e-01, -3.061e-01, 5.214e-02));
	r0 += mul(s1_1_1, M4(-9.226e-02, 2.530e-02, 8.987e-03, -4.189e-01, 1.660e-01, 2.607e-01, 1.027e-01, 6.136e-01, -1.508e-01, 1.364e-01, -5.717e-02, -5.514e-01, 3.796e-02, -1.170e-01, 8.137e-02, -4.808e-01));
	r1 += mul(s1_1_1, M4(2.826e-01, -2.822e-01, 2.782e-02, -6.836e-02, -1.397e-01, 2.319e-01, -1.210e-01, 7.652e-01, -2.679e-01, -1.590e-02, -7.974e-02, -4.232e-01, -3.209e-01, 5.368e-02, -3.251e-02, 1.851e-01));
	r0 += mul(s1_1_2, M4(1.602e-02, -3.536e-02, -1.296e-02, 1.295e-01, -2.462e-02, 8.075e-02, 3.684e-02, -1.197e-01, -8.436e-02, 1.214e-01, -2.568e-02, -2.888e-01, -3.336e-02, -2.429e-01, 1.327e-02, -2.278e-02));
	r1 += mul(s1_1_2, M4(-8.837e-02, 7.573e-02, 2.524e-03, -5.419e-02, 1.946e-01, -7.005e-02, 1.240e-03, 3.505e-02, -4.435e-01, -1.191e-01, -1.601e-02, -4.161e-02, 1.997e-01, -2.063e-02, 1.258e-03, 8.411e-02));
	r0 += mul(s1_2_0, M4(-2.156e-02, -1.039e-02, -1.170e-02, 4.768e-02, -5.077e-02, -4.087e-02, -1.987e-01, 1.170e-01, 4.649e-04, 2.859e-02, 3.644e-02, -1.991e-01, 3.431e-02, 1.025e-02, 1.928e-01, 2.010e-02));
	r1 += mul(s1_2_0, M4(2.983e-02, 1.822e-01, 8.647e-04, 5.408e-02, -1.069e-02, 6.163e-03, 4.136e-03, 1.553e-03, -2.858e-02, 4.137e-03, -5.765e-02, -2.476e-02, 2.927e-02, -8.713e-02, 1.912e-02, 5.382e-02));
	r0 += mul(s1_2_1, M4(7.048e-03, -7.792e-02, -1.230e-02, -2.388e-01, 2.370e-03, 3.396e-02, -1.294e-01, -1.763e-01, 2.353e-02, -3.098e-02, -1.955e-02, -1.549e-02, -5.674e-03, 5.888e-02, 7.104e-02, 2.220e-01));
	r1 += mul(s1_2_1, M4(-1.114e-01, -1.439e-01, 1.038e-02, 1.121e-02, -2.884e-01, 3.243e-02, -5.410e-02, -2.203e-01, 1.078e-01, -9.776e-02, -4.349e-02, 8.696e-03, 2.222e-01, 5.757e-02, 1.575e-02, 7.735e-02));
	r0 += mul(s1_2_2, M4(1.641e-02, -7.518e-03, -1.598e-03, 1.651e-02, -7.006e-03, -1.569e-02, -3.068e-02, -3.435e-01, 1.648e-02, -9.818e-02, 7.885e-03, -1.385e-01, -3.494e-04, 2.510e-02, 1.943e-02, 6.406e-02));
	r1 += mul(s1_2_2, M4(4.876e-03, 4.178e-02, -3.123e-03, -9.296e-03, -1.376e-01, -6.590e-02, -1.036e-02, -1.102e-01, -1.596e-01, -5.374e-02, -1.318e-02, 1.519e-03, 1.076e-01, -5.190e-02, -1.954e-02, 3.969e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(2.406e-02, 1.143e-02, 8.898e-03, -2.866e-01, -3.182e-03, 1.695e-02, 2.284e-03, -1.035e-02, -3.576e-02, -1.520e-02, -5.134e-03, -2.843e-01, -1.913e-02, -4.318e-02, 2.941e-02, -5.829e-02));
	r1 += mul(s0_0_0, M4(-1.032e-01, -1.763e-02, -7.930e-01, 9.484e-03, 3.912e-02, -3.575e-02, -8.910e-02, -3.486e-02, -7.398e-02, -2.383e-01, -3.857e-01, 4.700e-03, -2.673e-03, 5.058e-02, -1.099e-01, 1.871e-02));
	r0 += mul(s0_0_1, M4(-4.020e-02, -1.663e-02, -8.259e-02, -8.794e-01, 1.047e-01, 6.206e-04, 5.985e-02, 1.363e-01, 1.035e-02, 3.397e-02, -2.602e-02, -2.744e-01, -3.372e-02, -3.473e-02, -1.302e-01, -4.273e-01));
	r1 += mul(s0_0_1, M4(-6.867e-01, -9.493e-02, -5.830e-02, -4.032e-02, 3.305e-01, 4.318e-02, 1.052e-01, 1.212e-02, -3.486e-01, 6.676e-02, 3.266e-02, -1.943e-01, -4.541e-01, -3.576e-01, -2.803e-01, -2.632e-02));
	r0 += mul(s0_0_2, M4(-1.940e-02, -1.146e+00, -1.806e-02, 2.552e-03, 2.672e-02, 2.877e-01, 2.082e-02, 8.164e-02, 2.998e-02, -1.674e-01, -2.479e-03, -4.689e-01, -6.813e-03, -3.860e-01, -4.047e-02, -2.094e-01));
	r1 += mul(s0_0_2, M4(7.344e-03, 7.609e-02, 1.251e-02, -4.884e-02, -4.231e-03, 2.062e-02, 1.554e-02, -1.880e-02, 7.208e-02, -1.952e-01, -2.538e-02, -8.471e-02, -2.948e-01, 2.464e-02, 3.652e-03, -1.484e-01));
	r0 += mul(s0_1_0, M4(-2.285e-02, 8.191e-03, -3.440e-02, -9.316e-01, -8.094e-03, -6.432e-03, -7.829e-02, -2.397e-01, -1.021e-02, -1.708e-02, 3.109e-02, -1.330e-01, 2.562e-03, 2.023e-02, 4.192e-02, -7.893e-02));
	r1 += mul(s0_1_0, M4(2.592e-02, -8.568e-01, -1.105e+00, -9.192e-03, 5.637e-02, -1.885e-01, -4.633e-01, 2.014e-02, -8.524e-03, -1.244e-01, -2.231e-01, -6.599e-02, -2.862e-02, 1.611e-01, 3.453e-02, -9.916e-02));
	r0 += mul(s0_1_1, M4(-1.173e-01, -1.238e-01, -1.506e-01, -1.834e+01, 3.067e-02, -2.437e-01, -2.230e-01, -2.111e-01, -6.609e-03, -2.824e-02, 2.415e-02, -2.153e-01, -7.995e-02, -4.042e-02, 1.977e-01, 3.358e-02));
	r1 += mul(s0_1_1, M4(-9.918e-02, -3.886e-01, -8.014e-02, -3.496e-01, -1.314e-01, 2.017e-02, 1.213e-01, 1.678e-04, -5.088e-02, 1.096e-01, 6.315e-02, -2.683e-01, 2.409e-01, -1.965e-01, 9.984e-02, -2.420e-01));
	r0 += mul(s0_1_2, M4(-5.497e-03, -6.545e-01, -2.494e-02, 6.585e-02, 9.215e-02, -4.949e-01, 3.878e-02, -5.263e-02, -1.586e-02, -5.839e-04, 5.774e-03, -3.054e-01, 8.122e-03, 2.666e-01, 2.679e-02, 3.512e-01));
	r1 += mul(s0_1_2, M4(-7.744e-02, 1.686e-01, 6.062e-02, 2.360e-02, 1.105e-01, -5.238e-02, -5.885e-02, 5.973e-02, 8.621e-03, -1.237e-01, -4.394e-03, -8.233e-02, 1.919e-01, 1.045e-01, -1.050e-03, 7.785e-02));
	r0 += mul(s0_2_0, M4(-3.521e-03, -1.339e-03, 1.285e-02, -1.522e-03, 1.025e-03, -8.622e-03, -3.316e-02, 7.539e-02, 1.424e-02, -1.519e-02, 2.095e-02, -1.243e-01, 1.827e-03, -1.225e-02, -4.846e-02, -1.422e-01));
	r1 += mul(s0_2_0, M4(1.226e-02, -2.056e-01, -5.870e-02, 3.396e-03, 2.387e-02, -1.546e-02, -9.450e-03, -1.069e-02, -9.696e-03, -4.238e-02, -7.784e-02, -1.587e-02, 1.512e-02, 2.445e-02, -3.900e-02, -5.529e-02));
	r0 += mul(s0_2_1, M4(-5.643e-02, 3.946e-03, -3.483e-02, -3.094e-02, -2.872e-02, 3.763e-03, -7.012e-02, -3.005e-01, -1.437e-02, -1.178e-02, -4.963e-03, -1.831e-01, -1.438e-03, -6.615e-02, 2.959e-02, -2.228e-01));
	r1 += mul(s0_2_1, M4(1.809e-02, -3.760e-01, 2.324e-02, -2.929e-02, -2.503e-03, -3.489e-01, 1.219e-02, -1.440e-01, -2.322e-02, 6.411e-02, -4.877e-02, -3.676e-02, -7.033e-02, 4.855e-02, -5.507e-03, 2.895e-02));
	r0 += mul(s0_2_2, M4(-3.592e-03, 2.163e-02, -9.590e-03, 1.400e-01, 4.865e-02, 7.431e-02, 3.400e-03, 2.896e-01, 3.280e-03, -1.697e-02, 1.777e-02, -2.397e-01, -5.235e-03, -6.183e-02, 2.981e-02, -7.981e-02));
	r1 += mul(s0_2_2, M4(-1.017e-02, 6.893e-02, 9.136e-03, 1.889e-02, 4.019e-02, 8.426e-02, -3.536e-02, -3.825e-02, -2.175e-02, -3.157e-02, 4.349e-03, -1.419e-02, 3.551e-02, -1.425e-03, 1.887e-03, 5.415e-03));
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
}
//!PASS 4
//!DESC out-shuffle
//!BLOCK_SIZE 16
//!NUM_THREADS 64
//!IN INPUT, T0, T1
//!OUT OUTPUT
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = (Rmp8x8(tid.x) << 1) + blockStart;
	uint2 sz = GetOutputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = ((gxy >> 1) + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(1.457e-02, 4.591e-05, 2.442e-03, -1.574e-03, 1.024e-03, -7.680e-06, 1.988e-03, 2.325e-03, -2.586e-02, -1.211e-04, -5.426e-03, 1.052e-04, 5.372e-03, -1.033e-02, -3.319e-03, -3.211e-04));
	r0 += mul(s0_0_1, M4(-1.463e-01, -5.736e-02, 1.195e-02, -9.130e-03, 3.622e-03, 1.348e-02, -6.682e-04, -2.315e-03, 3.191e-01, 1.082e-01, -3.069e-02, 1.681e-02, 1.272e-01, 1.057e-01, 1.876e-03, -3.686e-03));
	r0 += mul(s0_0_2, M4(3.211e-03, -4.877e-02, 5.072e-04, 5.248e-03, -6.787e-08, 8.253e-04, 8.136e-07, 1.496e-07, -6.814e-03, 7.837e-02, -2.529e-03, -2.318e-03, 6.975e-03, 1.120e-03, -2.874e-03, -1.997e-03));
	r0 += mul(s0_1_0, M4(1.909e-01, -2.886e-03, 5.725e-02, 1.807e-04, -7.441e-01, -3.877e-01, -2.082e-02, -2.035e-02, -5.208e-03, -2.232e-03, -6.617e-02, -1.763e-03, 1.255e-01, 1.142e-02, 1.502e-01, -8.310e-03));
	r0 += mul(s0_1_1, M4(3.090e-01, 5.059e-01, -2.571e-01, 1.805e-02, 2.423e-02, -2.783e-01, -2.045e-02, -1.711e-02, 2.478e-01, -2.619e-02, 6.426e-01, 1.858e-02, -7.118e-02, 2.978e-01, 2.212e-01, 5.293e-01));
	r0 += mul(s0_1_2, M4(-1.465e-02, -4.173e-02, 1.135e-02, -1.028e-01, -4.133e-04, -1.230e-03, -4.545e-04, 5.781e-03, -7.714e-03, 2.166e-01, -5.649e-03, 2.686e-01, -2.121e-03, -5.456e-02, 4.902e-03, -1.882e-03));
	r0 += mul(s0_2_0, M4(-3.144e-03, 2.144e-03, 5.993e-02, -3.578e-03, 3.840e-02, 2.765e-02, 3.058e-03, 1.967e-02, -4.714e-03, 8.686e-04, 4.536e-03, 3.956e-03, 9.347e-03, -6.853e-03, 1.427e-02, 4.562e-03));
	r0 += mul(s0_2_1, M4(-4.895e-03, -2.314e-02, 1.798e-01, 2.095e-01, -2.332e-03, 3.723e-03, 1.261e-02, -1.088e-02, 3.395e-03, 1.920e-05, -2.570e-03, 2.751e-02, 1.484e-02, -2.261e-03, -4.503e-02, 2.126e-02));
	r0 += mul(s0_2_2, M4(-5.022e-03, 1.580e-02, -2.479e-03, 1.639e-02, -1.455e-04, 2.875e-03, -3.131e-03, -1.111e-03, 4.826e-03, -2.081e-02, -2.553e-03, 2.542e-02, -7.210e-04, -2.043e-03, -1.962e-03, -5.777e-03));
	r0 += mul(s1_0_0, M4(7.496e-02, 5.749e-02, 9.265e-03, 1.696e-03, 2.780e-02, 9.399e-04, 1.127e-02, 3.191e-04, 1.384e-03, 3.817e-07, 2.681e-03, -1.488e-07, 8.689e-02, 1.254e-02, 2.514e-03, 9.852e-04));
	r0 += mul(s1_0_1, M4(-4.038e-03, 7.440e-02, 1.652e-03, 4.163e-03, -3.838e-01, -1.514e-03, -2.288e-02, -1.179e-02, -2.283e-02, -2.661e-02, -5.631e-03, -2.428e-03, -2.210e-02, 1.264e-01, 2.991e-03, 7.102e-03));
	r0 += mul(s1_0_2, M4(-2.546e-06, -3.094e-03, 3.991e-04, -9.000e-06, 1.079e-02, -5.128e-02, -1.259e-03, -4.884e-03, -3.284e-02, -5.591e-03, 7.019e-03, -6.623e-03, 5.685e-03, -1.128e-02, 2.934e-03, -1.326e-02));
	r0 += mul(s1_1_0, M4(-3.172e-01, -1.245e-03, -1.577e-01, -1.873e-02, -4.188e-03, 1.606e-03, 3.388e-02, 6.769e-04, -1.639e-02, -5.405e-04, -1.285e-02, -1.365e-04, -5.064e-02, -4.267e-02, -2.166e-01, 2.471e-03));
	r0 += mul(s1_1_1, M4(-3.776e-02, -4.426e-01, 6.642e-02, 2.130e-02, -2.447e-01, -7.394e-02, -6.754e-01, -2.027e-02, 3.020e-01, 7.742e-02, 3.468e-01, 1.153e-02, -8.960e-02, -6.568e-02, -2.549e-01, -4.069e-01));
	r0 += mul(s1_1_2, M4(-5.180e-04, 1.893e-02, 3.203e-03, 1.257e-03, 1.102e-02, 5.662e-02, 2.626e-02, -2.091e-02, 8.440e-02, -5.271e-01, 1.417e-02, -1.072e-01, 1.907e-03, -1.253e-02, -7.169e-03, -2.276e-02));
	r0 += mul(s1_2_0, M4(-4.563e-03, 1.249e-02, 4.316e-02, -2.285e-02, 3.321e-04, -1.126e-03, -6.185e-04, -1.119e-03, 4.027e-03, 4.441e-04, -4.839e-03, 1.729e-04, -4.785e-04, 1.395e-04, -1.328e-02, -1.136e-02));
	r0 += mul(s1_2_1, M4(3.925e-03, 2.559e-03, -1.043e-01, -4.835e-02, 7.199e-03, 1.678e-02, 2.682e-02, -1.220e-02, 1.144e-02, -2.687e-02, 1.094e-01, 2.762e-03, 3.420e-03, 4.018e-03, -2.948e-02, -3.881e-02));
	r0 += mul(s1_2_2, M4(2.154e-03, 2.315e-02, 4.244e-03, -1.703e-02, 1.113e-03, -1.317e-02, -2.356e-03, 3.471e-03, -3.029e-02, 5.103e-02, 8.569e-02, -1.082e-01, -1.164e-03, 3.058e-04, 5.655e-03, 1.385e-03));
	r0 += V4(7.495e-09, 1.471e-08, 2.832e-08, 2.960e-08);
	static const float3x3 RY = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081}, YR = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float2 opt = float2(GetOutputPt());
	float2 fpos = (float2(gxy) + 0.5) * opt;
	float3 yuv;
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.x), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.y), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.z), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.w), yuv.yz)), 1.0);
}
