// CuNNy fast NVL - https://github.com/funnyplanter/CuNNy

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


//!MAGPIE EFFECT
//!VERSION 4
//!SORT_NAME CuNNy-0000284

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
Texture2D OUTPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!COMMON
#define O(t, x, y) t.SampleLevel(SP, pos + float2(x, y) * pt, 0)
#define V4 min16float4
#define M4 min16float4x4

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T4;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T5;

//!PASS 1
//!DESC in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT T0, T1, T2
#define L0(x, y) min16float(dot(float3(0.299, 0.587, 0.114), O(INPUT, x, y).rgb))
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	r0 += V4(3.036e-02, 7.895e-01, -3.691e-02, 2.085e-01) * s0_0_0;
	r1 += V4(1.629e-02, -4.119e-02, 2.147e-02, 6.549e-04) * s0_0_0;
	r2 += V4(-6.101e-03, 1.174e-03, 2.623e-02, -1.819e-01) * s0_0_0;
	r0 += V4(3.684e-02, -1.074e+00, 1.522e-02, -1.138e+00) * s0_0_1;
	r1 += V4(-6.962e-03, -5.176e-01, 2.653e-02, 7.642e-02) * s0_0_1;
	r2 += V4(9.541e-02, 1.004e+00, -3.430e-02, -1.165e-01) * s0_0_1;
	r0 += V4(1.267e-02, 3.345e-02, -2.797e-02, 3.271e-01) * s0_0_2;
	r1 += V4(-9.085e-03, 1.478e-02, -4.241e-02, 1.907e-02) * s0_0_2;
	r2 += V4(-8.736e-02, -1.310e-03, 4.097e-03, 7.014e-02) * s0_0_2;
	r0 += V4(1.896e-01, 2.948e-01, 8.262e-01, -8.008e-03) * s0_1_0;
	r1 += V4(-2.586e-02, -2.733e-02, -4.140e-01, 1.852e-02) * s0_1_0;
	r2 += V4(-1.588e-01, -7.417e-03, -9.400e-01, -3.759e-01) * s0_1_0;
	r0 += V4(1.890e-01, 1.482e-02, -2.843e-01, 1.685e-01) * s0_1_1;
	r1 += V4(-1.051e+00, 1.020e+00, 4.033e-01, -2.646e-01) * s0_1_1;
	r2 += V4(-1.706e-01, -9.980e-01, -4.676e-03, -3.552e-01) * s0_1_1;
	r0 += V4(2.574e-02, -4.729e-02, -6.562e-03, 4.198e-02) * s0_1_2;
	r1 += V4(1.079e+00, -4.361e-01, 1.823e-02, -5.875e-03) * s0_1_2;
	r2 += V4(7.491e-01, 3.664e-03, 1.155e-02, 5.530e-02) * s0_1_2;
	r0 += V4(-9.062e-01, -4.588e-02, -7.301e-02, 8.382e-02) * s0_2_0;
	r1 += V4(4.696e-03, 6.129e-02, -3.111e-01, 5.462e-02) * s0_2_0;
	r2 += V4(3.773e-01, 7.287e-03, 6.013e-02, 1.337e-01) * s0_2_0;
	r0 += V4(-1.524e-01, 2.676e-02, -4.454e-01, -1.375e-02) * s0_2_1;
	r1 += V4(2.191e-02, -1.685e-01, 2.520e-01, 3.064e-01) * s0_2_1;
	r2 += V4(-8.027e-01, -1.050e-02, 8.887e-01, 2.339e-01) * s0_2_1;
	r0 += V4(2.983e-02, 1.378e-02, 3.216e-02, 5.438e-02) * s0_2_2;
	r1 += V4(-2.752e-02, 9.439e-02, 4.122e-02, -4.895e-02) * s0_2_2;
	r2 += V4(5.988e-03, -1.896e-03, -1.267e-02, 5.332e-01) * s0_2_2;
	r0 += V4(1.105e-03, -2.426e-04, 4.274e-04, -1.770e-02);
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 += V4(3.199e-04, -4.764e-03, 6.488e-03, 7.370e-04);
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 += V4(-2.422e-03, 1.303e-04, 4.123e-04, 1.038e-02);
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 2
//!DESC conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T0, T1, T2
//!OUT T3, T4, T5
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(5.241e-02, -8.009e-02, -1.150e-01, -4.593e-02, 1.501e-02, 4.946e-02, -2.336e-02, 5.213e-02, -2.822e-01, 1.373e-01, -1.139e-02, -2.571e-02, -2.598e-03, -1.782e-01, 6.846e-02, -5.971e-02));
	r1 += mul(s0_0_0, M4(4.980e-02, 3.464e-01, -2.099e-01, 8.147e-01, -1.498e-02, 1.753e-02, 3.752e-03, -2.169e-01, 3.849e-01, 8.531e-02, 6.685e-02, -1.052e+00, 6.262e-02, 3.024e-02, -2.909e-02, 3.252e-01));
	r2 += mul(s0_0_0, M4(-4.552e-02, -4.067e-01, -4.093e-02, -4.319e-02, -5.843e-03, -1.410e-02, 7.606e-02, 9.472e-03, 4.556e-02, -6.670e-03, -6.164e-01, -6.171e-02, 1.147e-01, -1.136e-01, 4.616e-02, 3.376e-02));
	r0 += mul(s0_0_1, M4(2.230e-02, 2.137e-01, 3.253e-01, 1.773e-01, 5.240e-02, 1.743e-01, -7.177e-02, 6.575e-02, -2.044e-01, -6.824e-01, 6.908e-02, 4.664e-02, -6.224e-03, -1.432e-01, -2.874e-02, -6.231e-02));
	r1 += mul(s0_0_1, M4(2.231e-01, -9.135e-01, 1.095e-01, -1.628e+00, -4.894e-02, 5.101e-02, -9.008e-03, 8.833e-02, 4.961e-01, 1.607e-01, 1.394e-01, 5.144e-01, -1.366e-01, -1.388e-02, 2.546e-02, 2.378e-01));
	r2 += mul(s0_0_1, M4(-1.400e-01, 2.354e-01, 7.559e-01, -3.733e-01, -1.715e-02, 6.518e-02, 2.252e-01, -5.468e-03, 1.494e-01, -5.185e-01, -4.642e-01, 9.016e-02, 1.436e-01, -2.273e-02, 3.430e-01, -2.732e-02));
	r0 += mul(s0_0_2, M4(-4.418e-01, -6.159e-01, 3.289e-01, 2.705e-01, 2.485e-03, 7.847e-02, -2.959e-03, -1.106e-03, -1.685e-01, -2.581e-01, -3.324e-03, -6.569e-03, 2.517e-04, -6.505e-02, -3.559e-02, -3.708e-02));
	r1 += mul(s0_0_2, M4(-5.875e-01, -7.014e-01, 3.930e-04, -1.600e+00, -1.056e-01, 2.403e-02, -1.671e-02, 2.015e-01, -4.134e-01, -3.453e-01, 1.112e-01, -7.912e-02, 1.675e-01, 2.978e-02, 3.177e-02, 1.831e-01));
	r2 += mul(s0_0_2, M4(1.378e+00, -3.483e-01, -2.434e+00, -1.886e-01, -5.280e-03, -1.623e-02, 1.362e-01, 5.209e-03, 3.294e-01, 1.375e-01, -5.834e-01, 1.400e-02, 1.024e-01, 9.948e-02, -2.125e-02, 6.983e-04));
	r0 += mul(s0_1_0, M4(2.651e-01, -1.931e-01, 2.978e-02, 8.508e-03, 2.056e-01, -6.385e-03, 5.522e-02, 3.259e-02, -5.722e-01, -2.145e-02, -8.346e-02, 1.917e-02, 2.377e-02, 3.148e-01, -5.567e-02, -2.016e-03));
	r1 += mul(s0_1_0, M4(2.079e-01, -2.514e-02, -5.294e-02, 5.871e-01, -4.582e-01, -3.563e-01, -2.156e-02, -1.022e+00, 3.018e-01, -6.633e-02, 1.017e-01, -3.873e-01, 9.214e-01, -1.480e-01, 1.167e-01, 2.526e+00));
	r2 += mul(s0_1_0, M4(-2.836e-02, -5.098e-01, 1.380e-01, 1.766e-01, 7.475e-02, 1.547e-01, 4.132e-01, 1.371e-01, -6.512e-02, -1.085e-01, -5.205e-02, -6.446e-02, -9.193e-02, 2.305e-02, 7.681e-02, -7.541e-02));
	r0 += mul(s0_1_1, M4(-2.261e-02, -7.436e-01, -9.906e-01, 7.547e-02, 1.873e-01, -2.315e-01, 8.502e-02, -8.290e-02, -5.904e-01, 9.782e-02, -8.901e-02, 1.515e-01, 4.731e-02, 5.049e-01, 1.238e-01, -1.255e-01));
	r1 += mul(s0_1_1, M4(1.449e-01, -6.419e-02, -4.812e-02, -1.198e+00, -1.474e+00, 2.890e-01, -9.067e-03, -2.146e-01, -5.603e-01, 6.100e-01, 2.681e-01, 4.862e-01, -1.560e+00, -9.426e-02, -6.529e-04, -6.769e-01));
	r2 += mul(s0_1_1, M4(2.696e-01, -4.037e-01, 5.500e-01, 9.969e-02, -9.688e-02, 1.092e-01, 1.607e-01, 1.763e-01, -3.830e-01, 6.078e-02, -2.130e-01, -4.483e-01, -5.867e-02, -5.655e-02, -4.687e-01, 5.312e-02));
	r0 += mul(s0_1_2, M4(-2.619e-01, -9.975e-01, -7.095e-02, -8.000e-02, 3.242e-03, 3.838e-01, -2.480e-01, 2.390e-02, -4.666e-01, -1.077e+00, 2.631e-02, -4.496e-02, -4.968e-02, 7.982e-02, 1.614e-03, 1.623e-02));
	r1 += mul(s0_1_2, M4(8.323e-02, -2.927e-01, -1.061e-01, -3.413e-01, 2.706e-01, 1.899e-01, -1.462e-01, -7.913e-04, -1.069e-01, 7.981e-02, -7.655e-02, 1.047e-01, 4.126e-01, -1.101e-02, 5.220e-02, -6.185e-02));
	r2 += mul(s0_1_2, M4(-1.912e-02, -8.138e-01, -5.866e-01, 1.210e-01, -4.601e-01, -1.543e-01, -4.184e-01, -7.475e-02, -1.555e-02, 1.907e-01, -3.921e-01, -2.711e-01, 1.037e-01, 1.832e-01, 5.873e-01, 1.573e-02));
	r0 += mul(s0_2_0, M4(1.003e-01, -1.034e-01, -1.022e-01, -4.907e-02, 3.059e-01, -1.701e-01, -2.184e-02, 2.016e-02, -2.319e-01, 1.875e-01, 1.086e-01, 2.171e-02, 1.642e-01, -7.803e-01, -3.464e-02, -7.496e-02));
	r1 += mul(s0_2_0, M4(7.629e-02, -3.377e-02, 3.502e-02, 3.718e-01, -2.433e-01, -2.759e-01, -3.754e-02, -9.728e-01, 2.507e-01, 4.367e-02, 4.561e-02, -3.865e-01, -7.569e-01, -2.887e+00, -4.418e-01, 5.054e-01));
	r2 += mul(s0_2_0, M4(-8.512e-02, -1.149e-01, -6.850e-02, -1.077e-01, 5.347e-02, 2.447e-01, 4.006e-02, 9.074e-02, 3.408e-02, -7.588e-02, 1.937e-01, -3.294e-02, -1.704e-01, -4.008e-01, -1.858e-02, -8.677e-02));
	r0 += mul(s0_2_1, M4(2.398e-01, -2.111e-01, -7.762e-02, 9.502e-03, 4.107e-01, -5.411e-01, 3.462e-01, 8.374e-02, -6.992e-01, -6.647e-01, 4.609e-02, -7.605e-02, -1.729e-01, -3.842e-01, 1.574e-01, -2.585e-01));
	r1 += mul(s0_2_1, M4(-1.558e-01, 1.569e-01, 1.259e-01, 3.838e-01, -6.586e-01, 1.633e-01, 2.006e-01, 3.077e-01, 1.083e-02, -1.595e-01, -2.039e-01, -7.367e-01, -7.351e-01, -4.199e-01, -1.604e-01, -6.632e-01));
	r2 += mul(s0_2_1, M4(1.545e-01, -3.686e-02, -1.144e-01, 9.008e-02, 5.035e-01, -7.326e-01, -2.770e-02, -1.813e-01, 1.275e-01, -2.802e-01, 5.566e-02, 2.014e-01, 2.084e-01, 1.281e+00, -6.578e-01, -4.372e-01));
	r0 += mul(s0_2_2, M4(-1.802e-01, 7.012e-01, -2.038e-02, 8.857e-02, 3.194e-01, 2.499e-01, -6.639e-02, -9.952e-02, -8.233e-02, 2.565e-01, -1.238e-01, -1.935e-02, -1.090e-03, -1.525e-01, -1.114e-03, -4.065e-02));
	r1 += mul(s0_2_2, M4(-2.529e-01, 6.276e-02, 1.009e-01, -4.242e-01, 4.654e-01, 1.260e-01, 3.227e-02, 2.843e-02, 4.524e-03, -9.987e-02, -1.382e-01, -2.232e-03, -2.196e-01, 4.164e-02, 9.428e-02, -9.708e-02));
	r2 += mul(s0_2_2, M4(-1.354e-01, 6.542e-01, -4.784e-02, -8.249e-02, -1.699e-01, -1.568e-01, -6.316e+00, 6.245e-02, -1.140e-01, -3.700e-02, -4.354e-02, 3.584e-02, -6.709e-02, -7.320e-02, -4.486e-01, 3.366e-02));
	r0 += mul(s1_0_0, M4(-1.597e-01, 8.942e-01, -5.138e-02, 1.063e-01, 9.803e-02, 4.528e-01, -2.034e-01, 5.883e-02, 1.984e-02, 1.040e-02, 8.848e-02, 3.875e-02, 3.399e-01, -4.304e-01, 1.279e-01, -1.842e-01));
	r1 += mul(s1_0_0, M4(-9.177e-01, -1.021e-01, -2.404e-02, -6.754e-02, -2.216e-01, 3.740e-02, -3.125e-03, 4.697e-02, 3.858e-01, 4.913e-01, 1.833e-01, 1.409e-01, -6.253e-01, -3.594e-01, 6.067e-01, 2.130e-01));
	r2 += mul(s1_0_0, M4(1.127e-01, 3.466e-01, 4.188e-01, -1.147e-01, -7.296e-02, 2.803e-01, 3.199e-01, 5.627e-02, 3.581e-02, -2.770e-01, -1.928e-01, -2.613e-02, -1.209e-01, 3.291e-01, -2.152e-01, 5.950e-02));
	r0 += mul(s1_0_1, M4(-2.021e-01, 2.191e-01, -1.718e-02, 1.896e-03, 6.838e-02, -1.713e-01, 5.912e-02, -7.816e-02, -1.400e-01, -1.856e+00, 2.061e-01, 1.437e-01, 1.057e-01, 4.387e-01, -1.178e+00, -2.916e-01));
	r1 += mul(s1_0_1, M4(-7.188e-01, 2.573e-01, 6.726e-02, 5.611e-01, 1.031e-01, -5.548e-02, 9.638e-03, 6.198e-02, 7.858e-03, -1.832e-01, 2.936e-02, 4.249e-01, 2.892e-01, 4.439e-01, -2.512e-01, 5.306e-01));
	r2 += mul(s1_0_1, M4(-3.386e-02, 3.363e-01, 1.254e+00, -6.945e-02, 3.083e-02, 8.140e-02, -3.151e-01, -1.705e-02, 1.227e-01, -1.860e-01, -1.009e-01, -2.190e-01, 1.883e-01, -2.673e-02, 8.116e-01, -9.276e-02));
	r0 += mul(s1_0_2, M4(-1.248e-01, -4.713e-02, 5.768e-02, 2.685e-02, 5.458e-02, 2.002e-01, -1.876e-02, -8.929e-03, 9.693e-02, -1.183e+00, 3.946e-01, 8.907e-02, 3.421e-01, 1.780e-01, 1.436e-01, 1.171e-01));
	r1 += mul(s1_0_2, M4(-8.911e-02, 9.287e-03, -1.043e-02, 8.265e-02, 1.301e-01, 7.976e-02, -9.837e-03, 2.366e-02, 4.424e-01, -2.433e-01, -1.912e-01, 1.204e-01, 7.679e-02, 1.637e-01, 3.687e-02, 9.781e-01));
	r2 += mul(s1_0_2, M4(-6.555e-03, 4.997e-02, -9.367e-01, -4.251e-02, -1.709e-01, -6.607e-02, -9.051e-03, -1.036e-02, 2.217e-01, -7.339e-01, 1.301e-01, 4.316e-02, 4.856e-02, 2.416e-01, 8.304e-02, 8.176e-02));
	r0 += mul(s1_1_0, M4(-5.713e-01, 1.763e+00, -5.035e-01, -6.959e-02, 4.013e-01, 1.489e-02, -2.192e-01, 6.654e-02, 1.572e-02, 2.133e-01, -1.365e-02, -3.321e-02, 3.060e-01, -1.215e+00, -3.760e-01, -1.139e-01));
	r1 += mul(s1_1_0, M4(1.523e+00, -4.022e+00, 4.693e-02, -3.647e+00, 1.082e+00, 6.875e-01, 1.713e-01, -5.983e-01, -1.742e-01, -1.949e-01, 5.745e-02, -5.494e-01, -3.126e-01, -2.510e-01, -6.187e-02, -9.148e-02));
	r2 += mul(s1_1_0, M4(3.154e-01, -2.439e-01, 3.215e-01, 4.348e-01, -2.330e-02, -1.798e-01, -6.433e-02, 1.938e-01, -3.950e-02, 4.511e-02, -3.139e-01, -1.019e-01, -3.159e-01, -2.871e-01, -5.068e-01, -7.263e-01));
	r0 += mul(s1_1_1, M4(-1.724e-01, 6.511e-03, -2.419e-01, 2.046e-01, -4.524e-01, -1.439e-01, -1.597e-01, 3.589e-02, 2.801e-01, -1.625e+00, -5.331e-01, -8.490e-03, -6.500e-01, 5.957e-01, 1.543e+00, 7.271e-01));
	r1 += mul(s1_1_1, M4(9.814e-02, 2.999e-01, 4.872e-02, 3.921e-01, -3.965e-01, -3.276e-01, -7.716e-02, 6.068e-01, -1.316e+00, -3.546e-02, -4.922e-02, 1.889e-01, 4.769e-01, 6.226e-01, -3.534e-01, -7.161e-01));
	r2 += mul(s1_1_1, M4(-5.937e-01, -3.600e-01, -2.594e-01, 1.577e-01, 5.237e-02, 4.194e-01, -1.665e-01, -4.088e-01, -4.463e-01, 7.479e-01, -1.859e-02, 2.117e-01, -2.538e-01, -2.215e-01, -7.829e-01, -1.545e-01));
	r0 += mul(s1_1_2, M4(-1.516e-01, 1.166e-01, 3.712e-02, 7.259e-04, -1.439e-02, -2.070e-01, -6.121e-02, 1.053e-02, -2.389e-01, 1.136e+00, -2.120e-01, 3.050e-01, -3.710e-01, 7.210e-01, -1.774e-01, 6.953e-02));
	r1 += mul(s1_1_2, M4(2.858e-03, 2.692e-02, -6.032e-02, 1.013e-01, -2.045e-01, -1.440e-01, 5.353e-02, -9.630e-02, -1.322e+00, -3.114e-01, -1.334e-01, -5.653e-01, -6.022e-01, -3.143e-01, -1.353e-01, 6.543e-01));
	r2 += mul(s1_1_2, M4(-1.255e-01, 5.851e-02, -1.024e+00, -8.337e-02, 1.295e-01, -1.250e-02, 1.383e-01, 1.975e-02, 3.093e-01, 7.048e-01, 1.704e-01, 8.835e-02, 7.057e-02, 2.777e-01, 2.975e-01, 1.942e-01));
	r0 += mul(s1_2_0, M4(-1.644e-01, -3.069e+00, 2.646e-01, 1.920e-02, -1.829e-01, -6.209e-01, 9.407e-02, 9.510e-02, 1.798e-01, 3.154e-01, 3.200e-02, 3.929e-02, 2.493e-01, 5.362e-01, 2.095e-01, 1.041e-01));
	r1 += mul(s1_2_0, M4(3.198e-01, 8.971e-02, 5.067e-02, 1.948e-01, 4.815e-01, 1.443e-01, 5.698e-02, 3.873e-01, 1.184e-01, -5.631e-02, 1.757e-01, -1.652e-01, 2.705e-01, 1.006e-01, 3.753e-01, -4.101e-01));
	r2 += mul(s1_2_0, M4(2.822e-01, -7.873e-01, 4.015e-02, -5.568e-02, 2.427e-02, -3.548e-01, 3.565e-01, 2.245e-01, 1.385e-01, -2.546e-01, 2.716e-01, 4.203e-03, 4.121e-02, 1.409e-02, 5.683e-01, 2.056e-03));
	r0 += mul(s1_2_1, M4(-1.397e-01, -1.099e+00, 2.284e-01, -3.476e-02, 4.632e-01, 4.871e-01, -2.159e-02, 1.028e-01, 3.467e-01, 3.835e-01, -4.018e-03, 5.825e-02, -2.920e-01, -2.855e-01, -1.743e-01, -2.802e-01));
	r1 += mul(s1_2_1, M4(2.379e-01, 1.157e-01, -8.287e-02, 1.469e-01, -9.844e-02, 2.903e-02, -2.694e-02, 2.204e-01, -7.010e-02, 2.313e-01, 2.144e-01, -2.561e-01, 4.766e-01, -1.001e-01, -1.826e-02, -7.730e-01));
	r2 += mul(s1_2_1, M4(1.299e-01, -3.496e-01, -1.023e-03, -1.039e-01, -1.733e-01, -2.149e-01, -1.120e-01, 5.195e-01, -2.496e-01, 4.808e-01, -7.546e-02, 1.179e-01, 3.187e-01, -1.079e-01, -4.296e-01, 4.287e-01));
	r0 += mul(s1_2_2, M4(-8.381e-02, 1.889e-01, -2.611e-02, 1.296e-02, -3.081e-02, 1.336e-02, 9.351e-02, 8.215e-03, 4.655e-02, 8.785e-01, -1.580e-01, 7.574e-02, -5.888e-02, -5.119e-01, -1.154e-01, -9.509e-02));
	r1 += mul(s1_2_2, M4(-1.097e-01, -1.563e-02, -3.007e-02, 3.552e-02, 1.705e-01, 8.128e-02, -2.527e-02, 3.070e-03, 2.464e-02, 1.875e-01, 4.546e-02, 1.230e-01, 9.098e-04, -3.169e-01, -1.965e-01, -3.843e-01));
	r2 += mul(s1_2_2, M4(-3.845e-02, 8.804e-02, -1.019e+00, -4.687e-02, -4.638e-02, 6.043e-02, -2.714e-01, -5.069e-02, -2.694e-01, 2.376e-01, -2.591e-01, 5.229e-02, 1.270e-02, -2.334e-01, 2.021e-01, 2.084e-01));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(3.564e-01, 5.853e-02, 1.866e-02, -1.097e-02, -3.227e-02, -3.468e-03, 3.457e-02, -6.305e-03, -6.112e-02, 2.692e-01, 4.552e-03, 1.727e-02, 2.259e-02, -4.154e-01, -3.479e-02, -2.105e-02));
	r1 += mul(s0_0_0, M4(-4.895e-01, 1.880e-02, -3.779e-02, -2.223e+00, -1.380e+00, -5.517e-02, 1.407e-02, -8.650e-02, -3.122e-01, -5.559e-01, -1.654e-02, -1.303e-01, 6.081e-02, 2.058e-01, 2.280e-02, -4.777e-02));
	r2 += mul(s0_0_0, M4(2.265e-01, -9.760e-02, -3.804e-01, 2.171e-01, -5.383e-02, -5.137e-02, -1.660e-01, -2.803e-02, 1.665e-02, 2.697e-01, 2.862e-01, 3.924e-02, -3.645e-02, -2.413e-01, -2.965e-01, -7.881e-02));
	r0 += mul(s0_0_1, M4(4.928e-01, 1.744e-01, -2.690e-01, 1.048e-01, -7.850e-02, -3.365e-02, -5.587e-02, 9.913e-02, -6.749e-02, 2.778e-01, -3.472e-01, -4.129e-02, -3.110e-02, -1.667e-01, 2.173e-01, 6.096e-02));
	r1 += mul(s0_0_1, M4(2.477e-01, -5.857e-02, 1.737e-01, -6.510e-01, -1.156e+00, -2.391e-02, 3.167e-02, -2.170e-01, -6.714e+00, 3.310e-01, -3.573e-02, -1.248e+00, -4.156e-01, -2.705e-01, 4.184e-02, -4.051e-01));
	r2 += mul(s0_0_1, M4(1.289e-01, 2.472e-01, -1.834e-01, 1.363e-01, -4.923e-02, 6.747e-02, 1.264e-01, -1.714e-03, 7.041e-02, 4.422e-01, 2.848e-02, 2.102e-01, -1.313e-01, -1.227e-01, -3.354e-01, -9.090e-03));
	r0 += mul(s0_0_2, M4(2.880e-01, 5.191e-02, -7.667e-02, -8.386e-03, -3.818e-02, 1.665e-01, -1.316e-02, 2.606e-02, -6.311e-02, 5.054e-01, -2.665e-01, -1.332e-02, -1.171e-01, -7.283e-02, -8.272e-02, -8.129e-03));
	r1 += mul(s0_0_2, M4(1.180e-02, 4.993e-02, -1.238e-02, -6.131e-02, -1.657e-01, -3.496e-02, 6.933e-03, -1.796e-02, 2.480e-01, 2.307e-01, -4.844e-02, 2.419e-01, 4.047e-02, -4.774e-02, 5.088e-02, -1.073e-01));
	r2 += mul(s0_0_2, M4(-1.633e-01, -7.086e-02, -1.243e-01, 6.854e-02, -4.214e-02, -9.514e-03, -1.829e-01, 4.242e-02, -3.920e-01, 3.701e-02, -9.086e-01, 8.761e-03, 1.366e-01, -2.179e-03, 2.065e-01, 4.171e-04));
	r0 += mul(s0_1_0, M4(5.011e-01, 1.076e-02, -6.886e-02, -5.530e-02, -4.868e-02, 4.566e-01, -9.851e-03, 9.626e-02, -6.948e-03, -2.051e-01, 7.026e-03, 2.777e-02, 6.061e-02, 1.847e-01, -8.268e-03, 1.465e-03));
	r1 += mul(s0_1_0, M4(-1.009e-01, -2.311e-01, -2.098e-01, 1.276e-01, -9.473e-01, -6.396e-01, -6.431e-02, -3.348e+00, -9.456e-03, 1.109e-01, 2.262e-01, 1.645e-01, -2.427e-01, -1.794e-01, -3.311e-01, -1.951e-01));
	r2 += mul(s0_1_0, M4(1.796e-01, -1.315e-01, -1.982e-01, 3.900e-01, 8.136e-02, 7.979e-01, 2.586e-01, -4.348e-02, 5.525e-02, 5.764e-01, 3.552e-02, -5.967e-02, -1.318e-01, -2.604e-01, 2.621e-02, 1.370e-01));
	r0 += mul(s0_1_1, M4(4.911e-01, -2.005e-01, 9.531e-02, -5.879e-03, 2.081e-01, 1.476e-01, -2.309e-01, 3.474e-01, -2.627e-01, 3.133e-01, 5.261e-01, 1.646e-02, 1.097e-01, -3.681e-01, 9.189e-02, -3.242e-02));
	r1 += mul(s0_1_1, M4(3.189e-01, -1.180e-01, -2.281e-02, 8.206e-02, 6.437e-01, 4.592e-01, -2.431e-02, 2.671e-01, 3.306e-01, -1.033e-01, 9.806e-02, -7.722e-02, -3.834e-01, 9.214e-03, -7.310e-02, -4.384e-01));
	r2 += mul(s0_1_1, M4(8.402e-02, 9.418e-02, 4.561e-01, -6.941e-02, -4.846e-01, -1.202e-02, 3.339e-01, 3.897e-01, 4.786e-01, -4.329e-01, 1.646e-01, 2.802e-01, 3.324e-02, 3.795e-03, -2.146e-01, -4.568e-02));
	r0 += mul(s0_1_2, M4(2.593e-01, -2.451e-02, -6.820e-02, 4.319e-02, -9.490e-02, 1.019e-01, -7.839e-02, 5.975e-02, -2.862e-02, 4.514e-01, -1.426e-01, 6.881e-02, -6.373e-02, 1.133e-01, 6.239e-02, -2.744e-02));
	r1 += mul(s0_1_2, M4(8.746e-02, -1.546e-02, -1.172e-02, 1.974e-01, 1.890e-01, 4.593e-02, -3.947e-02, 3.815e-01, 4.564e-01, -9.164e-02, 1.386e-01, 2.939e-01, 7.129e-02, -6.251e-02, -5.370e-03, -1.893e-01));
	r2 += mul(s0_1_2, M4(5.891e-02, -8.007e-02, 1.343e-01, 6.885e-02, -3.465e-01, 1.567e-02, -2.396e+00, -1.217e-01, -2.517e-01, -1.616e-02, 3.298e-01, 1.138e-01, 1.207e-01, 1.614e-02, -4.914e-02, 5.309e-02));
	r0 += mul(s0_2_0, M4(3.386e-01, 1.180e-01, 4.139e-02, -1.121e-02, 1.404e-01, -8.995e-01, 6.848e-02, 2.925e-02, -1.831e-01, -5.613e-01, 2.886e-02, 1.083e-02, 1.949e-01, 3.748e-01, -9.821e-02, 1.410e-02));
	r1 += mul(s0_2_0, M4(1.695e-01, -7.984e-02, 6.405e-02, 1.039e-01, 1.956e-01, -2.842e-01, 6.208e-01, -5.114e-01, 4.003e-02, 8.604e-02, -7.148e-02, 1.879e-01, -7.648e-02, -5.356e-02, 5.488e-02, 7.047e-02));
	r2 += mul(s0_2_0, M4(8.617e-02, -7.168e-02, 3.107e-01, -1.172e-02, 2.248e-01, -3.967e-01, 4.510e-02, -3.047e-01, -2.578e-02, 4.822e-02, 6.616e-02, 6.447e-02, -6.234e-02, -2.775e-02, -1.542e-01, -8.742e-02));
	r0 += mul(s0_2_1, M4(3.377e-01, -3.345e-01, 1.281e-01, -6.450e-02, -2.711e-01, -5.540e+00, -2.763e-01, 3.262e-02, -1.461e-01, -2.352e+00, 2.513e-02, 4.468e-02, 3.320e-01, 4.069e-01, 4.774e-02, 3.382e-02));
	r1 += mul(s0_2_1, M4(1.469e-01, -7.875e-02, -1.997e-03, 5.591e-02, 3.391e-01, 1.931e-01, 1.211e-01, 5.819e-01, -1.418e-02, 1.008e-01, -4.420e-02, 5.686e-01, -1.243e-01, -9.073e-02, 2.414e-03, -1.842e-01));
	r2 += mul(s0_2_1, M4(1.248e-01, -1.460e-01, -8.007e-02, 5.898e-02, 7.474e-03, -8.360e-01, 2.384e-01, 5.008e-01, -6.278e-02, 2.377e-02, 2.339e-01, -4.792e-02, 5.186e-02, -9.187e-02, -3.237e-01, 8.309e-04));
	r0 += mul(s0_2_2, M4(2.109e-01, -1.477e-01, 6.845e-03, -3.798e-03, -2.479e-02, 8.608e-03, 1.035e-01, -2.705e-03, -3.199e-01, -1.782e+00, 5.200e-02, -4.017e-02, 5.904e-03, -2.743e-01, 9.139e-03, 1.503e-02));
	r1 += mul(s0_2_2, M4(8.315e-02, 5.932e-02, 9.852e-03, 2.000e-01, -1.639e-01, -1.337e-01, 3.609e-02, 2.319e-01, 1.068e-01, 1.184e-01, 2.676e-02, 1.510e-01, 9.253e-02, -1.079e-02, -6.390e-03, 4.838e-03));
	r2 += mul(s0_2_2, M4(-3.867e-02, -6.404e-02, -3.244e-02, 5.061e-02, 4.851e-02, 8.643e-02, -2.397e-01, -8.740e-02, 9.413e-03, -9.755e-02, 8.958e-02, -1.091e-01, -5.132e-02, -2.788e-02, 1.247e-01, 1.194e-02));
	r0 = max(r0, 0.0);
	T3[gxy] = r0;
	r1 = max(r1, 0.0);
	T4[gxy] = r1;
	r2 = max(r2, 0.0);
	T5[gxy] = r2;
}
//!PASS 3
//!DESC conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T3, T4, T5
//!OUT T0, T1
#define L0(x, y) V4(O(T3, x, y))
#define L1(x, y) V4(O(T4, x, y))
#define L2(x, y) V4(O(T5, x, y))
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-9.052e-02, 1.414e-02, -4.312e-02, 2.780e-02, -6.329e-02, 1.606e-02, 1.087e-02, 3.216e-02, -1.820e-01, 7.298e-02, -6.011e-02, 2.392e-01, -3.722e-02, -2.889e-03, -1.783e-02, -2.006e-01));
	r1 += mul(s0_0_0, M4(-1.376e-01, -1.440e-01, -8.099e-02, -3.330e-01, 5.873e-02, 7.148e-02, -3.453e-03, -1.419e-01, 1.294e-01, 1.018e-01, -2.474e-02, 1.198e-01, -3.549e-03, -1.456e-02, -8.932e-03, 5.359e-02));
	r0 += mul(s0_0_1, M4(9.288e-02, -6.506e-02, 5.429e-02, -1.248e-01, -2.379e-01, -6.997e-02, 9.879e-03, 3.167e-02, 1.747e-02, 5.986e-01, -9.448e-02, 2.035e-02, -8.852e-02, 3.941e-02, -1.885e-02, -7.749e-02));
	r1 += mul(s0_0_1, M4(-6.466e-02, 1.202e-01, 6.631e-02, 1.258e-01, -1.633e-01, -2.924e-01, -1.921e-02, -2.653e-01, -2.842e-01, 1.062e-01, -1.125e-01, -4.155e-02, -5.729e-02, 1.205e-02, -4.505e-02, -5.718e-02));
	r0 += mul(s0_0_2, M4(-6.092e-02, -3.324e-02, -5.114e-03, 5.768e-02, 3.033e-02, -1.112e-02, 2.001e-03, -5.015e-02, -9.936e-03, 4.988e-02, 1.290e-02, -3.746e-02, 1.304e-02, 2.017e-02, -1.534e-02, -4.527e-02));
	r1 += mul(s0_0_2, M4(5.420e-02, -3.330e-01, 1.788e-02, -5.896e-02, -3.413e-01, -3.186e-01, 4.115e-03, 5.937e-02, -1.130e-01, 1.216e-01, -2.064e-02, 2.103e-02, -1.254e-01, 6.317e-02, -2.686e-03, 1.576e-02));
	r0 += mul(s0_1_0, M4(-2.232e-01, -2.108e-02, 1.925e-01, 2.457e-03, -2.272e-01, -1.555e-03, -5.603e-02, 4.147e-02, -3.077e-01, -4.050e-02, 1.222e-01, -1.386e-01, -1.989e-01, 2.795e-02, 2.822e-01, 5.332e-01));
	r1 += mul(s0_1_0, M4(-9.353e-02, -9.879e-02, 2.607e-01, 5.586e-02, 1.004e-01, 7.195e-02, 9.298e-03, 1.169e-01, -3.653e-02, 8.816e-02, 3.502e-02, -4.385e-01, -2.088e-01, -3.349e-01, 6.483e-03, -1.509e-01));
	r0 += mul(s0_1_1, M4(2.731e-02, 2.404e-02, -3.817e-01, 3.759e-02, -6.942e-02, 1.249e-01, -2.388e-01, 5.460e-02, -1.402e-01, -1.943e-03, 4.128e-01, -2.410e-02, 1.320e-02, -4.567e-01, -2.125e-01, -6.796e-02));
	r1 += mul(s0_1_1, M4(2.658e-01, 6.848e-02, -3.861e-01, 1.997e-02, -2.095e-01, 1.899e-01, -2.655e-01, 7.291e-02, -5.546e-01, -6.826e-01, 8.129e-01, 1.162e-02, -3.896e-01, -3.027e-02, -1.888e-02, -2.128e-02));
	r0 += mul(s0_1_2, M4(-4.855e-02, 1.360e-02, 6.126e-02, -2.860e-02, 3.269e-03, 1.817e-02, -2.693e-02, 3.565e-03, 3.042e-02, -1.905e-02, 8.090e-03, -3.600e-02, -8.282e-03, -4.120e-02, -2.684e-02, 3.137e-02));
	r1 += mul(s0_1_2, M4(-4.301e-01, 1.155e-01, 4.046e-02, -4.751e-02, -3.657e-01, 1.682e-01, -6.468e-02, 1.017e-02, -5.017e-02, 6.420e-02, 3.739e-03, 2.997e-02, 2.123e-01, 2.014e-02, -3.799e-02, -1.618e-02));
	r0 += mul(s0_2_0, M4(7.964e-02, -1.642e-02, -6.839e-02, -1.132e-02, 1.163e-01, -1.149e-02, 7.643e-02, -5.206e-02, -7.826e-02, -4.676e-02, -1.105e-02, 7.787e-02, -9.608e-02, 1.693e-01, 6.670e-02, -1.841e-01));
	r1 += mul(s0_2_0, M4(5.050e-03, 3.099e-02, -1.076e-01, -2.876e-02, 1.065e-02, -8.580e-03, 9.741e-02, -2.440e-02, 3.746e-02, -5.166e-02, 4.323e-02, -1.768e-02, -1.051e-01, 9.207e-02, -7.347e-02, -2.607e-01));
	r0 += mul(s0_2_1, M4(-3.189e-03, 5.451e-03, 9.352e-02, 1.752e-02, -2.347e-02, -6.953e-02, 1.372e-01, -4.700e-02, -1.959e-02, -2.544e-02, 2.568e-03, -5.525e-03, -8.177e-03, 1.170e-01, -1.733e-01, -3.233e-02));
	r1 += mul(s0_2_1, M4(-8.999e-02, -7.414e-02, 1.259e-01, -4.061e-02, 1.042e-01, -1.183e-02, 1.559e-01, -1.780e-02, -1.382e-01, -3.639e-02, 2.866e-03, -1.266e-02, -2.429e-04, -5.293e-01, 1.979e-02, 1.091e-02));
	r0 += mul(s0_2_2, M4(-2.684e-03, 2.055e-02, -1.506e-02, 1.209e-02, 1.826e-02, -2.496e-02, 3.013e-02, 9.093e-03, 8.768e-03, -4.096e-03, -4.383e-02, -1.373e-02, -7.915e-03, 3.125e-02, 2.348e-02, 2.791e-03));
	r1 += mul(s0_2_2, M4(1.422e-01, -3.898e-02, 5.205e-03, 2.398e-02, 9.789e-02, -7.114e-02, 3.011e-02, -2.219e-03, 8.513e-02, 3.334e-02, -2.896e-02, -2.184e-03, -7.366e-02, -5.482e-02, 2.530e-02, -2.452e-02));
	r0 += mul(s1_0_0, M4(-7.337e-02, 5.021e-02, -3.317e-02, 4.815e-02, 1.679e-02, 1.668e-02, -1.330e-02, 2.762e-02, 2.588e-02, -3.710e-03, -3.025e-02, -4.848e-02, 1.201e-01, 3.033e-02, 3.570e-02, 2.176e-02));
	r1 += mul(s1_0_0, M4(3.058e-02, 4.074e-02, -3.327e-03, 1.141e-01, 4.773e-02, 6.534e-02, -3.259e-02, 5.853e-02, 4.469e-02, 1.008e-01, 2.574e-02, 4.563e-02, -1.281e-02, -3.527e-02, 2.035e-02, 6.993e-02));
	r0 += mul(s1_0_1, M4(-1.362e-03, -3.966e-02, -3.130e-02, 8.749e-02, -1.358e-02, 1.704e-02, -2.487e-03, -7.088e-02, 2.317e-01, 9.866e-02, -4.509e-02, 3.897e-01, 5.178e-02, -4.924e-02, 2.389e-02, -8.184e-02));
	r1 += mul(s1_0_1, M4(-5.700e-02, 1.409e-02, -4.320e-02, 2.570e-02, 1.510e-02, 9.417e-02, -7.839e-03, -3.294e-02, 7.521e-02, -1.954e-02, 2.008e-02, -2.766e-02, 1.314e-01, 1.626e-01, 4.084e-02, -1.957e-02));
	r0 += mul(s1_0_2, M4(-2.068e-03, -1.667e-02, -1.581e-02, -9.999e-04, 1.231e-05, -2.057e-03, 1.848e-03, -3.095e-02, 3.576e-02, -8.471e-02, 3.962e-02, 7.881e-02, -1.031e-02, -8.863e-02, 4.667e-03, -3.628e-03));
	r1 += mul(s1_0_2, M4(-4.282e-02, 1.905e-01, -2.412e-02, -8.850e-03, -1.439e-02, 4.506e-02, 5.009e-03, -9.306e-03, 4.366e-01, 1.549e-01, 2.406e-02, 6.117e-02, 1.367e-01, -6.397e-02, 4.926e-03, -1.225e-02));
	r0 += mul(s1_1_0, M4(4.171e-02, -3.009e-02, 4.115e-02, -2.016e-01, 2.800e-01, 1.314e-02, 1.339e-02, -1.066e-01, 3.494e-01, -5.901e-03, -1.123e-01, -2.787e-02, -3.809e-01, -3.324e-02, 5.661e-02, -4.259e-02));
	r1 += mul(s1_1_0, M4(5.191e-02, 5.188e-02, 9.253e-02, -3.578e-01, -3.793e-02, -8.643e-03, -8.211e-03, 3.523e-01, 1.124e-01, 8.958e-02, -4.207e-02, 2.529e-01, -1.030e-01, -9.836e-02, 6.408e-02, -5.918e-01));
	r0 += mul(s1_1_1, M4(1.079e-01, -1.431e-01, 7.835e-02, -2.779e-01, -1.219e-01, 2.601e-01, -1.334e-01, -2.099e-01, -2.999e-01, -1.529e-01, 3.463e-01, 1.195e-02, -1.773e-01, -1.506e-02, -1.255e-01, -4.245e-02));
	r1 += mul(s1_1_1, M4(1.782e-01, -2.407e-01, 1.005e-01, -2.155e-01, 6.817e-01, 7.949e-01, 6.405e-02, 7.868e-03, 3.133e-01, 1.391e-01, 4.903e-01, -3.623e-01, -1.464e-01, -1.420e-01, -1.993e-01, -1.236e-01));
	r0 += mul(s1_1_2, M4(-3.528e-02, -2.100e-01, -3.612e-04, 3.381e-02, -4.476e-02, 7.679e-02, 6.275e-03, 1.702e-02, 1.614e-01, -1.879e-02, -5.137e-02, -1.610e-02, 2.737e-02, -2.044e-01, -1.903e-02, -1.769e-02));
	r1 += mul(s1_1_2, M4(4.641e-02, -6.124e-01, 9.811e-03, 1.821e-02, -2.173e-01, -2.261e-01, 5.797e-02, -8.423e-02, 5.778e-02, -7.077e-02, -1.457e-01, 1.574e-01, -3.705e-01, -2.831e-01, -1.986e-02, 1.911e-02));
	r0 += mul(s1_2_0, M4(-1.831e-01, 1.978e-02, 1.141e-02, -2.704e-02, 1.751e-01, 1.209e-02, -1.677e-02, -2.252e-02, -2.666e-02, -3.770e-02, -1.557e-03, 2.005e-02, -3.190e-01, 7.956e-03, 5.627e-02, 5.451e-03));
	r1 += mul(s1_2_0, M4(1.086e-01, 7.701e-02, 2.203e-02, -1.042e-01, 3.395e-02, 3.380e-02, -4.182e-02, 1.402e-01, 2.634e-02, -2.275e-02, 3.381e-02, 5.674e-02, -4.814e-02, -4.014e-02, 9.333e-02, -6.656e-02));
	r0 += mul(s1_2_1, M4(-2.452e-01, -2.277e-02, -2.980e-01, 2.772e-02, -6.014e-02, -5.993e-02, -2.774e-02, 2.436e-02, -8.468e-02, -2.143e-02, -1.026e-02, -1.939e-02, -8.762e-02, 2.168e-02, -1.487e-02, -2.779e-02));
	r1 += mul(s1_2_1, M4(-4.073e-01, -2.395e-01, -4.021e-01, -1.460e-01, 2.979e-01, 1.783e-01, 1.274e-01, -1.358e-02, 1.866e-02, 1.170e-01, -1.600e-02, -2.306e-02, 5.254e-02, 5.421e-02, -6.007e-02, -9.187e-02));
	r0 += mul(s1_2_2, M4(6.923e-02, -1.661e-02, -5.668e-02, -1.187e-03, -7.894e-02, 7.567e-05, 2.969e-02, -1.211e-02, 4.821e-02, 6.656e-03, 2.201e-02, 1.179e-02, -6.342e-03, -1.330e-03, -4.271e-03, -5.261e-03));
	r1 += mul(s1_2_2, M4(-2.135e-01, -2.836e-01, -5.244e-02, 3.115e-02, 3.598e-03, 1.036e-01, 5.423e-02, -2.349e-02, -1.089e-01, -1.718e-02, -6.328e-05, 7.209e-03, -7.696e-02, -1.835e-01, 6.945e-04, -2.705e-03));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(4.521e-02, -8.957e-02, -2.692e-02, -1.478e-01, -5.603e-02, -3.449e-02, -1.479e-02, -1.189e-01, 1.043e-01, -1.522e-01, 1.513e-02, -4.494e-02, -6.526e-03, 3.032e-02, -2.754e-02, -1.461e-02));
	r1 += mul(s0_0_0, M4(-4.698e-03, -7.125e-02, -6.723e-03, -6.587e-03, -4.353e-02, -3.088e-02, -1.471e-02, -1.037e-01, 2.466e-02, -3.251e-02, 2.087e-03, 1.514e-01, 7.766e-02, 1.479e-01, 3.198e-02, 1.032e-01));
	r0 += mul(s0_0_1, M4(-6.254e-02, -6.461e-02, 3.477e-02, 5.354e-02, -2.560e-02, -2.456e-02, 4.910e-04, -3.064e-01, -3.005e-02, 3.442e-02, 2.741e-02, 4.742e-02, 1.901e-02, 2.000e-01, 2.946e-02, -2.866e-02));
	r1 += mul(s0_0_1, M4(4.271e-02, -8.141e-02, 7.039e-02, 1.363e-02, -1.421e-01, -1.003e-01, -2.777e-02, -1.081e-01, 1.538e-01, -6.094e-02, 7.460e-02, -4.162e-02, 4.228e-02, -1.942e-02, 2.689e-02, -6.268e-02));
	r0 += mul(s0_0_2, M4(1.480e-02, -3.415e-02, -9.740e-03, 1.444e-02, -9.086e-03, -1.208e-02, -1.095e-02, -3.627e-02, 1.851e-02, -1.179e-02, 9.014e-03, -5.044e-02, 5.068e-03, 8.298e-02, 2.421e-02, -1.976e-02));
	r1 += mul(s0_0_2, M4(3.395e-03, 3.181e-02, -1.270e-02, 2.745e-04, -5.238e-02, -1.253e-01, -6.536e-03, 1.917e-02, 1.217e-02, 3.453e-02, 1.922e-03, 3.842e-02, -7.925e-02, -1.469e-01, 3.106e-02, 3.937e-02));
	r0 += mul(s0_1_0, M4(-7.438e-01, -5.652e-02, -8.177e-02, 6.633e-02, -3.369e-01, -9.242e-04, 7.967e-03, -9.211e-03, 1.009e-01, -7.058e-02, -1.842e-01, -5.235e-02, 7.363e-01, -6.151e-04, -7.329e-02, -7.985e-02));
	r1 += mul(s0_1_0, M4(-1.616e-01, -1.468e-01, -1.324e-01, -8.631e-01, -3.595e-02, -3.068e-02, -8.853e-02, -3.780e-01, -1.256e-01, -5.079e-02, -2.349e-01, 1.637e-01, 1.930e-01, 1.714e-01, 3.237e-02, 7.461e-01));
	r0 += mul(s0_1_1, M4(1.020e-01, -2.549e-01, -9.789e-02, -1.020e-01, -5.058e-01, -6.667e-02, -1.628e-01, -8.383e-02, 1.115e-04, 7.289e-02, 8.884e-02, 5.718e-02, -5.051e-03, 1.335e-02, 4.841e-01, 6.250e-02));
	r1 += mul(s0_1_1, M4(-1.392e+00, -1.225e+00, -2.666e-01, 5.134e-02, -5.374e-01, -4.693e-01, -4.886e-02, -2.153e-01, -4.728e-01, -4.801e-01, 4.369e-02, 3.411e-03, 7.639e-01, 7.754e-01, 2.770e-01, 2.221e-02));
	r0 += mul(s0_1_2, M4(-3.330e-02, 1.858e-02, -4.957e-02, -5.641e-02, 5.461e-03, -3.448e-03, 1.043e-02, 1.653e-02, 2.604e-02, -2.616e-02, -3.187e-02, 4.677e-02, 1.630e-02, 1.193e-02, 7.105e-02, 2.635e-02));
	r1 += mul(s0_1_2, M4(3.184e-03, -1.868e-02, -5.636e-02, -4.604e-04, -8.115e-01, -6.348e-01, 1.553e-02, -4.170e-02, 1.549e-01, 2.057e-01, -4.355e-02, 4.265e-02, 1.971e-01, 1.193e-01, 2.686e-02, -1.647e-02));
	r0 += mul(s0_2_0, M4(-1.414e-01, 1.096e-02, -3.221e-02, -4.087e-02, -3.868e-02, 8.087e-03, -3.301e-02, 5.453e-02, 1.578e-01, 2.825e-02, -1.221e-01, 1.569e-02, 2.316e-02, 3.344e-03, -5.769e-03, -1.648e-03));
	r1 += mul(s0_2_0, M4(-3.229e-02, -1.042e-02, -8.282e-02, -9.241e-02, -3.924e-02, -3.157e-02, -1.344e-02, 4.384e-02, -3.626e-02, -8.544e-04, -1.635e-01, 7.564e-02, 6.191e-02, 3.674e-02, -3.808e-02, 2.889e-02));
	r0 += mul(s0_2_1, M4(3.898e-02, 5.481e-02, -6.377e-02, 2.151e-03, 7.537e-02, 9.792e-02, -1.212e-01, 4.278e-02, -1.144e-02, -3.081e-02, 9.502e-02, -3.406e-02, 4.282e-02, -2.786e-02, 3.235e-02, 2.937e-02));
	r1 += mul(s0_2_1, M4(-2.705e-01, -2.690e-01, -6.941e-02, 3.084e-02, 4.985e-02, 7.251e-02, -1.423e-01, 2.541e-02, -2.814e-01, -1.067e-02, 7.935e-02, -1.015e-02, -2.630e-03, 8.947e-02, -9.683e-03, 6.728e-02));
	r0 += mul(s0_2_2, M4(2.439e-03, 6.370e-03, -3.629e-02, 1.163e-02, -1.737e-02, 2.436e-02, 3.333e-02, -4.152e-03, 5.718e-02, 7.461e-03, 3.512e-03, 7.066e-03, -1.795e-02, -4.917e-02, 2.266e-02, 1.495e-02));
	r1 += mul(s0_2_2, M4(7.415e-02, 4.155e-02, -1.679e-02, -1.822e-02, 7.065e-02, 1.072e-01, 2.166e-02, 1.207e-02, 3.588e-02, -3.689e-02, -4.061e-02, 3.856e-02, -1.322e-01, 6.417e-02, -1.523e-02, -8.863e-03));
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
}
//!PASS 4
//!DESC out-shuffle
//!BLOCK_SIZE 16
//!NUM_THREADS 64
//!IN INPUT, T0, T1
//!OUT OUTPUT
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = (Rmp8x8(tid.x) << 1) + blockStart;
	uint2 sz = GetOutputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = ((gxy >> 1) + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-2.948e-03, -2.986e-04, -8.488e-04, -1.860e-04, -3.457e-03, 4.397e-06, -1.735e-04, -2.123e-04, -1.183e-03, 7.896e-04, 5.030e-03, 1.240e-03, 3.774e-03, 7.586e-04, -3.297e-04, 1.992e-04));
	r0 += mul(s0_0_1, M4(1.098e-02, -1.248e-03, 6.326e-03, -2.323e-03, 4.550e-03, 2.499e-05, 2.839e-04, 6.619e-04, 1.527e-01, 2.910e-02, 4.064e-02, 5.818e-04, 5.508e-03, 4.780e-04, 1.689e-03, -1.832e-03));
	r0 += mul(s0_0_2, M4(5.705e-02, 2.634e-02, 2.809e-02, -9.768e-03, -1.070e-03, -3.459e-05, -1.095e-04, -4.502e-04, 1.434e-02, -1.850e-01, 8.025e-03, -2.634e-02, -9.301e-03, -3.311e-03, -1.354e-03, 1.601e-04));
	r0 += mul(s0_1_0, M4(7.205e-05, -6.653e-05, -3.730e-04, 5.348e-05, 7.276e-03, -9.115e-03, -2.642e-02, -2.334e-03, 3.951e-03, -6.201e-04, -1.758e-03, -3.428e-04, -6.800e-03, -9.784e-04, 7.773e-03, 1.721e-04));
	r0 += mul(s0_1_1, M4(5.779e-02, -5.131e-03, 1.082e-01, -1.450e-02, 4.717e-01, 4.089e-01, 1.989e-02, 3.009e-02, 1.925e-01, -2.875e-03, 3.213e-01, 6.313e-02, 4.872e-02, 2.747e-02, 1.879e-03, -1.297e-02));
	r0 += mul(s0_1_2, M4(2.429e-01, 2.282e-01, -8.106e-01, 3.174e-01, -3.294e-03, 4.991e-02, -7.244e-03, -2.719e-02, 2.398e-03, -2.106e-01, -4.608e-02, -4.092e-01, -2.959e-01, -3.193e-01, -2.655e-02, -1.585e-02));
	r0 += mul(s0_2_0, M4(3.052e-04, 3.470e-05, -5.630e-05, 3.277e-05, -9.207e-03, -3.958e-03, -1.702e-02, -1.985e-02, -1.202e-03, 5.047e-04, -8.386e-04, -4.039e-04, 2.770e-03, -5.035e-04, -8.351e-04, 5.490e-04));
	r0 += mul(s0_2_1, M4(-2.885e-03, 1.016e-03, 3.258e-02, -2.521e-04, -1.026e-01, -4.077e-02, -5.447e-02, -1.304e-01, 6.041e-04, -1.892e-03, -1.765e-02, -3.970e-02, 2.066e-03, 3.493e-03, 1.391e-01, 4.180e-02));
	r0 += mul(s0_2_2, M4(-1.810e-02, -2.192e-03, 4.968e-02, 4.526e-02, -1.948e-04, 2.509e-02, -3.029e-02, 5.528e-02, 3.488e-03, -8.718e-03, 2.021e-02, -4.065e-02, 8.690e-03, 1.364e-02, 1.792e-01, 2.499e-01));
	r0 += mul(s1_0_0, M4(-8.432e-03, -7.257e-03, -5.830e-03, 2.729e-03, 1.557e-03, 9.465e-03, -1.341e-03, -1.082e-03, -5.581e-03, 6.804e-04, 4.466e-03, 6.365e-04, 1.679e-03, -1.805e-05, 3.015e-04, 1.096e-04));
	r0 += mul(s1_0_1, M4(-8.243e-03, -1.260e-02, 6.604e-03, 2.897e-02, 2.582e-02, 5.212e-02, -6.190e-04, -5.569e-03, -3.368e-01, -1.323e-01, -2.274e-02, -2.118e-03, 2.689e-02, -3.486e-03, 1.409e-03, 1.007e-03));
	r0 += mul(s1_0_2, M4(-4.667e-03, 4.692e-03, 2.279e-03, 2.453e-03, 3.652e-03, 1.449e-02, 5.381e-04, 1.354e-03, 8.163e-04, 8.545e-02, 2.209e-04, 3.188e-02, 1.282e-02, -1.585e-02, -1.599e-02, -9.025e-03));
	r0 += mul(s1_1_0, M4(2.614e-03, 1.630e-02, -1.057e-01, 1.548e-02, -6.909e-02, 6.755e-03, 4.447e-02, 9.058e-04, 6.047e-03, 1.200e-03, 1.369e-03, 7.353e-04, 5.206e-04, 2.448e-04, -5.094e-04, -7.379e-05));
	r0 += mul(s1_1_1, M4(1.704e-01, 1.831e-01, 1.410e-01, -5.684e-01, 1.577e-01, -6.270e-01, 1.812e-01, 1.909e-01, -8.698e-02, 2.869e-02, -4.287e-01, -6.783e-02, 7.446e-02, -2.018e-02, 4.887e-02, 1.425e-03));
	r0 += mul(s1_1_2, M4(-2.979e-03, 2.765e-02, -1.823e-03, 3.904e-02, -1.507e-03, 5.549e-02, 1.026e-03, 4.530e-02, 1.175e-02, 1.492e-01, 4.025e-02, 1.812e-01, -8.926e-01, 3.222e-01, 1.637e-01, 2.271e-01));
	r0 += mul(s1_2_0, M4(2.897e-03, -2.783e-04, 1.800e-02, 1.543e-02, -1.169e-02, 2.218e-03, -2.122e-02, -8.473e-03, 1.231e-03, -5.392e-04, 1.591e-03, 5.525e-04, -9.788e-04, -1.473e-04, -1.393e-03, -1.269e-04));
	r0 += mul(s1_2_1, M4(-6.211e-04, -8.027e-03, 5.188e-02, 7.413e-02, -2.017e-03, 2.670e-02, -1.823e-03, -5.480e-02, -7.990e-04, 1.464e-03, 1.422e-02, 3.528e-02, -1.415e-03, -1.123e-04, -2.424e-02, -9.722e-03));
	r0 += mul(s1_2_2, M4(5.688e-04, -2.349e-03, 3.234e-03, 7.350e-03, 1.007e-03, 2.440e-03, -8.574e-03, 1.579e-02, -2.771e-03, 7.396e-03, -1.483e-02, 3.332e-02, 1.931e-02, -1.811e-02, -2.459e-02, 5.656e-04));
	r0 += V4(1.004e-09, -1.986e-10, 1.562e-08, 1.711e-08);
	static const float3x3 RY = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081}, YR = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float2 opt = float2(GetOutputPt());
	float2 fpos = (float2(gxy) + 0.5) * opt;
	float3 yuv;
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.x), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.y), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.z), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.w), yuv.yz)), 1.0);
}
