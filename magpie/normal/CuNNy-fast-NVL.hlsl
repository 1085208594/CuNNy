// CuNNy fast NVL - https://github.com/funnyplanter/CuNNy

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


//!MAGPIE EFFECT
//!VERSION 4
//!SORT_NAME CuNNy-0000284

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
Texture2D OUTPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!COMMON
#define O(t, x, y) t.SampleLevel(SP, pos + float2(x, y) * pt, 0)
#define V4 min16float4
#define M4 min16float4x4

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T4;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T5;

//!PASS 1
//!DESC in (1x12)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT T0, T1, T2
#define L0(x, y) min16float(dot(float3(0.299, 0.587, 0.114), O(INPUT, x, y).rgb))
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	r0 += V4(8.150e-02, -5.637e-03, -6.033e-02, 8.249e-03) * s0_0_0;
	r1 += V4(-2.921e-02, 1.885e-02, -1.034e-02, 5.942e-02) * s0_0_0;
	r2 += V4(-2.861e-01, -7.188e-01, 6.136e-03, -1.990e-02) * s0_0_0;
	r0 += V4(-1.949e-01, 1.418e-02, -1.618e-01, 3.728e-01) * s0_0_1;
	r1 += V4(-1.630e-02, 4.839e-02, 1.128e-02, -1.178e-01) * s0_0_1;
	r2 += V4(1.753e-01, -1.831e-02, 2.744e-02, -4.008e-02) * s0_0_1;
	r0 += V4(-3.096e-01, -1.043e-02, -8.757e-03, -1.837e-02) * s0_0_2;
	r1 += V4(6.293e-04, 1.277e-02, -5.314e-03, 5.043e-02) * s0_0_2;
	r2 += V4(-5.224e-03, 2.683e-02, -3.069e-02, -1.207e-02) * s0_0_2;
	r0 += V4(5.698e-02, -3.989e-03, 5.025e-02, 5.815e-03) * s0_1_0;
	r1 += V4(1.677e-01, 2.427e-01, 7.355e-01, 5.804e-01) * s0_1_0;
	r2 += V4(-9.831e-02, 5.137e-02, -3.284e-02, -6.368e-02) * s0_1_0;
	r0 += V4(6.973e-01, 6.809e-01, 4.702e-01, -1.411e-01) * s0_1_1;
	r1 += V4(2.142e-02, -6.798e-01, 2.753e-03, -5.877e-01) * s0_1_1;
	r2 += V4(3.325e-01, 6.970e-01, 2.805e-02, 7.403e-01) * s0_1_1;
	r0 += V4(-2.736e-01, -6.738e-01, -1.548e-01, 2.432e-02) * s0_1_2;
	r1 += V4(-3.371e-02, 2.475e-01, 1.671e-02, -3.174e-02) * s0_1_2;
	r2 += V4(-1.981e-02, -3.741e-02, 6.582e-01, -1.200e-01) * s0_1_2;
	r0 += V4(-3.507e-01, 2.765e-03, -1.862e-02, 2.225e-02) * s0_2_0;
	r1 += V4(1.515e-01, -3.260e-02, -7.129e-01, -6.309e-01) * s0_2_0;
	r2 += V4(-1.900e-01, 2.770e-02, 2.767e-02, -3.044e-02) * s0_2_0;
	r0 += V4(1.558e-01, -1.289e-02, 5.368e-02, 2.179e-02) * s0_2_1;
	r1 += V4(2.253e-03, 1.355e-01, -3.191e-02, 6.929e-01) * s0_2_1;
	r2 += V4(1.919e-01, -3.845e-02, -6.850e-01, -1.948e-01) * s0_2_1;
	r0 += V4(1.323e-01, 7.039e-03, -2.322e-02, -3.169e-03) * s0_2_2;
	r1 += V4(1.703e-02, -8.395e-03, -6.246e-03, -1.714e-02) * s0_2_2;
	r2 += V4(-4.726e-02, 1.023e-02, -2.095e-03, -1.873e-02) * s0_2_2;
	r0 += V4(2.619e-03, 1.107e-03, 8.741e-03, 1.149e-02);
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 += V4(1.579e-02, 3.744e-02, -3.533e-04, 1.320e-04);
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 += V4(1.804e-03, 1.349e-03, 3.201e-04, 3.059e-03);
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 2
//!DESC conv1 (12x12)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T0, T1, T2
//!OUT T3, T4, T5
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(1.251e-01, -6.372e-02, -6.448e-02, 2.026e-01, -2.528e-01, 3.369e-01, -9.249e-01, 9.704e-02, 5.963e-02, -6.410e-01, -3.837e-01, 2.208e-02, -4.966e-02, -1.587e-01, 1.978e-01, -5.023e-02));
	r1 += mul(s0_0_0, M4(3.096e-01, -2.487e-01, -1.295e-01, 2.947e-02, -1.548e-01, 1.025e-01, -3.328e-02, -3.206e-02, 7.935e-02, 3.259e-01, 1.923e-01, 8.297e-02, -6.180e-02, 1.320e-01, 1.104e-01, -3.182e-02));
	r2 += mul(s0_0_0, M4(-9.043e-02, -1.049e-01, 5.153e-02, -1.996e-02, 2.808e-01, 8.068e-02, 5.171e-02, 9.006e-02, -5.671e-02, 2.689e-01, -3.465e-02, 1.377e-02, -4.063e-02, -4.507e-02, 7.234e-02, 2.328e-02));
	r0 += mul(s0_0_1, M4(-6.251e-02, -7.206e-02, -2.152e-01, 2.706e-02, -3.942e-02, -9.413e-02, -5.635e-01, 7.376e-02, 2.359e-01, 1.842e-01, 5.956e-01, 4.050e-03, 3.070e-02, -6.090e-02, -2.280e-01, 1.274e-01));
	r1 += mul(s0_0_1, M4(3.291e-01, -2.252e-01, -2.325e-01, 4.213e-02, 1.739e-02, -1.154e-01, 5.756e-01, 8.558e-02, -4.425e-01, -3.233e-01, -4.245e-02, -8.944e-02, 3.601e-03, 2.693e-02, -3.372e-01, 2.769e-01));
	r2 += mul(s0_0_1, M4(-4.217e-02, 8.214e-02, 5.213e-02, -1.417e-02, 1.979e-01, 1.796e-01, 1.590e-02, -7.918e-02, 8.511e-02, -2.089e-01, -3.740e-01, 1.732e-01, -6.957e-02, -8.061e-02, 8.942e-02, 7.301e-02));
	r0 += mul(s0_0_2, M4(-7.884e-02, -5.640e-02, -1.835e-02, -1.431e-03, 1.482e-01, -3.775e-02, -1.568e-01, -7.013e-03, 6.812e-02, 2.841e-01, 3.010e-01, 1.041e-01, -2.393e-01, 1.093e-01, -2.455e-01, 6.022e-02));
	r1 += mul(s0_0_2, M4(1.382e-01, -8.100e-02, 7.281e-02, 1.526e-02, -2.556e-01, 1.595e-01, -1.292e-02, 6.918e-02, -1.785e-01, -3.717e-01, -1.782e-01, -8.654e-02, 4.681e-02, -1.265e-01, 6.470e-02, -1.412e-01));
	r2 += mul(s0_0_2, M4(6.165e-02, 5.849e-02, -2.587e-02, 2.325e-02, -3.444e-02, 5.784e-02, -9.080e-03, -6.726e-02, 1.871e-01, -2.142e-01, 6.367e-02, 2.220e-02, 1.919e-01, 2.428e-02, 1.018e-01, -5.948e-03));
	r0 += mul(s0_1_0, M4(1.825e-01, 5.160e-02, -1.754e-01, 4.036e-01, -4.854e-01, 5.726e-01, 3.021e-01, 1.578e-01, -1.463e-01, -2.184e-01, -1.999e-01, 2.687e-01, 2.029e-01, 1.247e-01, 6.177e-02, -1.486e-01));
	r1 += mul(s0_1_0, M4(2.425e-01, -4.040e-01, -1.109e-01, 8.472e-02, -4.775e-01, -1.898e-01, -3.135e-01, -4.280e-01, 2.426e-01, -7.005e-01, -1.268e-02, 3.447e-01, -5.353e-01, 6.583e-01, 2.055e-01, -2.457e-01));
	r2 += mul(s0_1_0, M4(-7.339e-02, 4.293e-01, -1.821e-01, -2.968e-02, 1.656e-01, -1.113e+00, 2.164e-01, 1.424e-01, -3.444e-01, 1.118e+00, 1.265e-01, -6.017e-02, 2.492e-02, -1.170e-01, -4.403e-01, -3.512e-01));
	r0 += mul(s0_1_1, M4(-1.391e-01, 1.408e-01, 4.082e-01, -1.135e-01, 1.243e-01, -5.215e-01, 5.283e-02, 1.091e-01, -8.693e-03, -2.642e-01, 1.448e-01, -4.232e-01, 2.350e-01, 9.970e-02, -2.174e-01, 3.133e-01));
	r1 += mul(s0_1_1, M4(5.238e-01, -4.307e-01, 5.668e-02, 3.131e-02, -1.504e-01, -9.189e-02, -6.230e-01, 4.109e-01, -2.279e-01, 6.627e-01, 2.527e-01, -9.895e-02, -4.272e-01, -8.488e-01, -5.454e-01, -5.873e-01));
	r2 += mul(s0_1_1, M4(-2.879e-01, -4.229e-01, 1.385e-01, 9.150e-02, 1.848e-02, 2.749e-01, 1.117e-01, -1.141e+01, 5.332e-01, -1.920e-01, 4.742e-01, -5.575e-01, 1.103e+00, -4.245e-01, -1.023e-02, 2.242e-01));
	r0 += mul(s0_1_2, M4(-2.183e-01, -7.050e-02, 2.549e-01, -1.381e-01, 9.372e-02, -1.233e-01, -2.739e-02, 8.243e-02, 1.636e-01, 9.470e-01, -2.138e-01, -9.684e-02, -1.193e-01, 9.450e-02, 1.665e-01, -9.824e-02));
	r1 += mul(s0_1_2, M4(3.115e-01, -1.064e-01, -5.412e-02, -3.442e-02, -4.351e-02, 9.490e-02, -2.998e-02, 1.421e-01, -5.920e-01, -2.304e-01, -1.487e-01, -2.805e-01, 2.781e-01, -2.468e-01, -1.057e-01, -2.777e-01));
	r2 += mul(s0_1_2, M4(5.973e-02, -1.279e-01, -1.192e-02, -1.319e-02, -6.056e-02, 4.953e-02, 5.421e-02, -4.170e-01, 1.060e-01, -1.256e-01, -5.500e-01, 7.430e-01, 3.517e-01, -1.486e-01, 1.081e-01, 2.332e-01));
	r0 += mul(s0_2_0, M4(-1.842e-02, -5.270e-02, 4.634e-02, -1.737e-02, 8.556e-03, 4.125e-01, -9.291e-02, 3.994e-01, 1.365e-01, -1.785e-01, -1.463e-01, -7.265e-02, 8.877e-02, 4.590e-01, -5.742e-03, 2.536e-01));
	r1 += mul(s0_2_0, M4(1.585e-01, -4.216e-01, -8.157e-02, 4.623e-02, 4.798e-02, 1.696e-01, -4.616e-02, 9.966e-02, 4.045e-01, -3.608e-01, 1.209e-01, 4.756e-02, -7.629e-02, 4.015e-01, 1.706e-01, -7.640e-02));
	r2 += mul(s0_2_0, M4(3.129e-03, -2.764e-01, 1.961e-02, -4.753e-02, 1.333e-02, 4.798e-01, -1.839e+00, 1.138e-01, -2.392e-01, 1.443e-01, 4.731e-01, 9.327e-02, -8.568e-02, 3.547e-01, -4.736e-01, -1.198e-01));
	r0 += mul(s0_2_1, M4(-2.212e-01, 2.900e-01, 7.645e-02, 2.189e-02, 6.680e-02, -9.787e-02, -2.819e-01, 1.761e-01, 8.208e-02, -9.871e-02, 4.102e-01, 5.939e-02, 6.035e-02, -5.109e-01, -1.451e-01, -2.905e-01));
	r1 += mul(s0_2_1, M4(2.587e-01, -4.880e-01, 1.006e-01, -1.165e-01, -7.974e-02, 2.607e-01, 1.136e-01, 1.232e-01, 2.115e-01, -1.966e-01, -1.252e-01, -3.707e-03, 4.839e-01, 6.346e-01, 1.537e-01, 1.120e+00));
	r2 += mul(s0_2_1, M4(1.518e-01, -1.287e-01, 3.331e-01, -4.608e-03, -1.646e-01, 2.530e-01, -3.479e-01, 1.490e-01, -2.000e-01, -3.597e-02, -1.539e-01, -3.661e-02, -1.369e+00, 1.083e-01, -3.183e-01, 1.598e-01));
	r0 += mul(s0_2_2, M4(6.714e-02, 3.860e-02, -5.558e-03, 1.050e-01, 1.541e-01, -2.041e-01, -1.843e-02, -4.695e-02, -3.389e-01, 5.319e-01, 2.892e-02, 1.856e-02, 4.922e-02, -8.501e-02, -1.251e-02, -6.971e-03));
	r1 += mul(s0_2_2, M4(2.095e-01, -1.485e-01, 6.460e-02, 6.043e-02, -2.701e-02, -1.476e-02, 1.596e-02, 1.057e-01, -9.349e-03, 5.762e-01, 4.936e-02, -1.353e-01, 2.588e-01, -8.230e-01, -1.974e-01, 2.861e-01));
	r2 += mul(s0_2_2, M4(1.526e-01, 4.252e-02, 3.942e-02, 2.197e-01, -6.756e-02, 4.317e-02, 5.929e-02, -1.171e-01, -3.535e-02, -3.890e-01, -1.732e-01, -6.775e-02, -7.895e-02, 8.634e-02, -2.305e-01, -9.429e-02));
	r0 += mul(s1_0_0, M4(-2.213e-01, 1.908e-01, 1.641e-01, -1.436e-01, -1.205e-01, -1.353e-01, -2.340e-01, 3.941e-02, 2.499e-01, 4.359e-02, -9.102e-02, -6.747e-02, -3.023e-01, 1.577e-01, 4.066e-01, 1.371e-02));
	r1 += mul(s1_0_0, M4(4.067e-01, 4.974e-01, 1.083e-01, -1.203e-01, -2.147e-01, 1.661e-01, -1.744e-01, 6.869e-02, -1.686e-01, -2.333e-01, -1.258e-02, 4.812e-02, 3.583e-02, 1.441e-02, 1.247e-01, -6.427e-02));
	r2 += mul(s1_0_0, M4(-2.895e-02, -7.799e-01, 7.774e-02, -1.382e-02, -7.411e-02, 2.317e-01, -3.336e-02, 9.625e-03, 1.813e-02, 2.103e-01, -5.406e-02, 1.451e-02, -1.099e-02, -5.058e-01, 2.401e-01, 1.142e-02));
	r0 += mul(s1_0_1, M4(-5.844e-01, 1.743e-01, 4.153e-02, 2.256e-01, 4.014e-02, 2.911e-02, 2.429e-01, -8.057e-02, 6.593e-02, 2.104e-01, 1.012e+00, 1.293e-01, -4.560e-01, -3.271e-01, 3.059e-01, 1.147e-01));
	r1 += mul(s1_0_1, M4(3.845e-02, -7.618e-02, 7.319e-03, 2.023e-01, 1.002e-01, -1.996e-01, -2.157e-01, -1.123e-01, -2.276e-01, -2.017e-01, 9.968e-02, -5.666e-02, 3.007e-01, -1.273e-01, -7.570e-02, 2.514e-01));
	r2 += mul(s1_0_1, M4(-9.795e-02, -3.081e-02, 1.007e-01, 7.884e-02, -1.714e-01, -2.559e-02, -2.075e-02, -1.462e-02, 1.577e-01, -2.437e+00, 8.361e-02, -3.563e-03, 8.857e-02, -1.021e-01, 3.680e-01, -6.630e-02));
	r0 += mul(s1_0_2, M4(-2.527e-01, -3.130e-01, 1.799e-01, -3.138e-01, -6.631e-02, -1.661e-01, 4.645e-01, 1.643e-02, -8.374e-02, 4.491e-02, -2.024e-01, 3.021e-01, 1.915e-01, -1.880e-01, -1.324e-01, 1.809e-01));
	r1 += mul(s1_0_2, M4(1.389e-01, 6.801e-01, -5.102e-01, -1.659e-01, 2.622e-01, -8.539e-02, -2.397e-01, -6.386e-02, -3.006e-01, -1.889e-01, -8.081e+00, 1.140e-01, -3.838e-01, 1.184e-02, -4.726e-02, 6.330e-02));
	r2 += mul(s1_0_2, M4(1.051e-01, 5.255e-02, 7.272e-01, -2.876e-01, -5.822e-02, 1.059e-01, -2.271e-02, 3.468e-02, 3.406e-01, 2.952e-01, -3.346e-01, 1.232e-01, 1.350e-01, 1.376e-01, 3.310e-01, -4.942e-02));
	r0 += mul(s1_1_0, M4(1.067e-01, 5.028e-02, 6.091e-02, 2.172e-01, 6.845e-02, -4.367e-01, -4.443e-01, -2.459e-01, 1.370e-01, -8.576e-02, 9.498e-02, -9.586e-03, -1.655e-01, 3.235e-01, 2.842e-01, -1.292e-02));
	r1 += mul(s1_1_0, M4(-2.399e-01, -3.021e-01, -2.333e-01, 1.079e-03, -1.539e-01, -1.870e-02, -9.819e-03, 2.076e-01, -8.077e-02, -1.472e-01, -9.463e-03, 1.562e-02, -3.268e-02, 6.044e-02, 7.205e-02, -4.478e-02));
	r2 += mul(s1_1_0, M4(9.552e-02, -8.779e-02, 6.133e-02, 4.592e-02, -1.255e-01, 2.017e-01, -3.004e-01, -7.746e-02, -2.437e-02, 6.944e-02, 7.980e-02, 1.899e-02, 5.338e-03, -5.213e-01, 9.557e-03, 4.084e-02));
	r0 += mul(s1_1_1, M4(2.889e-01, -8.973e-02, -2.885e-02, -2.702e-01, 9.355e-01, 8.249e-01, -2.180e-01, 4.248e-01, 5.898e-02, 5.332e-01, 6.533e-02, 2.919e-01, -5.280e-03, -2.552e-01, 1.773e-01, -4.662e-02));
	r1 += mul(s1_1_1, M4(-3.056e-01, 5.001e-01, 2.492e-01, 2.829e-01, 4.148e-01, 1.784e-01, 2.378e-03, 9.692e-02, 5.381e-02, 3.782e-02, 1.468e-01, -1.081e-01, -1.929e-01, 4.145e-02, -4.039e-01, 1.731e-01));
	r2 += mul(s1_1_1, M4(-2.016e-01, 5.631e-02, -1.922e-01, -5.793e-01, -4.504e-02, -2.062e-01, -3.696e-01, 1.295e-01, 1.667e-01, -8.277e-01, 1.952e-01, -1.191e-01, -2.844e-01, 7.049e-01, 1.352e-01, 1.245e-01));
	r0 += mul(s1_1_2, M4(1.666e-01, -5.132e-01, -6.076e-01, -9.471e-02, -1.083e-01, -3.054e-02, -2.117e-01, -1.116e-01, 1.939e-01, -2.550e-01, 1.319e-01, 2.935e-01, 1.539e-01, -3.355e-01, -3.024e-02, 6.981e-02));
	r1 += mul(s1_1_2, M4(6.244e-02, -4.165e-01, 9.201e-01, 1.280e+00, -2.427e-02, -7.418e-02, 1.009e-01, -2.206e-02, -1.536e-01, 6.931e-02, 1.439e-01, 3.819e-01, 1.850e-02, -5.007e-02, -1.440e-01, -1.311e-01));
	r2 += mul(s1_1_2, M4(-3.910e-02, -8.210e-02, 1.373e-01, -1.164e-02, 1.934e-02, 1.592e-02, -1.206e-01, 9.199e-02, -1.660e-01, 1.934e-02, -2.730e-01, -1.606e-01, -2.114e-01, 2.342e-01, -1.861e-02, -4.250e-01));
	r0 += mul(s1_2_0, M4(4.033e-02, 1.680e-01, 3.984e-01, -1.247e-02, -1.495e-01, -7.447e-02, -4.186e-02, 6.671e-02, 7.439e-02, -1.476e-03, 7.981e-03, 3.207e-02, -6.265e-02, 1.197e-01, 4.858e-02, -1.317e-03));
	r1 += mul(s1_2_0, M4(6.482e-02, -5.514e-01, 3.795e-02, 2.169e-02, 1.185e-01, -1.693e-01, 5.141e-02, -2.532e-02, -4.366e-02, 2.026e-02, 9.658e-03, 9.660e-03, 1.799e-02, 5.946e-02, 1.062e-02, 2.094e-03));
	r2 += mul(s1_2_0, M4(-1.218e-02, 8.833e-02, 8.944e-02, 7.588e-02, 1.037e-01, -2.808e-02, 3.988e-01, 2.830e-02, -2.613e-02, 1.593e-01, -1.101e-01, -1.753e-02, 6.829e-03, 1.518e-01, -8.640e-02, 4.295e-03));
	r0 += mul(s1_2_1, M4(1.930e-01, 2.996e-01, -5.586e-01, 2.320e-01, -2.984e-01, 1.589e-01, 1.559e-01, -2.412e-01, 1.639e-01, -8.007e-02, -3.388e-02, 2.684e-02, 4.223e-02, 1.087e-01, -8.713e-02, 6.332e-02));
	r1 += mul(s1_2_1, M4(9.355e-02, -1.682e-02, -3.564e-01, -4.383e-01, -5.217e-01, -1.074e-01, 3.327e-01, -1.971e-01, -8.230e-02, 9.745e-02, -1.640e-01, 4.082e-02, 4.500e-02, 1.076e-01, -9.254e-02, 2.816e-02));
	r2 += mul(s1_2_1, M4(2.057e-01, -3.057e-01, -9.851e-01, -7.055e-02, 3.356e-01, -1.997e-01, 5.337e-01, -8.845e-02, -8.962e-02, 3.567e-02, -4.580e-01, -3.920e-02, -7.340e-02, 8.839e-02, -2.251e-01, 9.121e-02));
	r0 += mul(s1_2_2, M4(3.254e-01, -5.818e-01, 2.686e-01, 3.593e-01, -4.133e-01, -7.484e-02, 1.319e-01, -5.834e-02, -1.226e-02, -5.114e-02, 1.291e-01, 1.136e-01, 3.134e-01, -3.256e-02, -4.383e-02, 7.730e-02));
	r1 += mul(s1_2_2, M4(2.293e-01, -6.443e-02, 4.090e-02, -6.377e-02, -2.437e-01, 2.727e-01, -1.244e-02, -2.272e-01, 1.191e-01, 1.281e-01, 9.421e-02, -7.125e-02, -1.387e-02, -2.280e-02, -1.173e-01, 1.065e-01));
	r2 += mul(s1_2_2, M4(-5.999e-02, 3.899e-01, -3.838e-01, -6.086e-02, 5.132e-02, -6.395e-02, 1.627e-01, 3.019e-02, -1.708e-01, 1.529e-01, -8.567e-02, -1.096e-01, -7.908e-02, 7.470e-02, -1.044e-01, -2.790e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(1.484e-01, -2.193e-02, -1.769e-01, 2.020e-01, -9.252e-02, 5.762e-02, 9.049e-02, -4.864e-02, -5.879e-01, -1.189e-01, -1.537e-01, 1.169e-01, 3.542e-02, -1.637e-02, -3.374e-01, -1.887e-01));
	r1 += mul(s0_0_0, M4(2.042e-01, 1.763e-02, -2.202e-01, -1.130e-02, -2.896e-02, -6.639e-02, 9.586e-02, 3.596e-02, 4.509e-01, 2.010e-01, 2.518e-01, -6.049e-02, -1.629e-01, 2.815e-01, -3.346e-02, -1.720e-01));
	r2 += mul(s0_0_0, M4(-1.180e-01, 2.067e-01, -1.713e-01, 2.486e-03, 7.448e-02, -1.117e-01, 7.186e-02, -1.108e-02, 1.972e-01, -1.794e+00, 1.817e-01, 9.043e-02, -1.999e-01, 4.510e-01, 2.021e-02, -1.249e-02));
	r0 += mul(s0_0_1, M4(1.550e-01, 8.261e-02, 7.950e-01, 2.617e-02, -5.815e-02, -8.540e-03, -2.171e-01, -1.174e-01, 2.413e-01, -3.110e-01, -3.730e-01, -1.293e-02, -5.503e-02, 2.224e-01, 9.980e-01, 2.638e-01));
	r1 += mul(s0_0_1, M4(6.254e-02, -7.566e-03, -2.071e-01, -1.141e-01, -1.067e-01, 1.332e-01, 6.958e-02, 1.002e-02, -9.413e-02, -2.133e-01, -3.050e-01, 1.191e-01, -3.945e-02, 4.964e-01, -8.106e-01, -3.163e-02));
	r2 += mul(s0_0_1, M4(-2.382e-01, -1.498e-01, -2.057e-02, 7.747e-02, 3.628e-02, 6.860e-02, 2.061e-02, -3.576e-02, 2.695e-01, 4.131e-02, 4.478e-02, -1.038e-01, 7.248e-03, 1.242e-01, 2.822e-01, -4.862e-02));
	r0 += mul(s0_0_2, M4(3.593e-01, -1.277e-01, 1.357e-01, 9.254e-02, -1.601e-01, 4.651e-02, -2.345e-01, -4.309e-02, 1.096e-02, 6.473e-02, -1.109e-01, 4.107e-03, -1.132e-01, -2.873e-02, -4.177e-03, 1.206e-01));
	r1 += mul(s0_0_2, M4(2.727e-01, -1.010e-01, -7.672e-01, 7.790e-02, -2.901e-01, 2.313e-01, 2.442e-01, 1.973e-03, -6.262e-02, -3.426e-02, 9.297e-02, 5.220e-02, 4.329e-01, -2.882e-02, 1.326e-01, -3.161e-03));
	r2 += mul(s0_0_2, M4(-1.815e-01, 1.184e-01, -1.041e-01, 1.785e-01, -5.450e-03, -8.752e-03, 6.131e-02, 2.353e-02, 1.973e-02, -4.861e-02, 4.290e-02, -2.881e-01, -2.754e-01, 1.724e-01, 8.305e-02, -1.015e-01));
	r0 += mul(s0_1_0, M4(3.368e-01, 3.122e-02, 1.973e-02, -2.657e-01, -2.764e-01, 1.872e-01, 3.636e-01, 6.136e-02, -2.293e-01, -1.861e-01, -4.637e-02, -1.509e-01, -5.525e-03, -4.384e-02, -3.495e-01, 3.174e-01));
	r1 += mul(s0_1_0, M4(-1.855e-01, -5.844e-01, -2.837e-02, 6.742e-02, 7.446e-02, 3.662e-01, 1.187e-01, -4.089e-02, 6.081e-02, -1.239e-01, -3.291e-01, 1.823e-01, -3.063e-01, -2.298e-03, 4.670e-02, -2.676e-01));
	r2 += mul(s0_1_0, M4(-5.533e-03, 4.697e-01, -2.253e-01, -8.417e-02, 2.825e-02, -6.050e-01, 1.816e-01, 3.147e-02, -3.034e-01, 5.188e-01, -7.504e-01, -5.736e-02, 1.876e-01, 6.916e-01, -5.692e-01, 8.407e-02));
	r0 += mul(s0_1_1, M4(1.747e-01, 3.975e-01, -2.375e-01, 4.348e-01, -2.604e-01, -1.013e-01, 3.025e-02, -2.297e-02, 7.174e-01, -2.881e-01, -1.361e-01, 1.588e-02, -2.147e-01, 2.309e-01, -5.959e-01, -7.234e-01));
	r1 += mul(s0_1_1, M4(-3.447e-01, -5.488e-01, 3.733e-01, 1.017e-01, -6.497e-02, 4.109e-01, 1.353e-01, -1.726e-02, 5.238e-01, -6.827e-02, -3.965e-01, 2.839e-01, 3.789e-01, 8.199e-02, 8.892e-01, -3.813e-02));
	r2 += mul(s0_1_1, M4(2.926e-01, -1.310e-01, -3.940e-01, -2.228e-01, -1.567e-01, -1.723e-01, 1.943e-01, -1.694e-02, -8.718e-02, 1.791e-01, -2.094e-01, 2.040e-01, -3.003e-01, -1.550e-01, -3.914e-01, -2.493e-01));
	r0 += mul(s0_1_2, M4(-7.502e-01, 4.007e-01, -2.060e-01, -1.982e-01, 3.247e-01, -2.787e-01, -1.362e-01, 1.597e-01, -9.222e-02, -7.403e-02, 9.156e-02, 3.080e-03, -3.176e-01, -4.916e-02, 2.233e-01, -3.085e-01));
	r1 += mul(s0_1_2, M4(-1.100e-02, -4.575e-02, 4.718e-01, -1.519e-01, -3.601e-01, 4.436e-01, 3.370e-01, 2.081e-02, 1.067e-02, -1.778e-02, 1.426e-03, 3.889e-02, -2.771e-01, 5.091e-02, 1.838e-01, -3.775e-01));
	r2 += mul(s0_1_2, M4(5.042e-02, -2.559e-01, -5.649e-01, 4.463e-01, 2.665e-01, -2.883e-02, 3.662e-01, -6.745e-02, -7.995e-02, 2.913e-02, 7.321e-02, -1.841e-01, -1.597e-01, 1.522e-02, 2.996e-01, 7.012e-01));
	r0 += mul(s0_2_0, M4(-5.550e-02, -1.578e-02, 1.772e-01, 4.256e-05, -1.305e-01, 1.137e-01, 1.714e-02, -9.575e-02, -2.153e-01, -6.095e-03, -7.195e-02, -7.063e-02, -1.050e-01, -6.427e-02, 8.379e-02, 1.206e-01));
	r1 += mul(s0_2_0, M4(-1.928e-01, 8.340e-02, 9.978e-02, -7.151e-02, -3.737e-02, 3.012e-01, 2.486e-04, -1.173e-02, 5.183e-02, -1.374e-01, 8.139e-02, 6.330e-02, 2.535e-02, 2.371e-01, 4.642e-02, -9.595e-02));
	r2 += mul(s0_2_0, M4(7.732e-02, -9.466e-02, 5.300e-02, 6.425e-02, -1.085e-02, -4.585e-01, 8.584e-04, 3.308e-02, -8.081e-02, -2.407e-01, -3.871e-01, 3.849e-02, 1.303e-01, -1.733e-01, 1.425e+00, 2.963e-02));
	r0 += mul(s0_2_1, M4(2.246e-01, 2.231e-02, -1.120e-01, -8.412e-02, -5.748e-03, 3.456e-02, -3.046e-01, 3.563e-01, 4.358e-02, 1.721e-01, -5.904e-02, -4.554e-02, 1.858e-01, 1.627e-01, 1.942e-01, -2.961e-01));
	r1 += mul(s0_2_1, M4(-1.322e-01, 3.162e-01, 2.208e-01, -2.574e-01, -8.765e-02, 5.614e-01, -3.030e-01, 8.715e-02, 2.151e-02, -4.575e-02, -1.591e-02, 8.450e-02, -3.505e-01, -3.846e-01, -2.190e-01, -2.256e-01));
	r2 += mul(s0_2_1, M4(1.101e-01, -4.163e-02, 4.109e-01, -7.373e-02, -2.448e-01, -1.659e-01, -8.608e-01, -1.927e-02, 4.376e-02, 7.201e-02, -1.547e-01, 2.596e-02, 4.767e-01, -4.545e-01, 7.241e-01, -5.545e-02));
	r0 += mul(s0_2_2, M4(-8.711e-02, -3.753e-01, 5.480e-03, -1.627e-02, 7.211e-01, -9.943e-02, 7.515e-03, -1.443e-01, 6.949e-02, -1.707e-02, -6.558e-02, 3.217e-02, -7.008e-02, -1.887e-01, -6.491e-03, 2.973e-01));
	r1 += mul(s0_2_2, M4(-1.872e-01, 1.944e-01, 9.201e-02, -2.300e-01, -4.639e-01, 2.096e-01, -4.754e-01, 1.574e-01, 6.106e-02, -5.775e-02, -2.126e-02, 2.373e-02, 1.893e-01, -2.953e-01, -5.453e-02, -9.950e-02));
	r2 += mul(s0_2_2, M4(-3.867e-02, 1.606e-01, 3.878e-01, 6.983e-02, -2.007e-01, -1.018e-01, -1.122e-01, 2.373e-02, -3.483e-03, 3.398e-02, -4.314e-02, 5.477e-02, 1.247e-01, 1.499e-01, 1.320e-01, 1.411e-01));
	r0 = max(r0, 0.0);
	T3[gxy] = r0;
	r1 = max(r1, 0.0);
	T4[gxy] = r1;
	r2 = max(r2, 0.0);
	T5[gxy] = r2;
}
//!PASS 3
//!DESC conv2 (12x8)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T3, T4, T5
//!OUT T0, T1
#define L0(x, y) V4(O(T3, x, y))
#define L1(x, y) V4(O(T4, x, y))
#define L2(x, y) V4(O(T5, x, y))
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(4.924e-02, -4.496e-02, -5.316e-03, -1.940e-02, -3.356e-02, 4.039e-02, -2.536e-02, -1.680e-02, -9.399e-03, -6.490e-03, 4.782e-03, -2.299e-02, 1.725e-02, -1.022e-02, 1.304e-02, 9.313e-03));
	r1 += mul(s0_0_0, M4(1.093e-01, -3.155e-02, 2.879e-02, -1.575e-02, -7.349e-02, 1.112e-02, 6.224e-03, 4.271e-02, 5.523e-02, 4.932e-02, 3.104e-03, -1.519e-02, 3.161e-02, -6.918e-02, 2.020e-02, -2.238e-02));
	r0 += mul(s0_0_1, M4(-7.060e-02, -3.934e-02, -7.006e-02, -8.521e-02, 4.474e-02, -5.766e-02, 2.197e-02, 9.608e-03, -6.873e-02, -3.210e-02, -8.311e-03, -4.047e-02, 3.110e-01, 8.016e-03, -1.395e-02, 7.833e-02));
	r1 += mul(s0_0_1, M4(-1.288e-01, -2.115e-01, 5.273e-02, 1.084e-01, 1.314e-02, -1.583e-01, 3.453e-02, -8.093e-02, 2.147e-02, 5.496e-02, 1.937e-02, 1.884e-02, -4.396e-02, 2.803e-01, 4.278e-02, 1.462e-01));
	r0 += mul(s0_0_2, M4(1.304e-02, -4.162e-03, -3.292e-02, -8.580e-03, -2.701e-02, -1.598e-03, -8.771e-02, 2.463e-02, -8.238e-03, -2.111e-03, -5.556e-02, -4.470e-02, -4.753e-02, 7.772e-03, 1.252e-01, -5.560e-02));
	r1 += mul(s0_0_2, M4(-2.036e-01, -3.199e-02, 2.389e-02, -1.902e-02, -1.060e-01, 1.294e-02, 3.485e-02, -2.817e-02, 1.827e-02, 1.393e-01, -2.442e-03, -7.300e-02, 3.426e-01, 5.733e-03, -1.763e-02, 9.020e-02));
	r0 += mul(s0_1_0, M4(4.592e-02, 1.899e-01, 5.903e-02, 8.818e-02, -1.052e-01, -3.297e-01, -5.428e-02, -1.139e-01, -7.544e-02, 7.251e-02, 1.247e-02, 2.881e-01, 9.457e-02, 2.860e-01, 3.689e-02, -5.952e-03));
	r1 += mul(s0_1_0, M4(9.619e-02, 7.947e-02, -2.482e-02, -6.213e-02, -1.039e-01, -1.783e-01, -3.465e-02, -4.052e-03, 3.879e-02, -9.353e-02, 2.851e-02, -1.465e-02, 7.057e-02, 1.141e-01, -3.894e-02, -1.984e-03));
	r0 += mul(s0_1_1, M4(-1.835e-01, -1.215e-01, 9.207e-02, 1.715e-02, 1.128e-01, 2.437e-01, -1.987e-01, -1.815e-01, -1.986e-02, 7.481e-02, -4.578e-02, 1.860e-01, 3.038e-01, 1.937e-01, 1.724e-01, -1.293e-01));
	r1 += mul(s0_1_1, M4(-1.239e-01, -8.535e-01, -3.037e-01, 1.165e-01, -4.927e-02, -3.577e-01, -1.746e-01, -3.184e-01, 3.824e-03, 1.136e-01, 1.473e-02, 4.197e-02, -2.685e-01, 2.821e-01, 1.121e-01, 1.739e-01));
	r0 += mul(s0_1_2, M4(7.278e-03, -7.365e-03, -1.732e-01, -1.995e-02, -1.091e-01, -2.785e-02, 4.588e-01, -3.685e-02, 3.579e-02, 4.637e-02, -1.460e-01, 5.180e-02, -8.347e-03, 2.111e-02, 5.556e-01, 4.471e-03));
	r1 += mul(s0_1_2, M4(-1.747e-01, -1.490e-01, -4.408e-02, -1.519e-01, -9.335e-01, -2.090e-01, 1.226e-02, 1.508e-01, -7.600e-03, 2.854e-01, 2.840e-02, -1.772e-01, 3.029e-01, 8.428e-02, 2.888e-02, 2.273e-01));
	r0 += mul(s0_2_0, M4(-4.735e-03, -7.715e-02, 5.920e-03, -1.930e-01, 1.594e-02, 4.669e-03, -1.521e-02, -2.383e-01, -4.098e-02, -1.015e-02, 2.344e-02, -7.250e-02, -2.962e-02, 8.132e-03, -1.077e-05, 2.246e-01));
	r1 += mul(s0_2_0, M4(5.718e-03, 1.253e-01, -1.367e-02, -3.748e-03, -4.706e-02, 1.037e-01, -6.428e-02, -2.165e-02, 5.549e-02, 1.105e-03, -2.765e-02, 1.608e-04, 2.071e-02, -8.949e-02, 8.054e-02, 1.461e-02));
	r0 += mul(s0_2_1, M4(-4.967e-02, -1.051e-01, -5.604e-02, 6.078e-03, -7.402e-02, -1.774e-01, 4.732e-02, -5.357e-02, -1.394e-01, -5.645e-01, -2.172e-01, 1.978e-01, 5.169e-02, 1.636e-01, -6.763e-02, 7.448e-02));
	r1 += mul(s0_2_1, M4(-5.225e-03, -1.698e-01, -4.112e-02, -6.039e-02, 2.481e-02, -2.654e-02, -2.055e-02, 1.679e-02, -7.934e-02, -2.359e-01, 4.418e-03, 3.892e-02, -1.524e-02, 1.240e-01, 7.404e-02, 3.259e-02));
	r0 += mul(s0_2_2, M4(-1.766e-02, -1.052e-03, -1.811e-01, 1.204e-02, -1.124e-02, 6.103e-03, -2.105e-01, -2.449e-02, 5.504e-02, 3.689e-02, -8.614e-01, -6.220e-03, 3.334e-02, 4.796e-03, 2.427e-01, 4.839e-03));
	r1 += mul(s0_2_2, M4(-5.570e-02, -1.098e-02, -1.015e-02, -2.143e-02, 2.798e-02, 1.672e-02, -2.674e-02, -6.144e-02, -1.441e-01, 1.079e-01, 9.981e-02, -2.234e-01, 8.143e-03, -3.791e-02, 2.355e-02, 4.329e-02));
	r0 += mul(s1_0_0, M4(-2.803e-01, 3.701e-02, 9.690e-04, 4.997e-02, 1.121e-01, 1.519e-01, 2.978e-02, 2.115e-01, -2.618e-02, -3.405e-02, -1.136e-02, -1.032e-01, -2.106e-03, 7.141e-02, -6.778e-03, 2.524e-01));
	r1 += mul(s1_0_0, M4(8.714e-02, -1.399e-01, -2.267e-02, -5.865e-02, 6.957e-02, 1.656e-01, -7.212e-03, -1.373e-02, -4.579e-02, 5.750e-02, 2.256e-02, 1.135e-02, -5.569e-02, -1.563e-01, -1.065e-01, -2.258e-03));
	r0 += mul(s1_0_1, M4(7.104e-02, -5.604e-02, -8.022e-02, -1.328e-01, -3.213e-01, -6.122e-02, -1.712e-02, 2.727e-01, 5.087e-02, -3.388e-03, 3.482e-02, -1.345e-02, -4.666e-02, 6.159e-02, -1.008e-03, 1.529e-01));
	r1 += mul(s1_0_1, M4(7.683e-02, -3.093e-02, 3.106e-02, -2.192e-01, -5.709e-02, -2.659e-01, -5.528e-02, 1.209e-01, 1.546e-01, -8.531e-02, 5.115e-02, 1.111e-02, -1.411e-01, 7.151e-02, -1.304e-01, -4.592e-02));
	r0 += mul(s1_0_2, M4(-1.736e-02, -1.678e-02, 7.942e-03, -1.504e-02, 2.905e-02, 3.044e-02, -1.052e-01, -2.691e-02, -5.974e-03, -7.288e-03, -3.203e-02, -3.839e-02, -1.099e-03, 5.533e-03, 4.757e-02, 4.578e-02));
	r1 += mul(s1_0_2, M4(-1.718e-01, -6.648e-04, 1.344e-02, 8.577e-02, 6.544e-02, 1.407e-01, -5.218e-02, -3.278e-01, -7.007e-02, 5.794e-02, 1.795e-02, 7.533e-03, 1.119e-01, 1.267e-02, -2.832e-02, -3.917e-02));
	r0 += mul(s1_1_0, M4(1.559e-01, -4.384e-01, -4.921e-03, -1.754e-01, -9.744e-02, -1.642e-01, -1.181e-02, -4.795e-01, 5.506e-03, 1.152e-01, 3.684e-02, 1.411e-01, -9.979e-02, -3.584e-01, -1.284e-01, -4.821e-01));
	r1 += mul(s1_1_0, M4(1.388e-01, 9.335e-02, -4.341e-02, 2.884e-03, -2.129e-02, 1.370e-01, -6.596e-02, 3.139e-02, 3.943e-02, 3.138e-02, -6.678e-02, 4.394e-02, -2.747e-01, -2.077e-01, 1.694e-01, 1.080e-01));
	r0 += mul(s1_1_1, M4(-2.498e-01, 1.135e-01, -3.047e-01, 1.272e-01, 9.210e-02, -2.460e-01, 6.839e-02, -1.073e-01, -6.746e-02, -1.222e-02, -2.900e-02, 7.117e-02, 7.029e-02, 2.065e-02, 6.724e-02, -1.639e-01));
	r1 += mul(s1_1_1, M4(-1.066e-01, -5.731e-01, -9.166e-02, 5.137e-02, 1.344e-01, -4.777e-01, 4.649e-02, -1.790e-01, 1.430e-01, -1.586e-01, -1.388e-01, -1.824e-01, 4.947e-01, 2.524e-01, 1.540e-01, -2.436e-01));
	r0 += mul(s1_1_2, M4(4.806e-03, 3.947e-03, -5.485e-02, 1.276e-02, 8.869e-02, 9.272e-03, -2.824e-01, -6.288e-03, 6.048e-02, 2.680e-02, 2.852e-02, 5.817e-02, -1.225e-02, -2.633e-02, -8.435e-02, -6.728e-02));
	r1 += mul(s1_1_2, M4(-4.014e-01, 1.012e-01, -3.671e-02, -6.917e-02, -4.272e-01, 2.159e-01, 4.895e-02, 2.298e-01, -1.937e-01, 8.616e-02, 3.222e-02, 1.421e-01, -1.673e-01, 2.161e-02, 2.470e-02, 5.920e-02));
	r0 += mul(s1_2_0, M4(-2.131e-02, 1.824e-01, 6.503e-02, -2.618e-02, -2.988e-02, -6.022e-02, 2.356e-03, 1.460e-01, 1.648e-01, 3.369e-01, -2.390e-02, 8.732e-01, 7.081e-03, -1.305e-02, -7.688e-02, 4.712e-02));
	r1 += mul(s1_2_0, M4(1.421e-01, 1.485e-01, -5.206e-02, -3.717e-02, 6.712e-02, -1.656e-01, 3.736e-02, 2.935e-02, 6.316e-02, 3.025e-02, 2.007e-01, -2.665e-03, -1.327e-01, -2.130e-01, -5.994e-02, 4.005e-03));
	r0 += mul(s1_2_1, M4(-4.803e-02, -1.655e-01, 1.665e-01, -1.108e-01, 1.089e-02, 1.929e-01, -6.515e-02, 1.239e-02, 4.898e-01, 2.881e-01, 2.684e-01, 1.002e-01, -4.472e-03, 5.790e-03, -4.297e-02, 7.305e-02));
	r1 += mul(s1_2_1, M4(-2.686e-01, -4.287e-01, -4.398e-02, 4.097e-02, 9.139e-02, -5.296e-02, -4.473e-02, -4.030e-02, 1.381e-01, 2.529e-01, 8.652e-01, 5.252e-01, 4.233e-02, 1.103e-01, 8.667e-02, 3.374e-02));
	r0 += mul(s1_2_2, M4(3.120e-02, -3.104e-02, -1.432e-01, -7.678e-02, -8.702e-03, -1.612e-02, 1.333e-01, -4.298e-02, 4.982e-03, -2.921e-02, -7.981e-02, -2.413e-02, 2.273e-02, 2.415e-02, 1.773e-02, 1.423e-02));
	r1 += mul(s1_2_2, M4(1.226e-01, 2.220e-01, -2.302e-02, -7.389e-02, -2.070e-01, -3.990e-02, 7.621e-02, -6.875e-03, -2.981e-01, -7.632e-02, 3.543e-02, 8.959e-02, -1.945e-02, 3.099e-02, 2.849e-03, -5.255e-03));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(3.096e-02, 4.681e-02, -1.065e-02, 6.882e-02, 5.545e-02, -2.568e-02, -1.296e-02, 1.607e-01, -1.111e-01, -7.644e-02, 3.577e-03, -4.007e-01, 7.151e-02, -1.931e-02, -4.015e-02, -1.704e-01));
	r1 += mul(s0_0_0, M4(-2.733e-02, 5.617e-02, -5.166e-02, -1.951e-03, 2.860e-02, 3.157e-02, 1.518e-02, -6.149e-03, -7.161e-02, -1.206e-01, -3.085e-02, 1.657e-02, -1.233e-01, 5.537e-02, -5.433e-02, -5.930e-02));
	r0 += mul(s0_0_1, M4(-2.084e-01, -1.273e-02, 3.151e-02, -1.918e-02, -2.866e-01, 1.676e-02, -2.478e-02, 1.432e-01, -1.278e-01, -1.004e-01, -3.698e-02, -2.210e-01, 9.184e-02, 2.182e-02, -4.283e-02, -3.584e-02));
	r1 += mul(s0_0_1, M4(-3.948e-02, -2.923e-01, -5.491e-02, -4.202e-02, -1.776e-01, -4.968e-02, -1.424e-01, 5.219e-02, 2.499e-01, -4.078e-01, 3.315e-02, -1.010e-01, -7.976e-02, 1.685e-01, 1.305e-02, 2.409e-01));
	r0 += mul(s0_0_2, M4(4.741e-02, 2.570e-03, -8.542e-02, 4.108e-02, -1.935e-01, 1.860e-02, 3.136e-03, 1.221e-01, -4.113e-02, -1.207e-02, -5.170e-02, -1.194e-01, -4.308e-03, -7.041e-03, 5.736e-02, -1.699e-02));
	r1 += mul(s0_0_2, M4(-2.313e-01, -2.066e-02, 2.046e-03, -6.811e-02, 4.601e-01, 1.244e-02, -2.758e-02, -5.102e-01, -7.434e-01, -2.803e-01, 4.935e-02, -1.108e-01, 1.174e-01, -2.943e-02, -1.854e-02, 3.432e-03));
	r0 += mul(s0_1_0, M4(1.547e-01, -2.214e-01, -2.569e-02, -4.921e-01, 6.154e-02, 4.468e-03, -2.237e-02, -1.624e-01, 1.277e-02, -3.916e-01, -1.950e-02, -1.731e+00, -9.646e-02, 3.623e-01, 2.036e-02, 7.830e-02));
	r1 += mul(s0_1_0, M4(9.384e-03, -4.557e-02, 4.663e-02, -6.272e-02, 6.900e-02, 2.305e-01, 6.420e-02, -1.491e-02, -1.144e-01, 5.817e-02, -8.092e-02, -2.831e-02, -9.643e-02, 1.617e-02, 5.957e-01, 5.380e-02));
	r0 += mul(s0_1_1, M4(3.428e-01, -1.742e-01, -8.187e-02, 5.596e-02, -3.473e-01, -7.880e-01, 1.444e-01, -7.894e-01, -2.627e-01, -1.263e+00, 3.514e-02, -4.040e-01, 7.836e-02, 1.841e-03, 1.220e-01, -2.852e-02));
	r1 += mul(s0_1_1, M4(-8.793e-02, -4.346e-01, 3.340e-03, 5.241e-01, -6.535e-02, -6.563e-02, -1.839e-01, -1.201e-01, 2.547e-01, -4.784e-01, -1.659e-01, -2.904e-03, -4.648e+00, 6.468e-01, -3.829e-02, 8.383e-02));
	r0 += mul(s0_1_2, M4(-3.509e-02, -1.953e-02, -2.646e-01, -1.473e-02, -1.031e-01, -1.412e-01, -6.156e-01, -1.405e-02, 5.532e-02, 8.705e-02, -6.157e-01, -1.877e-02, -2.742e-03, 1.599e-02, 4.603e-02, 3.400e-02));
	r1 += mul(s0_1_2, M4(-1.520e-01, -1.642e-01, -1.609e-02, 5.515e-02, 3.612e-01, -3.396e-01, -1.387e-01, -6.255e-01, -2.761e-01, -3.080e-01, 3.841e-02, -1.696e-01, 6.798e-02, -7.001e-01, 2.510e-02, 6.137e-02));
	r0 += mul(s0_2_0, M4(-6.257e-03, 4.107e-01, 3.123e-02, 3.916e-01, 6.242e-03, -2.855e-03, 1.784e-02, -1.738e-01, -5.167e-02, -4.871e-02, -9.345e-03, -4.282e-04, -3.271e-05, 3.053e-02, -3.379e-02, -3.582e-02));
	r1 += mul(s0_2_0, M4(3.003e-02, -8.715e-02, 2.056e-01, 5.531e-03, 4.945e-02, 9.342e-02, -4.754e-02, -1.026e-02, -5.087e-02, -1.445e-01, -2.302e-02, 3.703e-03, 8.693e-02, -5.580e-03, -8.588e-02, 1.413e-02));
	r0 += mul(s0_2_1, M4(-7.795e-02, 1.822e-01, 1.938e-01, -5.826e-02, -5.187e-02, -2.864e-01, 3.336e-02, -1.563e-01, -3.609e-03, 1.843e-01, -8.217e-02, -2.349e-02, 3.872e-02, 9.448e-02, 1.931e-02, 7.743e-02));
	r1 += mul(s0_2_1, M4(-2.094e-01, 3.154e-02, 3.467e-01, -4.772e-02, -4.286e-02, -5.317e-02, -1.386e-01, -3.242e-03, 2.750e-02, 1.993e-01, -1.298e-01, -1.085e-01, 3.061e-02, 1.487e-01, 3.032e-02, 4.477e-02));
	r0 += mul(s0_2_2, M4(-3.858e-03, 2.871e-02, 3.545e-01, 8.552e-02, -5.872e-02, -3.947e-02, -1.851e-01, 1.302e-02, -1.311e-02, -3.159e-02, 2.494e-01, 5.216e-03, 1.442e-02, -1.060e-02, 1.684e-01, -1.986e-02));
	r1 += mul(s0_2_2, M4(9.646e-02, -1.421e-01, -2.982e-02, 3.437e-02, 2.233e-01, 3.878e-03, -8.399e-02, -1.287e-01, 2.074e-01, 7.677e-02, -1.345e-02, 5.881e-02, 6.094e-02, -9.791e-02, 7.640e-03, 1.191e-02));
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
}
//!PASS 4
//!DESC out-shuffle (8x4)
//!BLOCK_SIZE 16
//!NUM_THREADS 64
//!IN INPUT, T0, T1
//!OUT OUTPUT
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = (Rmp8x8(tid.x) << 1) + blockStart;
	uint2 sz = GetOutputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = ((gxy >> 1) + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(3.139e-03, 8.985e-04, -1.889e-04, 1.261e-03, -5.903e-03, 3.496e-03, 3.441e-04, -5.119e-03, 1.772e-01, -3.445e-02, 1.584e-02, -1.383e-02, -8.297e-03, -3.088e-03, -1.468e-03, 2.850e-03));
	r0 += mul(s0_0_1, M4(2.664e-02, 1.796e-02, -1.251e-02, 1.314e-02, 6.755e-02, 6.486e-03, 2.088e-03, 5.553e-03, -1.392e-02, 1.573e-01, -1.145e-02, -1.611e-02, -2.838e-02, -8.016e-03, -3.522e-04, 5.845e-03));
	r0 += mul(s0_0_2, M4(1.482e-02, -7.604e-02, 5.021e-03, 1.676e-02, 2.232e-02, 7.552e-02, 8.105e-03, 2.017e-02, -5.032e-04, -9.330e-03, 7.022e-04, 1.406e-03, -1.928e-02, 5.029e-03, 7.254e-03, 4.023e-03));
	r0 += mul(s0_1_0, M4(3.323e-03, -7.636e-04, 8.045e-03, -3.506e-05, 8.211e-03, -1.565e-03, 9.498e-05, -3.068e-03, 7.027e-02, -3.942e-02, -2.212e-01, -1.023e-01, 8.173e-03, -9.459e-04, -4.595e-03, -1.693e-03));
	r0 += mul(s0_1_1, M4(-8.186e-01, 8.084e-02, 1.370e-02, 9.194e-02, 6.753e-02, 2.958e-03, 4.797e-02, 5.018e-02, 7.473e-03, 9.840e-02, -1.234e-03, 2.627e-01, 1.548e-02, 1.059e-02, -4.124e-02, -2.493e-02));
	r0 += mul(s0_1_2, M4(3.480e-02, 1.779e-02, 2.938e-02, -4.071e-02, 1.818e-02, 2.115e-01, 2.642e-02, -6.689e-01, 4.233e-03, 1.027e-02, 1.243e-03, -2.134e-03, 3.076e-01, 2.183e-01, -4.678e-01, -5.749e-02));
	r0 += mul(s0_2_0, M4(-7.278e-03, -4.246e-04, -1.305e-02, 7.525e-04, 2.647e-03, -1.344e-03, 3.515e-03, -3.007e-03, 6.745e-04, 5.317e-03, 6.323e-02, 1.630e-02, -6.196e-04, 1.446e-04, 3.714e-03, 1.315e-03));
	r0 += mul(s0_2_1, M4(2.599e-02, 1.010e-02, -1.401e-01, 6.899e-02, -5.089e-03, -1.107e-03, -2.684e-02, -6.772e-03, -5.106e-03, 5.839e-03, -1.944e-04, 1.584e-02, 2.469e-05, -2.264e-03, 1.751e-02, 1.134e-02));
	r0 += mul(s0_2_2, M4(3.333e-03, 2.281e-02, 6.149e-03, -3.008e-02, 1.096e-02, -1.460e-02, 1.470e-02, 4.846e-02, -6.159e-04, -1.820e-04, 6.490e-04, 1.511e-03, -1.728e-02, -4.350e-03, 5.111e-02, 1.771e-02));
	r0 += mul(s1_0_0, M4(6.114e-02, -3.915e-02, 8.793e-03, 4.277e-03, 1.023e-02, -8.098e-03, 3.987e-03, -3.357e-04, 8.405e-03, -5.601e-04, -4.022e-03, 2.401e-03, -3.212e-02, -1.679e-02, 7.632e-03, -6.963e-03));
	r0 += mul(s1_0_1, M4(-4.312e-03, 2.216e-02, 3.799e-04, -5.547e-03, -6.263e-02, 6.045e-02, 8.212e-03, -1.566e-02, 1.665e-01, 3.075e-02, 5.114e-03, -1.040e-02, -3.380e-03, 7.950e-02, 1.550e-03, -2.132e-02));
	r0 += mul(s1_0_2, M4(-1.962e-03, -1.993e-03, -2.871e-04, 1.456e-03, -5.007e-03, -3.666e-02, -7.894e-03, 1.196e-02, -3.210e-02, 1.096e-01, -1.196e-02, -1.083e-02, 1.854e-03, 5.622e-03, -1.764e-03, 1.432e-03));
	r0 += mul(s1_1_0, M4(2.396e-01, -2.407e-01, 2.776e-01, -2.271e-01, 6.664e-02, -1.948e-02, 3.378e-03, -3.811e-02, -1.642e-02, 9.405e-04, -1.032e-03, 5.590e-03, 1.210e-01, -1.745e-02, -4.066e-02, -6.524e-02));
	r0 += mul(s1_1_1, M4(-5.422e-03, 8.668e-02, -2.282e-03, 8.276e-02, -2.387e-01, 2.882e-01, -3.098e-01, 2.802e-01, 4.723e-02, 2.305e-02, 4.287e-01, 1.460e-01, 2.731e-02, -7.404e-01, -1.117e-02, 3.347e-02));
	r0 += mul(s1_1_2, M4(2.936e-03, -9.825e-04, 2.857e-03, -4.657e-03, 6.747e-03, -8.785e-02, 1.561e-02, -7.544e-02, -3.307e-02, -3.173e-02, -4.010e-02, 2.403e-01, -2.640e-03, 4.503e-03, 1.141e-03, 1.303e-03));
	r0 += mul(s1_2_0, M4(-3.231e-03, 7.359e-03, 7.541e-02, -2.142e-02, -4.360e-04, 3.923e-03, 1.681e-02, -7.809e-03, -7.110e-04, 5.736e-03, -3.931e-03, 7.600e-03, 2.961e-04, -7.648e-03, 3.964e-03, -5.418e-02));
	r0 += mul(s1_2_1, M4(-4.008e-03, -6.456e-03, -6.774e-03, 3.042e-02, 9.753e-03, -1.044e-02, -4.956e-02, 3.095e-02, 9.302e-03, 5.577e-04, 1.384e-02, -1.548e-02, -8.230e-03, 1.551e-03, 1.273e-02, -9.519e-02));
	r0 += mul(s1_2_2, M4(-3.854e-04, -2.702e-04, -1.035e-03, -1.388e-03, -5.707e-03, -8.554e-03, -7.779e-03, -2.386e-02, -5.865e-03, -5.180e-03, -1.215e-02, 6.680e-03, 5.240e-04, -3.911e-03, 1.609e-04, -5.117e-03));
	static const float3x3 RY = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081}, YR = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float2 opt = float2(GetOutputPt());
	float2 fpos = (float2(gxy) + 0.5) * opt;
	float3 yuv;
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.x), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.y), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.z), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.w), yuv.yz)), 1.0);
}
