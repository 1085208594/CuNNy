// CuNNy fast NVL - https://github.com/funnyplanter/CuNNy

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


//!MAGPIE EFFECT
//!VERSION 4
//!SORT_NAME CuNNy-0000284

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
Texture2D OUTPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!COMMON
#define O(t, x, y) t.SampleLevel(SP, pos + float2(x, y) * pt, 0)
#define V4 min16float4
#define M4 min16float4x4

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T4;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D T5;

//!PASS 1
//!DESC in (1x12)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT T0, T1, T2
#define L0(x, y) min16float(dot(float3(0.299, 0.587, 0.114), O(INPUT, x, y).rgb))
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	r0 += V4(6.093e-02, 1.179e-03, 1.806e-02, -6.992e-02) * s0_0_0;
	r1 += V4(3.015e-03, -4.224e-03, -2.180e-02, -2.643e-02) * s0_0_0;
	r2 += V4(1.540e-02, 1.100e-02, 6.360e-02, 4.463e-01) * s0_0_0;
	r0 += V4(3.691e-01, -8.520e-02, 2.036e-01, 7.349e-02) * s0_0_1;
	r1 += V4(-1.158e-02, 1.407e-02, 2.771e-02, 7.273e-02) * s0_0_1;
	r2 += V4(-8.737e-03, -1.135e-01, -8.099e-04, -3.525e-01) * s0_0_1;
	r0 += V4(1.523e-02, 9.094e-02, -2.778e-02, -6.861e-03) * s0_0_2;
	r1 += V4(4.242e-03, -4.563e-03, 2.327e-02, -2.772e-02) * s0_0_2;
	r2 += V4(-1.014e-02, -1.007e-02, -5.456e-02, -1.189e-01) * s0_0_2;
	r0 += V4(-7.544e-02, 1.298e-02, -3.757e-02, 3.096e-01) * s0_1_0;
	r1 += V4(-1.040e-02, 2.754e-03, 1.169e-01, 9.726e-03) * s0_1_0;
	r2 += V4(7.381e-01, -1.548e-01, 2.285e-01, -4.252e-01) * s0_1_0;
	r0 += V4(-2.978e-01, -5.645e-01, -9.956e-03, -2.510e-01) * s0_1_1;
	r1 += V4(-8.340e-01, -8.240e-01, -5.527e-01, -1.687e-01) * s0_1_1;
	r2 += V4(-7.441e-01, 5.611e-01, 4.398e-01, 5.656e-01) * s0_1_1;
	r0 += V4(2.889e-02, 5.995e-01, 7.107e-02, -1.362e-02) * s0_1_2;
	r1 += V4(-1.516e-02, 8.145e-01, 3.788e-01, -2.730e-02) * s0_1_2;
	r2 += V4(1.063e-02, 3.516e-03, 3.635e-02, -1.155e-01) * s0_1_2;
	r0 += V4(-3.925e-03, -1.148e-02, -2.253e-02, -1.005e-02) * s0_2_0;
	r1 += V4(9.480e-03, -2.408e-03, -2.715e-02, -2.228e-02) * s0_2_0;
	r2 += V4(-1.037e-02, -2.452e-02, -3.012e-01, -1.674e-01) * s0_2_0;
	r0 += V4(1.529e-02, 6.681e-01, 3.094e-02, 5.111e-02) * s0_2_1;
	r1 += V4(8.431e-01, -2.199e-03, 4.065e-02, 2.382e-01) * s0_2_1;
	r2 += V4(1.257e-02, -7.065e-02, -4.877e-01, -8.929e-02) * s0_2_1;
	r0 += V4(2.772e-03, -7.090e-01, -4.582e-02, 1.679e-02) * s0_2_2;
	r1 += V4(9.945e-03, 5.921e-03, 4.050e-04, 2.319e-01) * s0_2_2;
	r2 += V4(-5.354e-03, -6.593e-02, 6.959e-02, 2.536e-01) * s0_2_2;
	r0 += V4(3.827e-04, -2.238e-03, 2.436e-02, 1.030e-02);
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 += V4(2.205e-04, -5.557e-05, 3.012e-02, 1.121e-02);
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
	r2 += V4(-1.399e-04, 1.295e-03, -5.445e-04, -8.903e-04);
	r2 = max(r2, 0.0);
	T2[gxy] = r2;
}
//!PASS 2
//!DESC conv1 (12x12)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T0, T1, T2
//!OUT T3, T4, T5
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
#define L2(x, y) V4(O(T2, x, y))
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0, r2 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-5.777e-02, -7.987e-02, 6.276e-02, -4.556e-02, 1.018e-01, 1.195e-01, -2.211e-01, -3.642e-01, -1.125e-01, 5.469e-02, -1.809e-01, -5.226e-01, -9.027e-02, -3.471e-02, -1.661e-02, -3.533e-01));
	r1 += mul(s0_0_0, M4(5.123e-02, 5.479e-01, -7.038e-02, 2.947e-02, -1.204e-01, 1.255e+00, 3.350e-01, -6.073e-02, 1.237e-01, -6.696e-02, 6.152e-01, 4.519e-02, -9.777e-02, 6.450e-01, 9.453e-03, -1.386e-02));
	r2 += mul(s0_0_0, M4(-2.746e-02, 3.614e-02, -1.253e-01, 5.501e-03, -1.156e-01, 3.791e-02, 5.517e-02, 5.428e-02, 3.256e-02, 8.313e-02, -6.612e-02, 1.239e-01, 3.602e-02, -1.047e-01, 1.393e-01, -3.892e-02));
	r0 += mul(s0_0_1, M4(4.330e-02, 1.137e-01, 9.582e-02, 1.521e-01, -1.831e-01, 2.332e-01, -3.194e-01, 7.397e-02, -3.100e-02, 2.184e-01, -2.657e-01, -9.631e-02, -3.953e-01, 1.940e-01, -2.969e-01, 2.736e-02));
	r1 += mul(s0_0_1, M4(1.681e-01, -4.404e-01, -5.526e-02, 1.053e-02, 3.189e-01, 5.353e-01, 6.106e-01, 2.503e-01, -1.540e-01, -1.406e-02, 3.017e-01, 6.978e-02, 4.974e-02, -1.530e-01, 4.649e-01, 8.784e-02));
	r2 += mul(s0_0_1, M4(6.604e-02, 1.112e-02, -9.723e-02, 8.218e-02, 2.508e-01, 2.530e-02, -1.963e-01, 3.994e-01, 1.049e-01, 1.393e-01, 5.730e-01, 2.946e-01, -3.411e-02, 2.060e-01, -2.844e-01, 6.866e-02));
	r0 += mul(s0_0_2, M4(-2.888e-02, -2.594e-01, 1.802e-01, 1.767e-01, -6.054e-02, -3.067e-02, 2.813e-01, 2.593e-02, 1.188e-01, 2.547e-01, -5.077e-02, 6.198e-02, -1.560e-01, 7.406e-01, -1.280e-01, 5.003e-01));
	r1 += mul(s0_0_2, M4(1.235e-02, -1.885e-02, -2.371e-02, 3.796e-02, -4.256e-02, 7.840e-02, 1.614e-01, -6.687e-02, -1.400e-01, -2.161e-01, -6.118e-01, -1.998e-02, -4.127e-01, 1.306e-01, 4.036e-01, -6.883e-02));
	r2 += mul(s0_0_2, M4(-2.237e-02, -4.454e-02, -5.317e-02, -4.522e-02, 8.800e-03, -5.096e-02, 3.079e-02, -3.313e-02, -4.349e-02, -1.445e-01, -3.223e-02, -2.320e-01, 1.881e-01, -4.181e-02, 2.155e-01, -1.220e-01));
	r0 += mul(s0_1_0, M4(3.566e-02, -5.670e-02, -1.046e-01, 3.675e-01, 7.631e-02, 2.333e-01, 6.065e-02, 1.001e-01, 2.206e-01, 9.354e-02, 6.603e-01, 2.475e-01, 1.428e-01, -3.305e-01, -7.412e-03, 2.305e-01));
	r1 += mul(s0_1_0, M4(1.427e-01, -7.611e-01, 8.445e-02, -1.291e-02, 1.382e-01, -1.381e-01, 5.879e-01, 1.221e-01, -1.466e-02, -2.388e-01, -1.765e-01, -8.689e-02, -1.557e-01, 5.531e-02, -1.440e-01, 1.821e-01));
	r2 += mul(s0_1_0, M4(-9.542e-02, 1.767e-01, 4.112e-02, 4.370e-02, -7.265e-03, 5.381e-01, 7.760e-02, 3.788e-01, -5.806e-02, 3.733e-02, -2.287e-01, -1.534e-01, 3.115e-02, -2.759e-01, 1.684e-01, 1.276e-01));
	r0 += mul(s0_1_1, M4(1.191e-01, 7.819e-01, -3.877e-01, -8.394e-01, -1.450e-01, 5.129e-01, -1.628e-01, -1.744e-02, -2.194e-01, -2.876e-01, 8.412e-03, -4.185e-01, -1.437e-01, -1.934e-01, 3.012e-01, -5.059e-01));
	r1 += mul(s0_1_1, M4(4.223e-01, -9.950e-01, 4.235e-01, 3.639e-01, 6.975e-03, 6.429e-02, 9.255e-02, -2.616e-02, -2.678e-01, -1.562e-01, -6.096e-01, 1.664e-01, 5.159e-01, 3.319e-02, -2.189e-01, -8.561e-02));
	r2 += mul(s0_1_1, M4(1.086e+00, -8.622e-02, -1.204e-01, 2.187e-01, -6.765e-02, 2.404e-01, 3.056e-02, 1.463e-01, 3.126e-01, 2.547e-01, -1.029e-01, 5.446e-01, -5.742e-02, 6.443e-01, -5.748e-01, 9.259e-02));
	r0 += mul(s0_1_2, M4(9.544e-02, -1.224e-01, 3.344e-01, 2.711e-01, 9.546e-02, 1.629e-01, -8.242e-02, -2.525e-02, -4.580e-01, 6.269e-02, 3.502e-01, -5.831e-01, 6.877e-01, -4.253e-01, 9.853e-01, -6.257e-01));
	r1 += mul(s0_1_2, M4(-1.986e-01, 4.163e-01, -3.231e-01, -3.882e-02, -5.964e-02, -3.785e-03, -3.795e-02, 4.894e-02, -5.079e-01, 5.840e-01, 1.392e-01, 2.459e-01, 1.020e-01, -5.263e-01, 3.417e-01, -4.840e-01));
	r2 += mul(s0_1_2, M4(-4.578e-02, -1.567e-01, -1.422e-01, -2.687e-01, -1.862e-02, -2.173e-01, 9.401e-02, 1.984e-02, 2.496e-01, -2.844e-01, -3.369e-01, -4.489e-02, -7.669e-02, -5.863e-01, 4.858e-01, -4.166e-01));
	r0 += mul(s0_2_0, M4(9.373e-02, -1.958e-01, -1.255e-01, -1.529e-02, -4.554e-02, -1.054e-01, 1.247e-02, 1.173e-02, 6.957e-02, 4.509e-01, 2.008e-02, 2.944e-01, 1.430e-02, 2.385e-01, -1.424e-01, -1.677e-01));
	r1 += mul(s0_2_0, M4(-1.724e-01, 5.059e-01, 4.076e-01, -6.723e-03, 3.874e-03, 7.009e-02, -1.085e-01, -2.048e-02, 3.002e-01, -2.271e-01, -7.358e-02, 4.665e-02, -1.029e-01, -4.680e-02, -5.850e-01, -9.906e-02));
	r2 += mul(s0_2_0, M4(-4.151e-02, -2.842e-01, 6.352e-02, -1.678e-01, 1.742e-02, 1.646e-01, -1.985e-02, 3.309e-03, -1.874e-02, -9.574e-02, 6.593e-02, -4.041e-02, 6.347e-02, -1.506e-01, 1.218e-01, -1.160e-01));
	r0 += mul(s0_2_1, M4(2.864e-01, -1.377e-01, 3.196e-01, -1.956e-01, 3.059e-02, 6.759e-02, 9.491e-03, 1.919e-01, 6.809e-02, 2.056e-02, -2.217e-01, 4.092e-01, -1.026e-01, 4.863e-01, -4.198e-01, 2.024e-01));
	r1 += mul(s0_2_1, M4(6.258e-02, 3.897e-01, 6.504e-01, -4.116e-04, -1.188e-02, 3.321e-02, -1.412e-01, 8.363e-03, 9.509e-01, -1.148e-01, -4.070e-01, 2.207e-01, -7.788e-02, 1.427e-01, -5.847e-01, 5.721e-02));
	r2 += mul(s0_2_1, M4(-2.261e-01, 7.354e-01, 4.182e-02, 1.304e-01, -1.131e-02, 1.572e-01, 1.255e-01, 9.693e-02, -1.985e-01, 6.885e-01, -2.021e-01, 9.456e-02, -1.481e-01, 1.142e-01, 1.071e-03, 3.462e-02));
	r0 += mul(s0_2_2, M4(-1.676e-01, 2.387e-01, -1.946e-01, 2.862e-01, 8.438e-03, 2.376e-02, 7.288e-03, 9.576e-02, 1.268e-01, -3.903e-01, -1.863e-01, -6.549e-01, 8.889e-02, -6.566e-02, -4.748e-02, 3.650e-01));
	r1 += mul(s0_2_2, M4(-1.194e-01, 2.898e-01, -3.325e-01, 4.765e-02, -1.905e-02, -3.052e-02, -1.518e-01, -1.249e-02, 1.768e-01, -7.320e-02, 5.825e-01, -1.060e-03, -2.896e-01, -6.514e-01, -1.759e-01, -8.909e-02));
	r2 += mul(s0_2_2, M4(1.844e-01, -1.493e-01, -1.647e-01, -9.277e-02, -4.829e-03, 3.876e-02, 6.421e-02, 1.061e-03, -1.042e-01, -2.112e-01, 1.469e-01, -2.128e-01, -1.191e-01, -2.092e-01, -2.937e-02, -1.888e-02));
	r0 += mul(s1_0_0, M4(-1.020e-01, -1.967e-02, -4.810e-02, 1.090e-01, 1.212e-02, -3.614e-01, 1.381e-01, 3.418e-01, 4.822e-02, 2.229e-01, 1.771e-01, -3.142e-01, 2.749e-01, -8.284e-02, 3.983e-01, 1.120e+00));
	r1 += mul(s1_0_0, M4(1.313e-01, -1.786e+00, 1.403e-02, 1.567e-01, 1.450e-01, -5.757e-01, -2.528e-01, 2.685e-01, 2.096e-02, 1.253e-01, 1.332e-01, -7.926e-02, -5.248e-02, 8.324e-01, -8.257e-01, -3.018e-01));
	r2 += mul(s1_0_0, M4(1.399e-01, -2.290e-02, -2.329e-01, 9.731e-02, 1.368e-01, -2.015e-01, -2.204e-01, 4.868e-02, -1.614e-01, 2.702e-02, -3.011e-02, 9.022e-03, -3.703e-01, -1.620e-01, 1.566e-01, -4.021e-01));
	r0 += mul(s1_0_1, M4(-1.260e-01, -4.238e-01, 2.794e-01, -7.212e-01, 1.258e-01, -7.168e-01, 5.247e-01, 5.137e-01, 7.175e-02, 3.428e-01, -7.089e-02, -8.063e-01, 1.396e-01, -1.921e-01, -2.003e-01, 2.384e-01));
	r1 += mul(s1_0_1, M4(5.774e-01, -1.478e-01, -8.303e-02, 6.045e-01, -1.792e-01, 9.190e-03, -3.918e-01, -2.134e-01, -3.384e-02, -9.482e-02, 1.137e-02, -2.102e-02, 8.211e-01, -5.148e-01, -4.039e-01, -3.773e-02));
	r2 += mul(s1_0_1, M4(-1.316e+01, -2.074e-01, -3.228e-01, 5.249e-01, -2.663e-01, -2.202e-01, 2.193e-01, -1.533e-01, 8.910e-02, 2.326e-01, 1.965e-01, 8.170e-02, -5.996e-01, -4.554e-02, -1.461e-01, -8.736e-02));
	r0 += mul(s1_0_2, M4(2.604e-03, -6.934e-01, 7.255e-01, 3.712e-02, -3.757e-02, -1.959e-01, 7.936e-02, 1.782e-01, 1.174e-01, 3.435e-01, -2.764e-01, -3.448e-01, 6.037e-02, 5.795e-02, -3.291e-02, -1.206e-01));
	r1 += mul(s1_0_2, M4(-2.280e-01, 4.171e-01, 2.291e-01, -1.290e-02, -4.145e-02, 2.081e-02, -1.645e-01, -6.059e-03, -1.809e-02, -6.351e-02, 2.140e-01, 4.365e-04, 3.497e-01, -1.054e-01, 4.870e-01, -3.832e-02));
	r2 += mul(s1_0_2, M4(-3.135e-01, -3.662e-01, 3.545e-01, -6.165e-02, -4.775e-02, -7.266e-02, 4.652e-02, -3.726e-02, 1.352e-01, 1.090e-01, -2.765e-02, 7.018e-02, -3.659e-02, 2.625e-01, 2.126e-02, 1.411e-01));
	r0 += mul(s1_1_0, M4(-1.998e-02, 7.004e-02, 1.694e-01, 3.857e-01, -5.529e-02, 2.066e-01, -4.928e-01, -1.781e-01, -8.273e-02, -5.490e-02, 3.231e-02, -7.158e-01, 8.374e-02, -4.063e-01, -4.309e-02, -4.123e-01));
	r1 += mul(s1_1_0, M4(1.821e-01, -6.571e-01, -2.147e-01, -7.434e-02, 3.825e-01, -3.955e-02, 2.226e-01, 5.037e-01, -1.170e-01, 2.413e-01, -2.061e-01, 1.840e-02, -4.079e-01, 5.996e-01, 3.335e-01, -1.451e-01));
	r2 += mul(s1_1_0, M4(-1.504e-01, -5.200e-02, -2.183e-01, -1.576e-01, -8.375e-02, 2.301e-01, -4.714e-01, 3.115e-01, 2.123e-01, 1.843e-02, 2.030e-01, 2.143e-02, 3.652e-01, -2.086e-01, 4.221e-01, 1.179e-01));
	r0 += mul(s1_1_1, M4(4.026e-02, 6.237e-01, 1.450e-01, -3.018e+00, -3.436e-02, 2.402e-01, -4.061e-01, -4.397e+00, 9.305e-02, -2.618e-01, -3.076e-01, 2.524e+00, -2.405e-01, 8.349e-01, 1.528e-01, 1.142e-01));
	r1 += mul(s1_1_1, M4(4.771e-01, 1.234e-01, -3.426e-02, 5.505e-03, -9.574e-02, 7.263e-02, -3.803e-01, 3.000e-01, -4.035e-01, -9.846e-02, 5.370e-02, -1.410e-01, -9.262e-02, 5.669e-02, -1.016e+00, -3.096e-01));
	r2 += mul(s1_1_1, M4(-5.336e-02, 9.959e-01, 4.388e-01, 8.652e-01, 3.212e-01, -6.813e-02, 6.308e-01, 7.285e-01, -2.450e-01, -2.763e-01, 1.527e-01, -4.012e-01, -4.260e-02, 3.320e-01, -1.456e-02, 2.174e-01));
	r0 += mul(s1_1_2, M4(1.548e-01, 4.694e-01, 8.087e-02, -1.987e-01, 1.263e-01, 1.577e-01, 2.415e-01, -2.229e-01, -1.231e-01, -3.649e-01, -2.170e-01, 4.791e-01, -1.513e-01, 1.174e-01, -6.470e-02, 5.442e-03));
	r1 += mul(s1_1_2, M4(7.347e-02, 2.034e-01, -1.237e-01, 8.800e-02, -9.260e-02, -7.253e-02, 1.057e-01, 7.810e-03, 3.271e-01, 2.587e-01, -1.001e-01, -4.213e-02, -1.868e-01, -2.951e-02, 8.233e-01, 8.524e-02));
	r2 += mul(s1_1_2, M4(1.072e-03, -3.817e-01, 4.365e-01, 2.738e-01, 1.027e-01, -1.360e-01, 1.057e-01, -7.690e-02, -2.378e-01, 1.775e-01, -1.944e-01, 7.331e-02, 9.861e-02, 1.937e-02, -7.298e-02, 6.963e-02));
	r0 += mul(s1_2_0, M4(4.046e-02, 1.860e-01, 9.054e-02, 4.007e-02, -1.387e-02, 3.100e-01, 1.076e-01, 5.893e-01, 5.466e-03, -1.061e-02, 5.305e-02, -4.986e-01, -7.757e-02, -4.821e-01, -3.777e-01, 4.410e-02));
	r1 += mul(s1_2_0, M4(4.423e-02, 2.170e-02, 7.886e-02, -8.420e-02, 1.841e-01, -1.184e-01, 3.947e-01, 3.991e-02, 1.165e-02, -1.288e-01, -5.882e-02, 2.572e-02, -1.694e-01, -5.973e-02, -1.339e-01, 2.909e-01));
	r2 += mul(s1_2_0, M4(-1.696e-02, 3.218e-02, 6.470e-02, 1.254e-02, -9.755e-02, 3.720e-01, -1.027e-01, 1.763e-01, -3.459e-03, 1.163e-01, -7.301e-02, 5.724e-02, 6.227e-02, -2.871e-01, -1.724e-01, -1.059e-01));
	r0 += mul(s1_2_1, M4(3.430e-02, 8.813e-02, 3.648e-02, -1.161e-01, -1.353e-01, 2.306e-01, -9.448e-02, 8.031e-02, 6.565e-03, -3.350e-01, 2.144e-01, -2.010e-01, 1.025e-02, -6.005e-01, 1.319e-01, 1.229e-01));
	r1 += mul(s1_2_1, M4(3.601e-02, 9.107e-02, 6.350e-02, -1.131e-01, 1.109e-01, 3.103e-02, -2.353e-01, -6.108e-02, -1.191e-01, -2.508e-01, -3.132e-01, 3.166e-02, -7.809e-02, -1.410e-01, 5.570e-01, 2.208e-01));
	r2 += mul(s1_2_1, M4(9.646e-03, 9.264e-02, 1.042e-01, -6.475e-02, -1.724e-01, 7.046e-01, 1.047e-01, 2.703e-01, 2.191e-01, -3.916e-01, 2.025e-02, 4.454e-03, 1.667e-02, -3.255e-01, -3.583e-01, -1.384e-01));
	r0 += mul(s1_2_2, M4(7.007e-02, 7.491e-02, -2.790e-02, -3.849e-03, -3.841e-03, 2.192e-01, -1.163e-01, 1.061e-01, 1.188e-02, -3.359e-01, 2.330e-01, -2.298e-01, 1.402e-02, 1.938e-01, 2.667e-02, 5.638e-02));
	r1 += mul(s1_2_2, M4(1.150e-01, 6.887e-02, -1.858e-01, 2.215e-02, -6.768e-02, 5.903e-02, -5.426e-01, 7.530e-02, 8.224e-02, 1.597e-01, 5.759e-01, -4.902e-02, -2.975e-02, 6.964e-02, 2.079e-02, -5.049e-02));
	r2 += mul(s1_2_2, M4(-1.053e-02, 1.516e-01, 1.362e-01, 1.444e-01, 6.583e-04, -1.475e-02, 8.530e-02, 5.225e-02, 1.594e-02, -1.170e-01, -1.155e-01, -3.028e-02, -6.140e-02, 1.104e-01, 1.384e-01, 3.929e-02));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(3.364e-02, 1.448e-02, -5.697e-02, 1.686e-01, -1.408e-02, -2.816e-02, 1.198e-01, -2.270e-01, -7.169e-02, 3.355e-02, -1.766e-02, -1.916e-01, 2.210e-02, -1.266e-02, 1.686e-02, 6.613e-02));
	r1 += mul(s0_0_0, M4(-2.879e-03, -1.097e+00, 4.640e-02, 6.716e-02, 1.862e-02, 1.360e-01, -3.274e-01, -5.587e-02, 2.992e-02, 4.372e-01, -8.221e-02, -2.087e-02, -6.616e-02, 6.544e-03, -6.336e-02, -1.665e-02));
	r2 += mul(s0_0_0, M4(5.292e-02, 1.591e-02, -7.245e-02, 6.115e-02, 1.672e-03, -7.545e-02, 6.749e-02, -6.628e-02, -3.273e-02, -4.648e-02, -3.772e-02, 6.567e-02, -3.735e-03, -1.173e-02, 7.278e-02, -3.821e-02));
	r0 += mul(s0_0_1, M4(6.855e-03, 1.646e-01, -1.149e-02, -3.582e-03, 7.160e-02, -2.046e-01, -4.596e-01, -4.072e-01, 1.079e-01, -4.617e-01, 1.086e-01, -2.154e-01, 4.015e-02, 1.074e-01, 9.512e-03, 2.376e-01));
	r1 += mul(s0_0_1, M4(8.337e-03, -1.918e-01, 4.251e-02, 6.482e-02, -9.320e-02, -4.403e-01, 4.596e-01, 4.292e-02, -2.648e-01, 4.018e-01, -1.688e-01, -1.781e-01, -5.610e-02, -5.371e-01, -3.223e-01, 3.348e-02));
	r2 += mul(s0_0_1, M4(-1.938e-01, 9.888e-02, -1.469e-01, 1.091e-01, 2.482e-01, 1.728e-01, 5.567e-01, 1.863e-01, 4.112e-01, -2.959e-01, 4.796e-01, -2.560e-01, 1.003e-01, -9.395e-02, -8.814e-02, -9.744e-02));
	r0 += mul(s0_0_2, M4(-6.160e-02, 1.342e-01, 1.925e-01, -1.347e-01, -6.072e-02, 8.348e-01, -1.954e-01, 1.705e-02, 1.644e-02, -3.258e-01, 1.517e-01, -4.246e-01, 2.730e-02, -7.144e-02, 1.470e-01, 3.116e-01));
	r1 += mul(s0_0_2, M4(1.298e-01, 1.587e-01, -5.480e-02, 9.946e-02, 1.438e-01, -1.552e-02, 3.682e-01, 1.214e-01, 1.318e-01, -1.082e+00, -2.360e-01, -1.675e-01, -1.450e-01, 3.078e-02, -1.636e-01, -8.083e-02));
	r2 += mul(s0_0_2, M4(7.573e-02, -4.428e-02, -3.857e-01, -5.945e-02, -1.520e-01, 8.675e-02, -7.520e-02, 1.723e-01, -2.669e-02, 1.698e-01, -2.051e-02, -1.460e-01, 6.438e-03, -1.889e-01, -6.471e-02, -1.613e-01));
	r0 += mul(s0_1_0, M4(-3.260e-02, 1.032e-01, 2.055e-02, 3.319e-02, -6.781e-02, 2.769e-01, -1.915e-01, -3.200e-01, -4.642e-02, 1.690e-01, -1.489e-01, -2.129e-01, 3.907e-02, -9.495e-02, 5.211e-02, 1.476e-01));
	r1 += mul(s0_1_0, M4(7.737e-02, -1.214e+00, -3.306e-02, -2.052e-02, -4.538e-02, 5.220e-01, 1.099e-01, -1.716e-02, -3.624e-02, 3.444e-01, -6.641e-02, 5.147e-02, -6.421e-02, -3.081e-01, -2.641e-01, -5.674e-02));
	r2 += mul(s0_1_0, M4(-4.707e-02, 1.509e-01, -1.626e-01, -6.139e-02, 1.619e-01, 1.654e-01, 2.492e-01, 3.455e-01, -2.731e-02, 1.374e-01, 1.180e-01, 1.147e-01, -3.870e-02, -3.453e-02, 1.323e-01, -9.839e-02));
	r0 += mul(s0_1_1, M4(7.010e-02, -1.756e-01, 3.057e-01, -1.885e+00, 1.070e-01, 5.175e-02, 3.698e-01, 6.528e-01, 3.936e-02, -1.731e-01, -2.725e-01, -1.342e-02, 1.645e-01, -2.266e-01, 1.299e-01, 4.324e-01));
	r1 += mul(s0_1_1, M4(1.749e-02, -6.543e-01, 6.529e-03, -1.567e-01, -1.525e-01, -1.036e+00, -5.583e-01, -1.104e-01, -4.385e-02, 2.672e-01, 1.694e-01, 3.597e-02, -1.334e-01, -4.642e-01, -7.605e-01, -6.065e-02));
	r2 += mul(s0_1_1, M4(1.226e-01, 1.856e-01, 1.051e-01, 1.995e-01, -5.065e-01, -3.215e-01, -1.453e-01, -3.760e-01, 2.319e-01, -7.771e-02, 8.101e-02, -1.048e-02, -3.272e-02, -2.266e-01, -6.800e-02, -2.706e-01));
	r0 += mul(s0_1_2, M4(9.321e-01, 3.835e-01, 1.116e-01, 2.085e-01, -1.532e-01, -6.281e-02, 2.455e-02, 3.261e-01, 5.137e-02, -3.545e-01, 1.147e-01, 8.776e-02, 9.136e-02, -6.072e-01, 1.783e-01, 9.888e-02));
	r1 += mul(s0_1_2, M4(2.506e-01, 1.666e-01, 3.537e-01, 4.561e-01, 5.459e-02, 1.678e-01, -2.758e-01, -8.489e-02, 9.028e-03, -3.226e-01, 3.706e-01, -6.276e-02, -2.115e-02, -1.939e-01, -4.315e-01, -3.825e-02));
	r2 += mul(s0_1_2, M4(-3.193e-01, 1.163e-01, 6.621e-01, 5.098e-01, 1.433e-01, 6.507e-01, 1.090e-01, 2.744e-01, -7.973e-02, -1.974e-01, -1.456e-01, -1.718e-01, 4.960e-02, 1.041e-01, 1.093e-02, 8.106e-02));
	r0 += mul(s0_2_0, M4(-1.403e-03, -7.746e-02, 2.890e-02, 1.615e-01, -5.110e-02, -1.141e-01, -2.261e-01, -3.771e-01, 5.782e-03, -2.002e-02, -2.523e-03, -2.771e-02, -1.366e-02, -3.125e-02, 6.497e-02, 2.782e-01));
	r1 += mul(s0_2_0, M4(-2.215e-02, 7.166e-02, 2.822e-01, -9.293e-03, -1.831e-01, -1.514e-01, -1.450e-02, 8.861e-02, -1.034e-02, 1.213e-01, 6.195e-02, 7.726e-03, 3.258e-02, -1.774e-01, -5.243e-02, -9.688e-02));
	r2 += mul(s0_2_0, M4(-1.124e-02, 3.052e-02, -2.218e-02, -1.273e-02, 5.900e-02, -9.757e-02, -1.836e-01, -8.228e-02, -2.529e-02, 6.948e-02, 5.661e-02, 5.426e-02, -1.800e-02, -4.880e-02, -3.291e-02, -2.706e-02));
	r0 += mul(s0_2_1, M4(6.159e-02, -3.565e-01, -7.745e-02, -3.050e-01, -1.075e-01, -5.734e-01, -3.573e-02, -2.013e-01, -8.876e-03, -1.371e-01, -1.124e-01, 2.121e-01, -4.541e-02, -2.445e-02, -3.200e-02, -2.541e-01));
	r1 += mul(s0_2_1, M4(2.266e-02, 4.085e-01, 1.396e-01, -1.168e-01, -5.098e-01, 3.136e-01, 1.118e-01, -2.162e-01, 2.594e-02, -1.073e-01, -2.686e-01, 1.499e-01, -7.060e-02, -5.726e-02, -3.506e-01, -9.975e-02));
	r2 += mul(s0_2_1, M4(3.430e-02, -5.152e-03, 7.935e-02, -1.679e-01, 1.479e-01, -3.669e-01, 1.921e-01, -1.421e-01, 4.089e-02, 4.129e-02, -3.123e-03, 7.140e-02, 1.323e-01, -2.373e-01, -5.130e-02, -2.006e-01));
	r0 += mul(s0_2_2, M4(1.890e-01, -6.147e-01, 3.355e-02, -4.027e-02, -3.064e-02, -4.489e-01, 1.360e-01, 1.518e-01, 2.565e-02, 1.348e-01, 3.732e-02, 4.017e-02, -3.626e-02, -4.539e-01, -5.905e-02, -1.873e-02));
	r1 += mul(s0_2_2, M4(8.009e-02, 2.665e-01, 9.214e-02, 1.821e-01, -1.421e-01, 9.311e-02, 4.433e-01, -7.429e-02, -3.546e-02, -1.206e-01, -1.645e-01, 4.490e-02, -1.757e-03, -5.586e-03, 1.470e-01, 5.166e-02));
	r2 += mul(s0_2_2, M4(2.024e-01, -1.763e-01, 1.138e-01, -4.314e-02, 4.435e-02, -1.360e-01, -1.828e-01, -1.452e-01, -6.713e-02, -2.056e-01, -1.460e-01, -1.083e-01, 5.904e-02, -1.372e-01, -1.489e-01, -1.064e-01));
	r0 = max(r0, 0.0);
	T3[gxy] = r0;
	r1 = max(r1, 0.0);
	T4[gxy] = r1;
	r2 = max(r2, 0.0);
	T5[gxy] = r2;
}
//!PASS 3
//!DESC conv2 (12x8)
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN T3, T4, T5
//!OUT T0, T1
#define L0(x, y) V4(O(T3, x, y))
#define L1(x, y) V4(O(T4, x, y))
#define L2(x, y) V4(O(T5, x, y))
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 sz = GetInputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0, r1 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(1.822e-01, -9.367e-02, 2.348e-02, -2.559e-02, -3.986e-01, 2.835e-01, 1.210e-02, 1.341e-01, -1.470e-01, 1.372e-01, 9.642e-03, -2.817e-02, -1.243e-02, -1.646e-01, -3.588e-03, -1.152e-01));
	r1 += mul(s0_0_0, M4(3.211e-02, 4.272e-02, 8.060e-02, -2.935e-02, -6.896e-02, 8.732e-02, -4.310e-02, -1.225e-02, 1.259e-02, 3.308e-02, -4.288e-02, 9.862e-04, -2.845e-02, -3.626e-02, 2.243e-02, 4.322e-02));
	r0 += mul(s0_0_1, M4(9.067e-02, 1.242e-02, -2.112e-03, 1.762e-01, 3.788e-02, 2.244e-01, -2.741e-02, 1.090e-01, -6.763e-02, -5.960e-02, -4.617e-03, -3.028e-02, 1.136e-01, -4.150e-01, 1.535e-03, -1.880e-01));
	r1 += mul(s0_0_1, M4(1.394e-01, -1.162e-01, 1.901e-01, 2.454e-01, -5.012e-02, 1.224e-01, 2.046e-01, 7.406e-02, -1.347e-01, 1.274e-01, -6.287e-03, -1.269e-01, -5.315e-02, -3.416e-01, -2.712e-02, 1.241e-02));
	r0 += mul(s0_0_2, M4(1.845e-02, -9.496e-03, 1.130e-02, -1.110e-01, -3.468e-02, 1.196e-03, 9.654e-03, -2.980e-02, -1.192e-02, -2.106e-02, -4.255e-03, -2.458e-02, 8.000e-03, 5.923e-02, 5.619e-04, 2.086e-01));
	r1 += mul(s0_0_2, M4(-1.801e-02, 7.399e-02, 3.677e-02, 7.081e-02, -4.392e-03, 2.879e-02, 1.370e-02, 1.015e-01, -1.864e-03, -6.812e-02, -1.398e-02, 3.709e-02, 6.422e-02, -9.034e-03, -7.112e-02, -7.691e-02));
	r0 += mul(s0_1_0, M4(-7.043e-01, 4.160e-01, -1.164e-01, -2.425e-01, 5.315e-01, -2.065e-01, 1.281e-01, 6.840e-02, 5.353e-01, -4.365e-01, -4.525e-02, -4.964e-01, -1.043e+00, -1.900e-01, -4.349e-02, -1.332e-01));
	r1 += mul(s0_1_0, M4(-1.058e-02, 3.780e-02, -1.978e-01, -2.397e-01, 2.085e-01, 9.936e-02, 4.089e-02, 2.759e-02, -6.297e-02, 3.442e-02, 9.777e-03, -1.014e-02, -2.610e-01, 2.332e-02, 4.380e-02, 3.890e-02));
	r0 += mul(s0_1_1, M4(9.029e-02, 2.046e-01, 1.361e-01, 2.510e-01, -6.518e-02, -7.481e-02, -1.923e-01, -5.895e-02, -1.014e-01, -4.463e-02, -5.995e-02, 2.164e-01, -3.562e-01, -9.009e-01, 4.298e-03, -1.333e+00));
	r1 += mul(s0_1_1, M4(-4.236e-02, -7.399e-02, 9.645e-01, 9.283e-01, 3.011e-02, 2.529e-01, -3.734e-02, -4.431e-02, 1.237e-01, 2.318e-02, -2.967e-01, -1.516e-01, -5.621e-01, -4.737e-01, -2.037e-01, -8.523e-02));
	r0 += mul(s0_1_2, M4(-7.446e-02, 2.043e-02, -1.540e-02, 8.643e-03, 3.211e-02, -1.942e-02, 5.784e-02, -2.351e-02, 5.156e-03, -3.569e-02, 2.031e-02, -1.116e-01, 1.250e-02, 7.733e-02, 3.094e-02, 3.668e-01));
	r1 += mul(s0_1_2, M4(-1.491e-02, 3.560e-02, -1.271e-01, 4.150e-01, -3.320e-03, -5.456e-02, -8.003e-02, -1.985e-02, -6.422e-02, -2.923e-03, 1.284e-01, -1.868e-02, 9.212e-02, -2.206e-01, -6.349e-01, -8.344e-01));
	r0 += mul(s0_2_0, M4(7.715e-01, -6.112e-02, -4.444e-02, 2.009e-01, 1.688e-01, 9.396e-02, -5.603e-02, 6.273e-02, -1.946e-01, 7.875e-02, -4.326e-01, -1.966e-01, -5.113e-01, 5.163e-02, -4.951e-01, -9.834e-02));
	r1 += mul(s0_2_0, M4(4.461e-01, -1.283e-01, -4.808e-02, 1.779e-02, 4.837e-02, 7.129e-03, -5.430e-02, -5.016e-02, -1.131e-01, -2.826e-02, 2.434e-02, 1.501e-02, -3.812e-02, 4.093e-02, 1.843e-02, 3.300e-02));
	r0 += mul(s0_2_1, M4(-1.057e-01, -1.586e-01, -4.685e-01, -7.328e-02, -6.107e-03, 4.128e-02, 4.654e-02, 5.736e-02, -4.902e-02, -5.833e-02, 2.841e-01, -2.900e-02, 3.566e-02, 1.107e-01, -1.749e-01, -1.821e-02));
	r1 += mul(s0_2_1, M4(-6.461e-02, 3.604e-01, 1.610e-01, 1.539e-01, 3.978e-02, 1.947e-01, 8.618e-02, 4.716e-02, 1.546e-02, 1.829e-01, -3.357e-02, -2.658e-03, -3.417e-01, -9.156e-02, 2.230e-02, 3.406e-02));
	r0 += mul(s0_2_2, M4(2.014e-02, -1.255e-02, 1.110e-01, 1.107e-01, -2.528e-03, 1.733e-02, -1.264e-02, -7.295e-02, -1.961e-02, -5.110e-02, -4.139e-02, -5.747e-02, 4.893e-03, -1.581e-02, 2.764e-02, 1.233e-01));
	r1 += mul(s0_2_2, M4(3.362e-02, -1.019e-02, 6.618e-02, 2.908e-01, 1.638e-03, 2.579e-02, -3.284e-03, 2.666e-02, -5.995e-02, -5.092e-02, 5.865e-02, -1.764e-01, 6.421e-02, 1.314e-01, 4.963e-02, -2.999e-02));
	r0 += mul(s1_0_0, M4(2.233e-01, -1.685e-01, 2.113e-02, 1.528e-01, 2.522e-03, -4.054e-02, -4.202e-02, 5.554e-03, -2.349e-01, 2.777e-02, -2.439e-02, -9.101e-02, -4.494e-02, 3.183e-03, -5.627e-02, -9.126e-02));
	r1 += mul(s1_0_0, M4(-3.563e-02, -5.857e-03, 8.277e-02, 7.251e-02, -3.379e-02, -5.247e-03, -3.215e-02, -2.306e-02, -4.632e-02, -1.030e-01, -5.091e-02, 1.874e-02, 1.734e-03, 3.408e-03, -3.459e-02, -7.556e-03));
	r0 += mul(s1_0_1, M4(1.899e-01, -3.832e-02, -3.050e-02, -2.979e-01, 2.209e-01, 1.460e-01, 4.062e-02, 1.466e-01, -9.969e-02, -2.846e-02, 5.337e-03, -1.082e-01, -9.929e-02, -5.747e-02, 4.502e-02, -1.116e-01));
	r1 += mul(s1_0_1, M4(1.381e-01, -7.334e-02, -7.709e-02, 4.148e-02, 9.642e-02, 1.646e-04, 3.631e-02, 2.473e-02, -4.837e-02, 5.713e-02, -1.655e-01, -3.135e-01, -1.905e-01, 1.668e-02, -2.095e-01, -2.580e-01));
	r0 += mul(s1_0_2, M4(5.997e-02, 1.130e-01, 8.715e-03, 1.966e-01, 1.160e-01, -1.704e-01, -6.244e-02, -1.027e-01, -3.476e-02, 8.065e-02, 7.347e-03, 1.952e-01, -2.645e-02, -1.255e-01, -3.904e-02, 6.576e-02));
	r1 += mul(s1_0_2, M4(1.164e-01, 5.650e-02, 7.447e-02, 1.132e-02, -1.548e-02, 3.187e-02, 1.078e-01, 6.371e-02, 2.813e-02, -1.047e-02, 2.257e-03, 9.449e-02, -1.982e-02, -2.516e-01, -9.124e-02, -1.430e-01));
	r0 += mul(s1_1_0, M4(-5.125e-01, 3.614e-02, -9.080e-02, 2.686e-01, -2.203e-02, -2.477e-02, 7.623e-02, 1.426e-01, 4.612e-01, 2.417e-02, -9.166e-03, -1.329e-03, -2.016e-01, -2.531e-01, 3.283e-02, -1.529e-01));
	r1 += mul(s1_1_0, M4(5.945e-02, -2.855e-02, 1.106e-01, 1.879e-01, -2.323e-02, -1.560e-02, 4.162e-02, 8.871e-02, 1.969e-01, 6.518e-02, 5.868e-02, 8.226e-02, -1.613e-01, -1.198e-01, -1.774e-02, -2.435e-02));
	r0 += mul(s1_1_1, M4(-2.663e-01, -6.902e-02, 1.142e-01, -1.332e+00, -8.460e-01, -7.989e-01, -1.295e-01, -2.764e-01, -1.132e-01, -7.267e-01, -9.884e-02, -4.248e-01, -1.404e-01, -4.405e-01, -1.263e-01, 2.363e-01));
	r1 += mul(s1_1_1, M4(-5.542e-01, -1.333e-01, -3.691e-02, -3.038e-01, -2.261e-01, -5.963e-02, 9.591e-02, 3.718e-02, -1.909e-01, -4.320e-01, -1.118e-01, -3.057e-01, 9.655e-03, -7.559e-01, 7.689e-02, 3.576e-01));
	r0 += mul(s1_1_2, M4(4.143e-03, 1.047e-01, -2.314e-02, 5.991e-01, -2.173e-01, -1.317e-01, 9.123e-02, -1.187e-01, 2.289e-02, -9.105e-02, -1.659e-02, 2.120e-01, 1.077e-01, 1.358e-02, 8.277e-02, -3.565e-01));
	r1 += mul(s1_1_2, M4(8.855e-02, -1.055e-01, -2.888e-01, -2.472e-01, -2.358e-01, -7.473e-01, -8.047e-01, 6.143e-02, 3.076e-02, -5.567e-02, -5.137e-01, -1.604e-01, -8.817e-02, -1.538e-01, -1.983e-01, -5.741e-01));
	r0 += mul(s1_2_0, M4(-2.203e-01, 1.276e-02, 3.421e-02, 1.294e-01, -9.631e-02, -8.649e-03, -1.298e-01, 2.465e-01, -9.526e-02, 5.236e-02, 1.062e-01, -1.391e-01, -2.968e-01, 1.057e-01, -3.031e-01, -8.930e-02));
	r1 += mul(s1_2_0, M4(-1.825e-01, 7.921e-02, -5.116e-02, -2.389e-02, 5.711e-02, -4.431e-02, 6.726e-02, 1.277e-01, -4.528e-02, 1.784e-02, -6.424e-02, -7.627e-02, -8.182e-02, 3.145e-02, 4.775e-02, 2.878e-02));
	r0 += mul(s1_2_1, M4(1.831e-01, 6.803e-02, 1.109e-01, -8.414e-02, -3.823e-01, -1.313e-01, -4.327e-01, -3.192e-01, -6.130e-02, 1.384e-01, 6.212e-03, 1.645e-02, -2.379e-02, 2.388e-01, 7.991e-01, 1.548e-01));
	r1 += mul(s1_2_1, M4(1.335e-01, -3.330e-01, -1.253e-01, -1.353e-01, -3.643e-01, -5.076e-02, 6.674e-02, 2.643e-02, -4.641e-03, 1.801e-01, -4.514e-02, -5.666e-02, 1.573e-02, 1.983e-01, 8.960e-02, 1.251e-01));
	r0 += mul(s1_2_2, M4(1.523e-02, -5.701e-02, -5.431e-02, -1.442e-02, 1.321e-02, -1.152e-01, -1.450e-01, -1.734e-01, 3.218e-02, 2.508e-03, 2.123e-02, 1.223e-02, -7.133e-02, 2.667e-02, -2.621e-01, -2.142e-01));
	r1 += mul(s1_2_2, M4(5.568e-02, 1.606e-01, 5.145e-02, -4.966e-02, -1.598e-02, -3.877e-01, -7.606e-01, 4.615e-02, 1.023e-02, -3.611e-02, -1.267e-02, -1.047e-01, -8.248e-02, -4.500e-02, -1.333e-01, -2.979e-01));
	s0_0_0 = L2(-1.0, -1.0); s0_0_1 = L2(0.0, -1.0); s0_0_2 = L2(1.0, -1.0);
	s0_1_0 = L2(-1.0, 0.0); s0_1_1 = L2(0.0, 0.0); s0_1_2 = L2(1.0, 0.0);
	s0_2_0 = L2(-1.0, 1.0); s0_2_1 = L2(0.0, 1.0); s0_2_2 = L2(1.0, 1.0);
	r0 += mul(s0_0_0, M4(-2.849e-02, 9.136e-04, 7.991e-03, 3.920e-02, -5.131e-02, -2.939e-01, 5.231e-03, -1.597e-01, -1.528e-01, 8.665e-02, 3.550e-03, 6.555e-02, -2.626e-01, 2.521e-01, 5.812e-03, 2.696e-03));
	r1 += mul(s0_0_0, M4(-2.631e-03, 1.737e-03, 4.182e-03, -5.484e-03, -5.194e-02, -1.406e-02, -3.479e-02, -6.799e-02, -1.213e-02, -1.590e-02, 4.505e-02, 4.520e-02, 2.059e-02, 3.787e-02, -9.528e-02, -1.292e-01));
	r0 += mul(s0_0_1, M4(9.877e-02, -8.720e-02, -1.690e-02, -1.250e-02, 6.520e-03, 2.419e-02, 8.698e-03, 1.341e-01, -3.033e-02, -2.844e-02, 3.321e-03, -2.013e-01, -7.358e-02, -3.167e-02, -1.437e-02, 3.433e-01));
	r1 += mul(s0_0_1, M4(1.463e-02, -3.188e-02, 2.130e-02, 4.783e-02, -3.677e-02, -1.043e-01, -1.499e-01, 9.733e-03, -1.150e-01, 2.550e-02, -1.160e-01, -1.108e-01, 1.267e-02, -7.063e-03, 2.951e-01, 9.937e-02));
	r0 += mul(s0_0_2, M4(2.357e-02, 4.410e-02, 5.028e-03, -5.728e-03, -3.614e-02, -6.652e-02, -6.231e-03, -5.711e-02, -2.642e-02, 2.575e-02, -2.332e-02, 8.558e-02, 1.301e-02, 2.591e-02, 2.194e-02, -6.911e-02));
	r1 += mul(s0_0_2, M4(4.185e-02, 1.934e-02, 3.553e-03, 2.121e-02, -2.779e-02, -2.124e-02, 6.442e-02, -4.409e-02, 2.485e-02, -1.599e-02, -5.256e-02, -1.548e-01, -9.810e-03, 1.227e-02, 4.085e-03, 2.707e-01));
	r0 += mul(s0_1_0, M4(-1.121e-01, 2.247e-01, 1.503e-02, -3.838e-02, -7.891e-01, 1.826e-01, -1.801e-03, -3.044e-02, 2.508e-01, -1.122e-01, -4.030e-02, 7.786e-03, 1.090e+00, -3.808e-02, 1.734e-01, -8.747e-02));
	r1 += mul(s0_1_0, M4(3.681e-02, 1.606e-02, -5.896e-02, -3.186e-02, -3.545e-01, -1.642e-02, -8.960e-02, -1.026e-01, 1.132e-01, -1.237e-01, 2.207e-02, 7.366e-02, 2.397e-01, 2.472e-02, -3.635e-03, -6.015e-02));
	r0 += mul(s0_1_1, M4(-7.510e-02, 9.041e-01, 4.627e-02, 9.363e-02, -1.958e-01, -4.856e-01, -1.313e-01, -8.772e-02, -4.978e-02, -3.350e-01, -1.323e-01, -1.160e+00, 9.451e-02, 6.417e-01, 7.746e-02, 1.324e+00));
	r1 += mul(s0_1_1, M4(5.020e-01, 1.062e-01, 7.301e-02, 9.113e-04, -1.499e-01, -6.426e-01, -3.283e-02, -7.323e-03, -1.627e-01, -1.135e-01, -1.831e-01, -2.294e-01, 4.623e-01, 1.039e+00, 5.520e-02, 1.042e-01));
	r0 += mul(s0_1_2, M4(-4.968e-02, 1.080e-01, 3.418e-03, -1.935e-01, 2.092e-02, -8.354e-02, 1.135e-01, -2.004e-01, 4.544e-02, 6.005e-02, 1.815e-02, 1.607e-01, -2.095e-02, -2.584e-02, -5.083e-02, -1.532e-01));
	r1 += mul(s0_1_2, M4(1.480e-02, 7.447e-02, 7.874e-02, 1.585e-01, -9.559e-02, -1.616e-01, 2.436e-02, -2.226e-01, 6.503e-02, -5.524e-02, -3.281e-01, -5.588e-01, 2.519e-02, 1.978e-01, 4.014e-01, 8.937e-01));
	r0 += mul(s0_2_0, M4(9.629e-01, 2.839e-02, 6.496e-03, 7.489e-02, 3.643e-02, -6.018e-02, 1.788e-02, -4.877e-03, -5.835e-01, -2.493e-02, 2.280e-01, -8.785e-03, 2.359e-01, -2.020e-02, -5.242e-02, 1.270e-02));
	r1 += mul(s0_2_0, M4(2.767e-01, -7.804e-02, -2.042e-02, 1.280e-02, 7.787e-02, -7.187e-02, 3.284e-02, 1.119e-02, -2.388e-01, 1.243e-01, 6.007e-03, -9.688e-04, 9.401e-02, 2.917e-02, 2.229e-02, 3.049e-02));
	r0 += mul(s0_2_1, M4(3.213e-01, -1.092e-01, -3.389e-02, 2.712e-01, -3.292e-02, 4.186e-02, 1.385e-02, -1.510e-02, -8.750e-03, 1.198e-01, 5.581e-02, -7.247e-02, 1.040e-01, -1.230e-01, -1.104e-01, 1.248e-01));
	r1 += mul(s0_2_1, M4(3.925e-01, 5.258e-01, 3.004e-02, 6.524e-02, -5.993e-02, 4.850e-03, 1.732e-02, 2.510e-02, -9.595e-02, -3.350e-01, -9.644e-02, -1.165e-01, 9.795e-02, 6.857e-03, -2.402e-02, -1.159e-02));
	r0 += mul(s0_2_2, M4(4.717e-02, 2.009e-02, -1.428e-02, -6.013e-02, -4.588e-02, -6.070e-03, -3.269e-03, -6.253e-03, 1.886e-02, -2.228e-02, 2.374e-02, 2.005e-02, -1.221e-02, 1.754e-02, -4.475e-02, -3.688e-02));
	r1 += mul(s0_2_2, M4(8.522e-02, 7.913e-04, -6.880e-02, 8.276e-02, -3.837e-02, -2.257e-03, -4.842e-02, -6.665e-02, 4.141e-03, -5.308e-02, -5.090e-02, -2.725e-01, -1.082e-02, 1.860e-03, 1.146e-02, 1.880e-01));
	r0 = max(r0, 0.0);
	T0[gxy] = r0;
	r1 = max(r1, 0.0);
	T1[gxy] = r1;
}
//!PASS 4
//!DESC out-shuffle (8x4)
//!BLOCK_SIZE 16
//!NUM_THREADS 64
//!IN INPUT, T0, T1
//!OUT OUTPUT
#define L0(x, y) V4(O(T0, x, y))
#define L1(x, y) V4(O(T1, x, y))
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = (Rmp8x8(tid.x) << 1) + blockStart;
	uint2 sz = GetOutputSize();
	if (gxy.x >= sz.x || gxy.y >= sz.y)
		return;
	float2 pos = ((gxy >> 1) + 0.5) * pt;
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0 = 0.0;
	s0_0_0 = L0(-1.0, -1.0); s0_0_1 = L0(0.0, -1.0); s0_0_2 = L0(1.0, -1.0);
	s0_1_0 = L0(-1.0, 0.0); s0_1_1 = L0(0.0, 0.0); s0_1_2 = L0(1.0, 0.0);
	s0_2_0 = L0(-1.0, 1.0); s0_2_1 = L0(0.0, 1.0); s0_2_2 = L0(1.0, 1.0);
	s1_0_0 = L1(-1.0, -1.0); s1_0_1 = L1(0.0, -1.0); s1_0_2 = L1(1.0, -1.0);
	s1_1_0 = L1(-1.0, 0.0); s1_1_1 = L1(0.0, 0.0); s1_1_2 = L1(1.0, 0.0);
	s1_2_0 = L1(-1.0, 1.0); s1_2_1 = L1(0.0, 1.0); s1_2_2 = L1(1.0, 1.0);
	r0 += mul(s0_0_0, M4(3.741e-03, 5.866e-04, 2.648e-03, 1.144e-04, 1.055e-02, 2.425e-03, -1.035e-03, 7.247e-04, 4.286e-03, 7.976e-04, 1.069e-03, 5.542e-03, 3.409e-03, -3.953e-03, 7.755e-04, -3.020e-05));
	r0 += mul(s0_0_1, M4(3.601e-02, -8.697e-03, -1.087e-02, 1.124e-02, 2.676e-02, -2.642e-02, -1.256e-02, 1.485e-02, 3.578e-01, 5.654e-03, 1.356e-01, 2.935e-02, -2.653e-02, 6.470e-02, -1.233e-02, -1.639e-02));
	r0 += mul(s0_0_2, M4(4.610e-02, -2.455e-02, -1.130e-02, 2.881e-02, 2.069e-02, -7.457e-03, -8.038e-03, 5.325e-03, -3.481e-02, -2.939e-01, -3.746e-02, -2.194e-01, 1.151e-02, -5.162e-03, -5.544e-03, 1.244e-03));
	r0 += mul(s0_1_0, M4(7.907e-03, -4.481e-04, -3.254e-03, -3.453e-03, 1.157e-03, 1.170e-02, 1.012e-02, 1.580e-02, 1.365e-03, 1.084e-03, 4.064e-04, -3.055e-03, 9.949e-02, -6.345e-03, 5.574e-02, -4.991e-03));
	r0 += mul(s0_1_1, M4(1.749e-01, -2.387e-02, -1.319e-02, -1.106e-02, -4.150e-01, -2.087e-01, 4.982e-01, 1.520e-03, -6.009e-03, 8.814e-04, 2.085e-01, -1.788e-02, -3.820e-01, 2.979e-01, -2.021e-01, 3.330e-01));
	r0 += mul(s0_1_2, M4(7.048e-02, 4.515e-01, -1.053e-02, -6.358e-01, -2.292e-02, -1.536e-01, -5.298e-03, -2.485e-02, 4.661e-03, 2.978e-03, 2.260e-04, -6.045e-02, 9.325e-03, -9.051e-02, 6.002e-03, -8.521e-02));
	r0 += mul(s0_2_0, M4(1.565e-03, 1.418e-03, 2.219e-03, -1.811e-04, 4.890e-03, -8.743e-04, -5.843e-03, -5.832e-03, -1.695e-03, 1.729e-03, -4.146e-03, -4.989e-04, -6.485e-03, 1.259e-03, 4.504e-02, -6.028e-04));
	r0 += mul(s0_2_1, M4(-3.102e-03, -6.804e-04, 1.017e-02, -1.139e-03, 5.383e-03, 2.252e-03, 1.372e-01, 9.245e-02, 1.987e-03, -6.083e-04, -7.208e-03, -3.656e-03, -8.123e-03, -7.642e-03, -9.009e-02, 2.874e-02));
	r0 += mul(s0_2_2, M4(-2.117e-03, -1.959e-02, -2.767e-03, 4.210e-02, 1.034e-02, 1.822e-03, -3.723e-04, 6.470e-02, 2.540e-03, -3.475e-03, 9.204e-03, -1.421e-02, -2.866e-03, -3.754e-03, 4.325e-04, -2.993e-02));
	r0 += mul(s1_0_0, M4(-1.284e-02, -4.104e-03, 1.434e-03, -2.444e-03, 9.155e-02, 1.227e-02, 8.387e-04, -8.046e-03, -2.250e-02, 4.783e-02, -9.662e-03, -6.025e-03, 3.898e-02, -7.349e-02, -1.642e-02, -5.431e-03));
	r0 += mul(s1_0_1, M4(-5.652e-02, 4.965e-02, 1.942e-02, -2.387e-02, 7.837e-02, 1.851e-01, 1.836e-02, -9.800e-03, -9.615e-03, -8.222e-04, -4.612e-03, 1.515e-04, -1.703e-02, 1.200e-02, 1.066e-02, -1.133e-02));
	r0 += mul(s1_0_2, M4(-2.579e-02, 2.372e-03, 1.084e-02, -7.557e-03, 8.790e-03, 2.068e-02, -1.045e-02, 3.378e-03, -4.854e-04, -8.998e-04, 6.668e-04, -2.874e-03, -2.926e-03, -4.730e-03, 1.697e-03, 1.414e-03));
	r0 += mul(s1_1_0, M4(2.229e-03, 6.917e-03, 2.198e-03, -2.034e-03, -2.333e-01, 2.329e-02, 1.260e-01, 1.584e-03, -5.918e-01, 3.740e-01, -2.588e-01, 3.624e-01, 3.584e-01, -4.073e-01, 3.227e-01, -3.896e-01));
	r0 += mul(s1_1_1, M4(2.134e-01, 9.497e-02, -8.021e-01, 2.938e-04, -1.368e-01, -5.176e-01, 1.027e-01, 4.642e-01, 4.381e-02, 5.017e-02, 8.275e-03, 3.704e-02, 6.880e-03, 1.624e-01, -9.403e-03, 1.626e-01));
	r0 += mul(s1_1_2, M4(8.708e-03, 1.597e-02, 2.212e-02, 1.849e-02, -1.707e-03, 3.498e-03, -5.001e-03, -2.777e-02, 2.176e-03, -1.078e-03, -7.163e-04, 1.797e-03, 3.529e-03, 5.778e-03, 3.343e-04, 1.572e-03));
	r0 += mul(s1_2_0, M4(-5.705e-03, -4.977e-03, 2.634e-03, 1.665e-03, 5.469e-03, -1.187e-04, -5.286e-02, -2.218e-02, 1.828e-03, -2.050e-02, -1.773e-01, 3.577e-02, -2.070e-02, 2.156e-02, 7.056e-02, -4.847e-02));
	r0 += mul(s1_2_1, M4(-1.343e-03, 6.211e-03, 1.753e-01, 1.096e-01, 2.327e-03, 1.498e-02, -5.847e-02, -9.741e-02, -8.382e-03, -7.616e-03, 2.692e-03, -2.095e-02, -4.169e-03, -1.512e-02, -1.273e-02, 1.195e-02));
	r0 += mul(s1_2_2, M4(-3.463e-03, 1.175e-02, 2.032e-02, 7.348e-02, 5.903e-04, -2.427e-03, -2.540e-03, -1.895e-02, 2.446e-05, 2.223e-03, 2.481e-03, -6.374e-04, 7.946e-04, -3.773e-03, -2.345e-03, -4.211e-03));
	r0 += V4(-1.380e-05, 1.142e-05, -1.284e-05, 4.672e-07);
	static const float3x3 RY = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081}, YR = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float2 opt = float2(GetOutputPt());
	float2 fpos = (float2(gxy) + 0.5) * opt;
	float3 yuv;
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.x), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 0.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 0)] = float4(mul(YR, float3(saturate(yuv.r + r0.y), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(0.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(0, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.z), yuv.yz)), 1.0);
	yuv = mul(RY, INPUT.SampleLevel(SL, fpos + float2(1.0, 1.0) * opt, 0).rgb);
	OUTPUT[gxy + int2(1, 1)] = float4(mul(YR, float3(saturate(yuv.r + r0.w), yuv.yz)), 1.0);
}
